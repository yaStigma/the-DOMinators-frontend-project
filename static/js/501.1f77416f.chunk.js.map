{"version":3,"file":"static/js/501.1f77416f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/WaterRatioPanel/WaterRatioPanel.module.css?a6e9","webpack://react-homework-template/./src/components/DailyNorma/DailyNorma.module.css?8e40","redux/water/operations.js","webpack://react-homework-template/./src/components/DailyNormaModal/DailyNormaModal.module.css?cfa8","components/DailyNormaModal/DailyNormaModal.jsx","components/DailyNorma/DailyNorma.jsx","webpack://react-homework-template/./src/components/AddWaterModal/AddWaterModal.module.css?e69a","components/AddWaterModal/AddWaterModal.jsx","components/WaterRatioPanel/WaterRatioPanel.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaSection\":\"WaterRatioPanel_dailyNormaSection__lejGd\",\"imageContainer\":\"WaterRatioPanel_imageContainer__JcPUd\",\"slider\":\"WaterRatioPanel_slider__+PTSK\",\"waterBottle\":\"WaterRatioPanel_waterBottle__uU5gu\",\"progressContainer\":\"WaterRatioPanel_progressContainer__f0Qbe\",\"progressTitle\":\"WaterRatioPanel_progressTitle__Z-RzH\",\"progressBar\":\"WaterRatioPanel_progressBar__dShpn\",\"progressMarkers\":\"WaterRatioPanel_progressMarkers__+UN4R\",\"marker\":\"WaterRatioPanel_marker__m+8sw\",\"tick\":\"WaterRatioPanel_tick__Gwmie\",\"progressLabels\":\"WaterRatioPanel_progressLabels__92zZK\",\"addWaterBtn\":\"WaterRatioPanel_addWaterBtn__mfzkw\",\"icon\":\"WaterRatioPanel_icon__ZAI64\",\"bottomSection\":\"WaterRatioPanel_bottomSection__pH0C5\"};","// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaContainer\":\"DailyNorma_dailyNormaContainer__KHUio\",\"title\":\"DailyNorma_title__X4SZH\",\"normaContainer\":\"DailyNorma_normaContainer__yAGrT\",\"normaValue\":\"DailyNorma_normaValue__Gd29x\",\"editButton\":\"DailyNorma_editButton__Zko6d\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://the-dominators-back-project.onrender.com';\n\nconst setAuthHeader = (accessToken) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n};\n\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\nexport const updateDailyNorma = createAsyncThunk(\n  'user/water-rate',\n  async ({ accessToken, dailyNorma }, thunkAPI) => {\n    try {\n      setAuthHeader(accessToken);\n\n      const response = await axios.patch('/users/water-rate', { daylyNorm: dailyNorma });\n\n      toast.success(response.data.message, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return response.data;\n    } catch (error) {\n      if (error.response) {\n        const { status, message, data } = error.response.data;\n        toast.error(`Error: ${message}`, {\n          duration: 4000,\n          position: 'top-right',\n        });\n\n        return thunkAPI.rejectWithValue({ status, message, data });\n      }\n\n      toast.error(`Error: ${error.message}`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return thunkAPI.rejectWithValue({\n        status: null,\n        message: error.message,\n        data: null,\n      });\n    }\n  }\n);\n\n\n\n\nexport const createWaterRecord = createAsyncThunk(\n  'water/createRecord',\n\n  async ({ accessToken, amount, time }, thunkAPI) => {\n    try {\n      setAuthHeader(accessToken);\n\n      const response = await axios.post('/water', {\n        amount,\n        date: new Date().toISOString().split('T')[0] + 'T' + time + ':00Z',\n      });\n\n      toast.success(response.data.message, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return response.data;\n    } catch (error) {\n      if (error.response) {\n        const { status, message, data } = error.response.data;\n        toast.error(`Error: ${message}`, {\n          duration: 4000,\n          position: 'top-right',\n        });\n\n        return thunkAPI.rejectWithValue({ status, message, data });\n      }\n\n      toast.error(`Error: ${error.message}`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return thunkAPI.rejectWithValue({\n        status: null,\n        message: error.message,\n        data: null,\n      });\n    }\n  }\n);\n\n\n\n// import axios from 'axios';\n// import { createAsyncThunk } from '@reduxjs/toolkit';\n// import { toast } from 'react-toastify';\n\n// axios.defaults.baseURL = 'https://the-dominators-back-project.onrender.com';\n\n// const setAuthHeader = (accessToken) => {\n//   axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n// };\n\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\n\n// export const updateDailyNorma = createAsyncThunk(\n//   'user/water-rate',\n//   async ({ accessToken, dailyNorma }, thunkAPI) => {\n//     try {\n//       setAuthHeader(accessToken);\n\n//       const response = await axios.put('/water-rate', { dailyNorma });\n\n//       toast.success(response.data.message, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return response.data;\n//     } catch (error) {\n//       if (error.response) {\n//         const { status, message, data } = error.response.data;\n//         toast.error(`Error: ${message}`, {\n//           duration: 4000,\n//           position: 'top-right',\n//         });\n\n//         return thunkAPI.rejectWithValue({ status, message, data });\n//       }\n\n//       toast.error(`Error: ${error.message}`, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return thunkAPI.rejectWithValue({\n//         status: null,\n//         message: error.message,\n//         data: null,\n//       });\n//     }\n//   }\n// );\n\n\n\n\n// export const createWaterRecord = createAsyncThunk(\n//   'water/createRecord',\n\n//   async ({ accessToken, amount, time }, thunkAPI) => {\n//     try {\n//       setAuthHeader(accessToken);\n\n//       const response = await axios.post('/water', {\n//         amount,\n//         date: new Date().toISOString().split('T')[0] + 'T' + time + ':00Z',\n//       });\n\n//       toast.success(response.data.message, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return response.data;\n//     } catch (error) {\n//       if (error.response) {\n//         const { status, message, data } = error.response.data;\n//         toast.error(`Error: ${message}`, {\n//           duration: 4000,\n//           position: 'top-right',\n//         });\n\n//         return thunkAPI.rejectWithValue({ status, message, data });\n//       }\n\n//       toast.error(`Error: ${error.message}`, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return thunkAPI.rejectWithValue({\n//         status: null,\n//         message: error.message,\n//         data: null,\n//       });\n//     }\n//   }\n// );\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"DailyNormaModal_modal__vJ3oF\",\"modalContent\":\"DailyNormaModal_modalContent__KvIF8\",\"navnButton\":\"DailyNormaModal_navnButton__YziaA\",\"closeButton\":\"DailyNormaModal_closeButton__Uur27\",\"formulas\":\"DailyNormaModal_formulas__wR-gI\",\"label\":\"DailyNormaModal_label__FhZVe\",\"formula\":\"DailyNormaModal_formula__LLd2F\",\"radioGroup\":\"DailyNormaModal_radioGroup__hW-rO\",\"radio-label\":\"DailyNormaModal_radio-label__j1hG2\",\"labelInput\":\"DailyNormaModal_labelInput__zcUdV\",\"inputWrapper\":\"DailyNormaModal_inputWrapper__yjnEa\",\"bluInput\":\"DailyNormaModal_bluInput__QSMvJ\",\"modal-content\":\"DailyNormaModal_modal-content__TsjF1\",\"radio-group\":\"DailyNormaModal_radio-group__CV3cj\",\"blu\":\"DailyNormaModal_blu__S7if2\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateDailyNorma } from '../../redux/water/operations';\nimport css from './DailyNormaModal.module.css';\n\nconst DailyNormaModal = ({ setModalVisible }) => {\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [requiredWater, setRequiredWater] = useState('0 L');\n  const [waterIntake, setWaterIntake] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    adjustTextareaHeight();\n    window.addEventListener('resize', adjustTextareaHeight);\n    return () => window.removeEventListener('resize', adjustTextareaHeight);\n  }, []);\n\n  const adjustTextareaHeight = () => {\n    const textarea = document.getElementById('infoText');\n    textarea.style.height = 'auto';\n    textarea.style.height = textarea.scrollHeight + 'px';\n  };\n\n  const calculateWaterIntake = useCallback(() => {\n    let V;\n    if (gender === 'woman') {\n      V = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      V = weight * 0.04 + activityTime * 0.6;\n    }\n\n    if (isNaN(V)) {\n      V = 0;\n    }\n\n    setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    calculateWaterIntake();\n  }, [calculateWaterIntake]);\n\n  const clearDefault = (event) => {\n    if (event.target.value === '0') {\n      event.target.value = '';\n    }\n  };\n\n  const restoreDefault = (event) => {\n    if (event.target.value === '') {\n      event.target.value = '0';\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    const dailyNorma = waterIntake * 1000;\n\n    if (dailyNorma > 5000) {\n      alert('Максимальная суточная норма потребления воды - 5000 мл');\n      return;\n    }\n\n    const authData = JSON.parse(localStorage.getItem('persist:auth'));\n    const accessToken = authData.accessToken.replace(/\"/g, '');\n\n    const result = await dispatch(updateDailyNorma({ accessToken, dailyNorma }));\n\n    if (!result.error) {\n      setModalVisible(false);\n    } else {\n      alert(`Ошибка: ${result.error.message}`);\n    }\n  };\n\n  return (\n    <div className={css.App}>\n      <div className={css.modal}>\n        <div className={css.modalContent}>\n          <div className={css.navnButton}>\n            <h2>My daily norma</h2>\n            <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n          </div>\n          <div className={css.formulas}>\n            <p>\n              <span className={css.label}>For girl:</span>\n              <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n            </p>\n            <p>\n              <span className={css.label}>For man:</span>\n              <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n            </p>\n          </div>\n          <textarea\n            id=\"infoText\"\n            readOnly\n            className={css.textarea}\n            value=\"* V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"\n          />\n          <form onSubmit={handleSave}>\n            <h4>Calculate your rate:</h4>\n            <div className={css.radioGroup}>\n              <label className={css.radioLabel}>\n                <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n              </label>\n              <label className={css.radioLabel}>\n                <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n              </label>\n            </div>\n            <div className={css.inputWrapper}>\n              <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"weight\"\n                name=\"weight\"\n                value={weight}\n                onChange={(e) => setWeight(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <div className={css.inputWrapper}>\n              <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"activity-time\"\n                name=\"activity-time\"\n                value={activityTime}\n                onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <div>\n              <p>\n                <span>The required amount of water in liters per day:</span>\n                <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n              </p>\n            </div>\n            <h4>Write down how much water you will drink:</h4>\n            <div className={css.inputWrapper}>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"water-intake\"\n                name=\"water-intake\"\n                value={waterIntake}\n                onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <button type=\"submit\" className={css.saveButton}>Save</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DailyNormaModal;\n\n\n\n\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from '../../redux/water/operations';\n// import css from './DailyNormaModal.module.css';\n\n// const DailyNormaModal = ({ setModalVisible }) => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = useCallback(() => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   }, [gender, weight, activityTime]);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [calculateWaterIntake]);\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake * 1000;\n\n//     if (dailyNorma > 5000) {\n//       alert('Максимальная суточная норма потребления воды - 5000 мл');\n//       return;\n//     }\n\n//     const authData = JSON.parse(localStorage.getItem('persist:auth'));\n//     const accessToken = authData.accessToken.replace(/\"/g, '');\n\n//     const result = await dispatch(updateDailyNorma({ accessToken, dailyNorma }));\n\n//     if (!result.error) {\n//       setModalVisible(false); // Закрываем модальное окно при успешном обновлении\n//     } else {\n//       alert(`Ошибка: ${result.error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className={css.App}>\n//       <div className={css.modal}>\n//         <div className={css.modalContent}>\n//           <div className={css.navnButton}>\n//             <h2>My daily norma</h2>\n//             <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n//           </div>\n//           <div className={css.formulas}>\n//             <p>\n//               <span className={css.label}>For girl:</span>\n//               <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//             </p>\n//             <p>\n//               <span className={css.label}>For man:</span>\n//               <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//             </p>\n//           </div>\n//           <textarea id=\"infoText\" readOnly className={css.textarea}>\n//             * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n//           </textarea>\n//           <form onSubmit={handleSave}>\n//             <h4>Calculate your rate:</h4>\n//             <div className={css.radioGroup}>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//               </label>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//               </label>\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"weight\"\n//                 name=\"weight\"\n//                 value={weight}\n//                 onChange={(e) => setWeight(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"activity-time\"\n//                 name=\"activity-time\"\n//                 value={activityTime}\n//                 onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div>\n//               <p>\n//                 <span>The required amount of water in liters per day:</span>\n//                 <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//               </p>\n//             </div>\n//             <h4>Write down how much water you will drink:</h4>\n//             <div className={css.inputWrapper}>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"water-intake\"\n//                 name=\"water-intake\"\n//                 value={waterIntake}\n//                 onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <button type=\"submit\" className={css.saveButton}>Save</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNormaModal;\n\n\n","import React, { useState } from 'react';\nimport styles from \"./DailyNorma.module.css\";\nimport DailyNormaModal from '../DailyNormaModal/DailyNormaModal'; // Путь к модальному окну\n\nconst DailyNorma = () => {\n  const [modalVisible, setModalVisible] = useState(false); // Состояние для видимости модального окна\n\n  const openModal = () => {\n    setModalVisible(true); // Функция для открытия модального окна\n  };\n\n  return (\n    <div className={styles.dailyNormaContainer}>\n      <p className={styles.title}>My daily norma</p>\n      <div className={styles.normaContainer}>\n        <span className={styles.normaValue}>1.5 L</span>\n        <button onClick={openModal} className={styles.editButton}>Edit</button> {/* Кнопка для открытия модального окна */}\n      </div>\n      {modalVisible && <DailyNormaModal setModalVisible={setModalVisible} />} {/* Отображение модального окна */}\n    </div>\n  );\n};\n\nexport default DailyNorma;\n\n\n\n\n\n// import styles from \"./DailyNorma.module.css\";\n\n// const DailyNorma = () => {\n//   return (\n//     <div className={styles.dailyNormaContainer}>\n//       <p className={styles.title}>My daily norma</p>\n//       <div className={styles.normaContainer}>\n//         <span className={styles.normaValue}>1.5 L</span>\n//         <button  className={styles.editButton}>Edit</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNorma;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"AddWaterModal_modal__dUadi\",\"modalContent\":\"AddWaterModal_modalContent__PCT0Q\",\"modalHeader\":\"AddWaterModal_modalHeader__blV6-\",\"modal-header\":\"AddWaterModal_modal-header__XGyFr\",\"close\":\"AddWaterModal_close__zmKJE\",\"modalBody\":\"AddWaterModal_modalBody__snhFv\",\"amountSelector\":\"AddWaterModal_amountSelector__fdnLF\",\"inputSaveContainer\":\"AddWaterModal_inputSaveContainer__BhJMK\",\"inputText\":\"AddWaterModal_inputText__8XBA6\",\"labelDistance\":\"AddWaterModal_labelDistance__1laX6\",\"labelDistanceText\":\"AddWaterModal_labelDistanceText__l4fKH\",\"saveButton\":\"AddWaterModal_saveButton__aM7B3\",\"buttonSelector\":\"AddWaterModal_buttonSelector__B-Mvf\",\"inputField\":\"AddWaterModal_inputField__6yl44\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createWaterRecord } from '../../redux/water/operations';\nimport css from './AddWaterModal.module.css';\n\nconst AddWaterModal = ({ setModalVisible }) => {\n  const [amount, setAmount] = useState(0);\n  const [time, setTime] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    populateTimeDropdown();\n  }, []);\n\n  const handleClose = () => {\n    setModalVisible(false);\n  };\n\n  const handleChangeAmount = (delta) => {\n    setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n  };\n\n  const handleSave = async () => {\n    const authData = JSON.parse(localStorage.getItem('persist:auth'));\n    const accessToken = JSON.parse(authData.accessToken);\n\n    if (!accessToken) {\n      alert('Unauthorized: No access token found');\n      return;\n    }\n\n    console.log('Access Token:', accessToken);\n\n    try {\n      await dispatch(createWaterRecord({ accessToken, amount, time }));\n      setModalVisible(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const populateTimeDropdown = () => {\n    const timeDropdown = document.getElementById('time');\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 5) {\n        const option = document.createElement('option');\n        option.value = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        option.textContent = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        if (hour === currentHour && minute === currentMinute) {\n          option.selected = true;\n          setTime(option.value);\n        }\n        timeDropdown.appendChild(option);\n      }\n    }\n  };\n\n  return (\n    <div className={css.modal}>\n      <div className={css.modalContent}>\n        <div className={css.modalHeader}>\n          <h2>Add water</h2>\n          <span className={css.close} onClick={handleClose}>&times;</span>\n        </div>\n        <div className={css.modalBody}>\n          <h4 className={css.labelDistance} htmlFor=\"amount\">Choose a value:</h4>\n          <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n          <div className={css.amountSelector}>\n            <button className={css.buttonSelector} onClick={() => handleChangeAmount(-50)}>-</button>\n            <span id=\"amount\">{amount}ml</span>\n            <button className={css.buttonSelector} onClick={() => handleChangeAmount(50)}>+</button>\n          </div>\n          <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n          <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n          <h4 className={css.labelDistance} htmlFor=\"value\">Enter the value of the water used:</h4>\n          <input className={css.inputText} type=\"number\" id=\"value\" value={amount} onChange={(e) => setAmount(Number(e.target.value))} />\n          <div className={css.inputSaveContainer}>\n            <input className={css.inputField} type=\"text\" id=\"autoFillInput\" readOnly value={`${amount}ml`} />\n            <button className={css.saveButton} onClick={handleSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddWaterModal;\n\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./WaterRatioPanel.module.css\";\nimport PropTypes from \"prop-types\";\nimport DailyNorma from \"../DailyNorma/DailyNorma\";\nimport AddWaterModal from \"../AddWaterModal/AddWaterModal\";\n\nconst ProgressBar = ({ sliderValue }) => {\n  const [sliderWidth, setSliderWidth] = useState(256);\n\n  useEffect(() => {\n    const updateSliderWidth = () => {\n      if (window.innerWidth >= 1440) {\n        setSliderWidth(350);\n      } else if (window.innerWidth >= 768) {\n        setSliderWidth(325);\n      } else {\n        setSliderWidth(256);\n      }\n    };\n\n    updateSliderWidth();\n    window.addEventListener(\"resize\", updateSliderWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", updateSliderWidth);\n    };\n  }, []);\n\n  return (\n    <svg\n      className={styles.progressBar}\n      width=\"100%\"\n      height=\"20\"\n      viewBox={`0 0 ${sliderWidth} 20`}\n    >\n      <rect x=\"0\" y=\"6\" width={sliderWidth} height=\"8\" fill=\"#d7e3ff\" rx=\"7\" />\n      <rect\n        x=\"0\"\n        y=\"6\"\n        width={(sliderValue / 100) * sliderWidth}\n        height=\"8\"\n        fill=\"#9ebbff\"\n        rx=\"7\"\n      />\n      <circle\n        cx={Math.min(Math.max((sliderValue / 100) * sliderWidth, 7), sliderWidth - 7)}\n        cy=\"10\"\n        r=\"7\"\n        fill=\"#ffffff\"\n        stroke=\"#407bff\"\n        strokeWidth=\"1\"\n      />\n    </svg>\n  );\n};\n\nProgressBar.propTypes = {\n  sliderValue: PropTypes.number.isRequired,\n};\n\nconst WaterTracker = ({ sliderValue, onAddWaterClick }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const handleAddWaterClick = () => {\n    setModalVisible(true);\n  };\n\n  return (\n    <div className={styles.dailyNormaSection}>\n      <DailyNorma />\n      <div className={styles.imageContainer}></div>\n      <div className={styles.bottomSection}>\n        <div className={styles.progressContainer}>\n          <span className={styles.progressTitle}>Today</span>\n          <ProgressBar sliderValue={sliderValue} />\n\n          <div className={styles.progressMarkers}>\n            {[0, 50, 100].map((value, index) => {\n              const isActive = sliderValue === value;\n              const fontSize = isActive ? 16 : 12;\n\n              return (\n                <div key={index} className={styles.marker}>\n                  <div className={styles.tick}></div>\n                  <span style={{ fontSize: `${fontSize}px` }}>\n                    {value}%\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        <button className={styles.addWaterBtn} onClick={handleAddWaterClick}>\n          <svg className={styles.icon} width=\"20\" height=\"20\">\n            <use href=\"images_auth/vectorbtn.svg#icon-vector-btn\"></use>\n          </svg>\n          Add Water\n        </button>\n      </div>\n\n      {modalVisible && <AddWaterModal setModalVisible={setModalVisible} />}\n    </div>\n  );\n};\n\nWaterTracker.propTypes = {\n  sliderValue: PropTypes.number.isRequired,\n  onAddWaterClick: PropTypes.func.isRequired,\n};\n\nexport default WaterTracker;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import styles from \"./WaterRatioPanel.module.css\";\n// import PropTypes from \"prop-types\";\n// import DailyNorma from \"../DailyNorma/DailyNorma\";\n\n// const ProgressBar = ({ sliderValue }) => {\n//   const [sliderWidth, setSliderWidth] = useState(256);\n\n//   useEffect(() => {\n//     const updateSliderWidth = () => {\n//       if (window.innerWidth >= 1440) {\n//         setSliderWidth(350);\n//       } else if (window.innerWidth >= 768) {\n//         setSliderWidth(325);\n//       } else {\n//         setSliderWidth(256);\n//       }\n//     };\n\n//     updateSliderWidth();\n//     window.addEventListener(\"resize\", updateSliderWidth);\n\n//     return () => {\n//       window.removeEventListener(\"resize\", updateSliderWidth);\n//     };\n//   }, []);\n\n//   return (\n//     <svg\n//       className={styles.progressBar}\n//       width=\"100%\"\n//       height=\"20\"\n//       viewBox={`0 0 ${sliderWidth} 20`}\n//     >\n//       <rect x=\"0\" y=\"6\" width={sliderWidth} height=\"8\" fill=\"#d7e3ff\" rx=\"7\" />\n//       <rect\n//         x=\"0\"\n//         y=\"6\"\n//         width={(sliderValue / 100) * sliderWidth}\n//         height=\"8\"\n//         fill=\"#9ebbff\"\n//         rx=\"7\"\n//       />\n//       <circle\n//         cx={Math.min(Math.max((sliderValue / 100) * sliderWidth, 7), sliderWidth - 7)}\n//         cy=\"10\"\n//         r=\"7\"\n//         fill=\"#ffffff\"\n//         stroke=\"#407bff\"\n//         strokeWidth=\"1\"\n//       />\n//     </svg>\n//   );\n// };\n\n// ProgressBar.propTypes = {\n//   sliderValue: PropTypes.number.isRequired,\n// };\n\n// const WaterTracker = ({ sliderValue, onAddWaterClick }) => {\n//   return (\n//     <div className={styles.dailyNormaSection}>\n//       <DailyNorma />\n//       <div className={styles.imageContainer}></div>\n//       <div className={styles.bottomSection}>\n//         <div className={styles.progressContainer}>\n//           <span className={styles.progressTitle}>Today</span>\n//           <ProgressBar sliderValue={sliderValue} />\n\n//           <div className={styles.progressMarkers}>\n//   {[0, 50, 100].map((value, index) => {\n//     const isActive = sliderValue === value;\n//     const fontSize = isActive ? 16 : 12;\n\n//     return (\n//       <div key={index} className={styles.marker}>\n//         <div className={styles.tick}></div>\n//         <span style={{ fontSize: `${fontSize}px` }}>\n//           {value}%\n//         </span>\n//       </div>\n//     );\n//   })}\n// </div>\n//         </div>\n\n//         <button className={styles.addWaterBtn} onClick={onAddWaterClick}>\n//           <svg className={styles.icon} width=\"20\" height=\"20\">\n//             <use href=\"images_auth/vectorbtn.svg#icon-vector-btn\"></use>\n//           </svg>\n//           Add Water\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// WaterTracker.propTypes = {\n//   sliderValue: PropTypes.number.isRequired,\n//   onAddWaterClick: PropTypes.func.isRequired,\n// };\n\n// export default WaterTracker;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"HomePage_homeContainer__6ghGM\",\"dailyNormaSection\":\"HomePage_dailyNormaSection__ZP+Dx\",\"waterTrackerSection\":\"HomePage_waterTrackerSection__tdyHv\",\"todayWaterListSection\":\"HomePage_todayWaterListSection__Rz2pC\"};","import { useState } from \"react\";\nimport WaterTracker from \"../../components/WaterRatioPanel/WaterRatioPanel\";\nimport styles from \"./HomePage.module.css\";\n\nconst HomePage = () => {\n  const [sliderValue, setSliderValue] = useState(0);\n\n  const handleSliderChange = (value) => {\n    setSliderValue(value);\n  };\n\n  const handleAddWater = () => {\n    setSliderValue((prev) => Math.min(prev + 10, 100));\n  };\n\n  return (\n    <div className={styles.homeContainer}>\n      <section className={styles.waterTrackerSection}>\n        <WaterTracker\n          sliderValue={sliderValue}\n          onSliderChange={handleSliderChange}\n          onAddWaterClick={handleAddWater}\n        />\n      </section>\n      <section className={styles.todayWaterListSection}>\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;"],"names":["axios","setAuthHeader","accessToken","concat","updateDailyNorma","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","thunkAPI","dailyNorma","response","_error$response$data","status","message","data","_context","prev","next","daylyNorm","sent","toast","duration","position","abrupt","t0","rejectWithValue","stop","_x","_x2","apply","arguments","createWaterRecord","_ref4","_callee2","_ref3","amount","time","_error$response$data2","_context2","date","Date","toISOString","split","_x3","_x4","setModalVisible","_useState","useState","_useState2","_slicedToArray","gender","setGender","_useState3","_useState4","weight","setWeight","_useState5","_useState6","activityTime","setActivityTime","_useState7","_useState8","requiredWater","setRequiredWater","_useState9","_useState10","waterIntake","setWaterIntake","dispatch","useDispatch","useEffect","adjustTextareaHeight","window","addEventListener","removeEventListener","textarea","document","getElementById","style","height","scrollHeight","calculateWaterIntake","useCallback","V","isNaN","toFixed","clearDefault","event","target","value","restoreDefault","handleSave","authData","result","preventDefault","alert","JSON","parse","localStorage","getItem","replace","error","_jsx","className","css","children","_jsxs","onClick","id","readOnly","onSubmit","type","name","checked","onChange","htmlFor","e","parseFloat","onFocus","onBlur","modalVisible","styles","DailyNormaModal","setAmount","setTime","populateTimeDropdown","handleChangeAmount","delta","prevAmount","Math","max","console","log","timeDropdown","now","currentHour","getHours","currentMinute","floor","getMinutes","hour","minute","option","createElement","toString","padStart","textContent","selected","appendChild","Number","ProgressBar","sliderValue","sliderWidth","setSliderWidth","updateSliderWidth","innerWidth","width","viewBox","x","y","fill","rx","cx","min","cy","r","stroke","strokeWidth","onAddWaterClick","DailyNorma","map","index","fontSize","href","AddWaterModal","setSliderValue","WaterTracker","onSliderChange"],"sourceRoot":""}