{"version":3,"file":"static/js/561.f99e6eab.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/WaterRatioPanel/WaterRatioPanel.module.css?a6e9","webpack://react-homework-template/./src/components/DailyNorma/DailyNorma.module.css?8e40","redux/water/dailyNormaModal.js","webpack://react-homework-template/./src/components/DailyNormaModal/DailyNormaModal.module.css?cfa8","components/DailyNormaModal/DailyNormaModal.jsx","components/DailyNorma/DailyNorma.jsx","redux/water/operations.js","webpack://react-homework-template/./src/components/AddWaterModal/AddWaterModal.module.css?e69a","components/AddWaterModal/AddWaterModal.jsx","components/WaterRatioPanel/WaterRatioPanel.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaSection\":\"WaterRatioPanel_dailyNormaSection__lejGd\",\"imageContainer\":\"WaterRatioPanel_imageContainer__JcPUd\",\"slider\":\"WaterRatioPanel_slider__+PTSK\",\"waterBottle\":\"WaterRatioPanel_waterBottle__uU5gu\",\"progressContainer\":\"WaterRatioPanel_progressContainer__f0Qbe\",\"progressTitle\":\"WaterRatioPanel_progressTitle__Z-RzH\",\"progressBar\":\"WaterRatioPanel_progressBar__dShpn\",\"progressMarkers\":\"WaterRatioPanel_progressMarkers__+UN4R\",\"marker\":\"WaterRatioPanel_marker__m+8sw\",\"tick\":\"WaterRatioPanel_tick__Gwmie\",\"progressLabels\":\"WaterRatioPanel_progressLabels__92zZK\",\"addWaterBtn\":\"WaterRatioPanel_addWaterBtn__mfzkw\",\"icon\":\"WaterRatioPanel_icon__ZAI64\",\"bottomSection\":\"WaterRatioPanel_bottomSection__pH0C5\"};","// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaContainer\":\"DailyNorma_dailyNormaContainer__KHUio\",\"title\":\"DailyNorma_title__X4SZH\",\"normaContainer\":\"DailyNorma_normaContainer__yAGrT\",\"normaValue\":\"DailyNorma_normaValue__Gd29x\",\"editButton\":\"DailyNorma_editButton__Zko6d\"};","import axios from 'axios';\n\nexport const updateDailyNorma = (dailyNorma) => async (dispatch) => {\n  const token = localStorage.getItem('token');\n\n  try {\n    const response = await axios.put(\n      'https://the-dominators-back-project.onrender.com',\n      { dailyNorma },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    );\n\n    dispatch({\n      type: 'UPDATE_DAILY_NORMA_SUCCESS',\n      payload: response.data\n    });\n\n\n    return { success: true, message: response.data.message };\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_DAILY_NORMA_FAILURE',\n      payload: error.response.data\n    });\n\n\n    return { success: false, message: error.response.data.message };\n  }\n};\n\n\n// import axios from 'axios';\n\n// export const updateDailyNorma = (dailyNorma) => async (dispatch) => {\n//   const token = localStorage.getItem('token');\n\n//   try {\n//     const response = await axios.put(\n//       'https://the-dominators-back-project.onrender.com',\n//       { dailyNorma },\n//       {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       }\n//     );\n\n//     dispatch({\n//       type: 'UPDATE_DAILY_NORMA_SUCCESS',\n//       payload: response.data\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: 'UPDATE_DAILY_NORMA_FAILURE',\n//       payload: error.response.data\n//     });\n//   }\n// };\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"DailyNormaModal_modal__vJ3oF\",\"modalContent\":\"DailyNormaModal_modalContent__KvIF8\",\"navnButton\":\"DailyNormaModal_navnButton__YziaA\",\"closeButton\":\"DailyNormaModal_closeButton__Uur27\",\"formulas\":\"DailyNormaModal_formulas__wR-gI\",\"label\":\"DailyNormaModal_label__FhZVe\",\"formula\":\"DailyNormaModal_formula__LLd2F\",\"radioGroup\":\"DailyNormaModal_radioGroup__hW-rO\",\"radio-label\":\"DailyNormaModal_radio-label__j1hG2\",\"labelInput\":\"DailyNormaModal_labelInput__zcUdV\",\"inputWrapper\":\"DailyNormaModal_inputWrapper__yjnEa\",\"bluInput\":\"DailyNormaModal_bluInput__QSMvJ\",\"modal-content\":\"DailyNormaModal_modal-content__TsjF1\",\"radio-group\":\"DailyNormaModal_radio-group__CV3cj\",\"blu\":\"DailyNormaModal_blu__S7if2\"};","import React, { useState, useEffect, useCallback } from 'react'; //додала useCallback\nimport { useDispatch } from 'react-redux';\nimport { updateDailyNorma } from '../../redux/water/dailyNormaModal';\nimport css from './DailyNormaModal.module.css';\n\nconst App = ({ setModalVisible }) => { // Принимаем setModalVisible как пропс\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [requiredWater, setRequiredWater] = useState('0 L');\n  const [waterIntake, setWaterIntake] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    adjustTextareaHeight();\n    window.addEventListener('resize', adjustTextareaHeight);\n    return () => window.removeEventListener('resize', adjustTextareaHeight);\n  }, []);\n\n  // useEffect(() => {\n  //   calculateWaterIntake();\n  // }, [gender, weight, activityTime]);   перенесла у calculateWaterIntake\n\n  const adjustTextareaHeight = () => {\n    const textarea = document.getElementById('infoText');\n    textarea.style.height = 'auto';\n    textarea.style.height = textarea.scrollHeight + 'px';\n  };\n\n  const calculateWaterIntake = useCallback(() => {   // додала використання колбеку, для  для мемоізації функції \n    let V;\n    if (gender === 'woman') {\n      V = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      V = weight * 0.04 + activityTime * 0.6;\n    }\n\n    if (isNaN(V)) {\n      V = 0;\n    }\n\n    setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    calculateWaterIntake();\n  }, [calculateWaterIntake]);  // використання useEffect у функції\n\n  const clearDefault = (event) => {\n    if (event.target.value === '0') {\n      event.target.value = '';\n    }\n  };\n\n  const restoreDefault = (event) => {\n    if (event.target.value === '') {\n      event.target.value = '0';\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    const dailyNorma = waterIntake * 1000;\n\n    if (dailyNorma > 5000) {\n      alert('Максимальная суточная норма потребления воды - 5000 мл');\n      return;\n    }\n\n    const result = await dispatch(updateDailyNorma(dailyNorma));\n\n    if (result.success) {\n      setModalVisible(false); // Закрываем модальное окно при успешном обновлении\n      alert('Successfully updated daily norm!');\n    } else {\n      alert(`Ошибка: ${result.message}`);\n    }\n  };\n\n  return (\n    <div className={css.App}>\n      <div className={css.modal}>\n        <div className={css.modalContent}>\n          <div className={css.navnButton}>\n<h2>My daily norma</h2>\n          <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n\n          </div>\n          <div className={css.formulas}>\n            <p>\n              <span className={css.label}>For girl:</span>\n              <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n            </p>\n            <p>\n              <span className={css.label}>For man:</span>\n              <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n            </p>\n          </div>\n          <textarea id=\"infoText\" readOnly className={css.textarea}>\n            * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n          </textarea>\n          <form  onSubmit={handleSave}>\n            <h4>Calculate your rate:</h4>\n            <div className={css.radioGroup}>\n              <label className={css.radioLabel}>\n                <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n              </label>\n              <label className={css.radioLabel}>\n                <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n              </label>\n            </div>\n            <div  className={css.inputWrapper}>\n              <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"weight\"\n                name=\"weight\"\n                value={weight}\n                onChange={(e) => setWeight(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n</div>\n            <div className={css.inputWrapper}>\n              <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"activity-time\"\n                name=\"activity-time\"\n                value={activityTime}\n                onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <div>\n              <p>\n                <span>The required amount of water in liters per day:</span>\n                <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n              </p>\n            </div>\n            <h4>Write down how much water you will drink:</h4>\n            <div className={css.inputWrapper}>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"water-intake\"\n                name=\"water-intake\"\n                value={waterIntake}\n                onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <button type=\"submit\" className={css.saveButton}>Save</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from './redux/water/dailyNormaModal';\n// import css from './DailyNormaModal.module.css';\n\n// const App = () => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const [modalVisible, setModalVisible] = useState(true);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [gender, weight, activityTime]);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = () => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   };\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake * 1000;\n\n//     if (dailyNorma > 5000) {\n//       alert('Максимальная суточная норма потребления воды - 5000 мл');\n//       return;\n//     }\n\n//     const result = await dispatch(updateDailyNorma(dailyNorma));\n\n//     if (result.success) {\n//       setModalVisible(false);\n//       alert('Successfully updated daily norm!');\n//     } else {\n//       alert(`Ошибка: ${result.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className={css.App}>\n//       {modalVisible && (\n//         <div className={css.modal}>\n//           <div className={css.modalContent}>\n//             <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n//             <h2>My daily norma</h2>\n//             <div className={css.formulas}>\n//               <p>\n//                 <span className={css.label}>For girl:</span>\n//                 <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//               </p>\n//               <p>\n//                 <span className={css.label}>For man:</span>\n//                 <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//               </p>\n//             </div>\n//             <textarea id=\"infoText\" readOnly className={css.textarea}>\n//               * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n//             </textarea>\n//             <form onSubmit={handleSave}>\n//               <h4>Calculate your rate:</h4>\n//               <div className={css.radioGroup}>\n//                 <label className={css.radioLabel}>\n//                   <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//                 </label>\n//                 <label className={css.radioLabel}>\n//                   <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//                 </label>\n//               </div>\n//               <div>\n//                 <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//                 <input\n//                   className={css.blu}\n//                   type=\"number\"\n//                   id=\"weight\"\n//                   name=\"weight\"\n//                   value={weight}\n//                   onChange={(e) => setWeight(parseFloat(e.target.value))}\n//                   onFocus={clearDefault}\n//                   onBlur={restoreDefault}\n//                 />\n//               </div>\n//               <div>\n//                 <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//                 <input\n//                   className={css.blu}\n//                   type=\"number\"\n//                   id=\"activity-time\"\n//                   name=\"activity-time\"\n//                   value={activityTime}\n//                   onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//                   onFocus={clearDefault}\n//                   onBlur={restoreDefault}\n//                 />\n//               </div>\n//               <div>\n//                 <p>\n//                   <span>The required amount of water in liters per day:</span>\n//                   <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//                 </p>\n//               </div>\n//               <h4>Write down how much water you will drink:</h4>\n//               <div>\n//                 <input\n//                   className={css.blu}\n//                   type=\"number\"\n//                   id=\"water-intake\"\n//                   name=\"water-intake\"\n//                   value={waterIntake}\n//                   onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n//                   onFocus={clearDefault}\n//                   onBlur={restoreDefault}\n//                 />\n//               </div>\n//               <button type=\"submit\" className={css.saveButton}>Save</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from './redux/water/dailyNormaModal';\n// import css from './DailyNormaModal.module.css';\n\n// const App = () => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const [modalVisible, setModalVisible] = useState(true);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [gender, weight, activityTime]);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = () => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   };\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake * 1000;\n\n//     if (dailyNorma > 5000) {\n//       alert('Максимальная суточная норма потребления воды - 5000 мл');\n//       return;\n//     }\n\n//     const result = await dispatch(updateDailyNorma(dailyNorma));\n\n//     if (result.success) {\n//       setModalVisible(false);\n//       alert('Successfully updated daily norm!');\n//     } else {\n//       alert(`Ошибка: ${result.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {modalVisible && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <button className=\"close-button\" onClick={() => setModalVisible(false)}>&times;</button>\n//             <h2>My daily norma</h2>\n//             <div className=\"formulas\">\n//               <p>\n//                 <span className=\"label\">For girl:</span>\n//                 <span className=\"formula\">V=(M*0.03) + (T*0.4)</span>\n//               </p>\n//               <p>\n//                 <span className=\"label\">For man:</span>\n//                 <span className=\"formula\">V=(M*0.04) + (T*0.6)</span>\n//               </p>\n//             </div>\n//             <textarea id=\"infoText\" readOnly>\n//               * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n//             </textarea>\n//             <form onSubmit={handleSave}>\n//               <h4>Calculate your rate:</h4>\n//               <div className=\"radio-group\">\n//                 <label className=\"radio-label\">\n//                   <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//                 </label>\n//                 <label className=\"radio-label\">\n//                   <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//                 </label>\n//               </div>\n//               <div>\n//                 <label className=\"label-input\" htmlFor=\"weight\">Your weight in kilograms:</label>\n//                 <input\n//                   className=\"blu\"\n//                   type=\"number\"\n//                   id=\"weight\"\n//                   name=\"weight\"\n//                   value={weight}\n//                   onChange={(e) => setWeight(parseFloat(e.target.value))}\n//                   onFocus={clearDefault}\n//                   onBlur={restoreDefault}\n//                 />\n//               </div>\n//               <div>\n//                 <label className=\"label-input\" htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//                 <input\n//                   className=\"blu\"\n//                   type=\"number\"\n//                   id=\"activity-time\"\n//                   name=\"activity-time\"\n//                   value={activityTime}\n//                   onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//                   onFocus={clearDefault}\n//                   onBlur={restoreDefault}\n//                 />\n//               </div>\n//               <div>\n//                 <p>\n//                   <span>The required amount of water in liters per day:</span>\n//                   <span className=\"blu required-water\">{requiredWater}</span>\n//                 </p>\n//               </div>\n//               <h4>Write down how much water you will drink:</h4>\n//               <div>\n//                 <input\n//                   className=\"blu\"\n//                   type=\"number\"\n//                   id=\"water-intake\"\n//                   name=\"water-intake\"\n//                   value={waterIntake}\n//                   onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n//                   onFocus={clearDefault}\n//                   onBlur={restoreDefault}\n//                 />\n//               </div>\n//               <button type=\"submit\" className=\"save-button\">Save</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n","import React, { useState } from 'react';\nimport styles from \"./DailyNorma.module.css\";\nimport DailyNormaModal from '../DailyNormaModal/DailyNormaModal'; // Путь к модальному окну\n\nconst DailyNorma = () => {\n  const [modalVisible, setModalVisible] = useState(false); // Состояние для видимости модального окна\n\n  const openModal = () => {\n    setModalVisible(true); // Функция для открытия модального окна\n  };\n\n  return (\n    <div className={styles.dailyNormaContainer}>\n      <p className={styles.title}>My daily norma</p>\n      <div className={styles.normaContainer}>\n        <span className={styles.normaValue}>1.5 L</span>\n        <button onClick={openModal} className={styles.editButton}>Edit</button> {/* Кнопка для открытия модального окна */}\n      </div>\n      {modalVisible && <DailyNormaModal setModalVisible={setModalVisible} />} {/* Отображение модального окна */}\n    </div>\n  );\n};\n\nexport default DailyNorma;\n\n\n\n\n\n// import styles from \"./DailyNorma.module.css\";\n\n// const DailyNorma = () => {\n//   return (\n//     <div className={styles.dailyNormaContainer}>\n//       <p className={styles.title}>My daily norma</p>\n//       <div className={styles.normaContainer}>\n//         <span className={styles.normaValue}>1.5 L</span>\n//         <button  className={styles.editButton}>Edit</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNorma;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://the-dominators-back-project.onrender.com';\n\nconst setAuthHeader = (accessToken) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n};\n\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\nexport const createWaterRecord = createAsyncThunk(\n  'water/createRecord',\n\n  async ({ accessToken, amount, time }, thunkAPI) => {\n    try {\n      setAuthHeader(accessToken);\n\n      const response = await axios.post('/water', {\n        amount,\n        date: new Date().toISOString().split('T')[0] + 'T' + time + ':00Z',\n      });\n\n      toast.success(response.data.message, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return response.data;\n    } catch (error) {\n      if (error.response) {\n        const { status, message, data } = error.response.data;\n        toast.error(`Error: ${message}`, {\n          duration: 4000,\n          position: 'top-right',\n        });\n\n        return thunkAPI.rejectWithValue({ status, message, data });\n      }\n\n      toast.error(`Error: ${error.message}`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return thunkAPI.rejectWithValue({\n        status: null,\n        message: error.message,\n        data: null,\n      });\n    }\n  }\n);\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"AddWaterModal_modal__dUadi\",\"modalContent\":\"AddWaterModal_modalContent__PCT0Q\",\"modalHeader\":\"AddWaterModal_modalHeader__blV6-\",\"modal-header\":\"AddWaterModal_modal-header__XGyFr\",\"close\":\"AddWaterModal_close__zmKJE\",\"modalBody\":\"AddWaterModal_modalBody__snhFv\",\"amountSelector\":\"AddWaterModal_amountSelector__fdnLF\",\"inputSaveContainer\":\"AddWaterModal_inputSaveContainer__BhJMK\",\"inputText\":\"AddWaterModal_inputText__8XBA6\",\"labelDistance\":\"AddWaterModal_labelDistance__1laX6\",\"labelDistanceText\":\"AddWaterModal_labelDistanceText__l4fKH\",\"saveButton\":\"AddWaterModal_saveButton__aM7B3\",\"buttonSelector\":\"AddWaterModal_buttonSelector__B-Mvf\",\"inputField\":\"AddWaterModal_inputField__6yl44\"};","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createWaterRecord } from '../../redux/water/operations';\nimport css from './AddWaterModal.module.css';\n\nconst AddWaterModal = ({ setModalVisible }) => {\n  const [amount, setAmount] = useState(0);\n  const [time, setTime] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    populateTimeDropdown();\n  }, []);\n\n  const handleClose = () => {\n    setModalVisible(false);\n  };\n\n  const handleChangeAmount = (delta) => {\n    setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n  };\n\n  const handleSave = async () => {\n    const authData = JSON.parse(localStorage.getItem('persist:auth'));\n    const accessToken = JSON.parse(authData.accessToken);\n\n    if (!accessToken) {\n      alert('Unauthorized: No access token found');\n      return;\n    }\n\n    console.log('Access Token:', accessToken);\n\n    try {\n      await dispatch(createWaterRecord({ accessToken, amount, time }));\n      setModalVisible(false);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const populateTimeDropdown = () => {\n    const timeDropdown = document.getElementById('time');\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 5) {\n        const option = document.createElement('option');\n        option.value = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        option.textContent = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        if (hour === currentHour && minute === currentMinute) {\n          option.selected = true;\n          setTime(option.value);\n        }\n        timeDropdown.appendChild(option);\n      }\n    }\n  };\n\n  return (\n    <div className={css.modal}>\n      <div className={css.modalContent}>\n        <div className={css.modalHeader}>\n          <h2>Add water</h2>\n          <span className={css.close} onClick={handleClose}>&times;</span>\n        </div>\n        <div className={css.modalBody}>\n          <h4 className={css.labelDistance} htmlFor=\"amount\">Choose a value:</h4>\n          <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n          <div className={css.amountSelector}>\n            <button className={css.buttonSelector} onClick={() => handleChangeAmount(-50)}>-</button>\n            <span id=\"amount\">{amount}ml</span>\n            <button className={css.buttonSelector} onClick={() => handleChangeAmount(50)}>+</button>\n          </div>\n          <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n          <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n          <h4 className={css.labelDistance} htmlFor=\"value\">Enter the value of the water used:</h4>\n          <input className={css.inputText} type=\"number\" id=\"value\" value={amount} onChange={(e) => setAmount(Number(e.target.value))} />\n          <div className={css.inputSaveContainer}>\n            <input className={css.inputField} type=\"text\" id=\"autoFillInput\" readOnly value={`${amount}ml`} />\n            <button className={css.saveButton} onClick={handleSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddWaterModal;\n\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./WaterRatioPanel.module.css\";\nimport PropTypes from \"prop-types\";\nimport DailyNorma from \"../DailyNorma/DailyNorma\";\nimport AddWaterModal from \"../AddWaterModal/AddWaterModal\";\n\nconst ProgressBar = ({ sliderValue }) => {\n  const [sliderWidth, setSliderWidth] = useState(256);\n\n  useEffect(() => {\n    const updateSliderWidth = () => {\n      if (window.innerWidth >= 1440) {\n        setSliderWidth(350);\n      } else if (window.innerWidth >= 768) {\n        setSliderWidth(325);\n      } else {\n        setSliderWidth(256);\n      }\n    };\n\n    updateSliderWidth();\n    window.addEventListener(\"resize\", updateSliderWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", updateSliderWidth);\n    };\n  }, []);\n\n  return (\n    <svg\n      className={styles.progressBar}\n      width=\"100%\"\n      height=\"20\"\n      viewBox={`0 0 ${sliderWidth} 20`}\n    >\n      <rect x=\"0\" y=\"6\" width={sliderWidth} height=\"8\" fill=\"#d7e3ff\" rx=\"7\" />\n      <rect\n        x=\"0\"\n        y=\"6\"\n        width={(sliderValue / 100) * sliderWidth}\n        height=\"8\"\n        fill=\"#9ebbff\"\n        rx=\"7\"\n      />\n      <circle\n        cx={Math.min(Math.max((sliderValue / 100) * sliderWidth, 7), sliderWidth - 7)}\n        cy=\"10\"\n        r=\"7\"\n        fill=\"#ffffff\"\n        stroke=\"#407bff\"\n        strokeWidth=\"1\"\n      />\n    </svg>\n  );\n};\n\nProgressBar.propTypes = {\n  sliderValue: PropTypes.number.isRequired,\n};\n\nconst WaterTracker = ({ sliderValue, onAddWaterClick }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const handleAddWaterClick = () => {\n    setModalVisible(true);\n  };\n\n  return (\n    <div className={styles.dailyNormaSection}>\n      <DailyNorma />\n      <div className={styles.imageContainer}></div>\n      <div className={styles.bottomSection}>\n        <div className={styles.progressContainer}>\n          <span className={styles.progressTitle}>Today</span>\n          <ProgressBar sliderValue={sliderValue} />\n\n          <div className={styles.progressMarkers}>\n            {[0, 50, 100].map((value, index) => {\n              const isActive = sliderValue === value;\n              const fontSize = isActive ? 16 : 12;\n\n              return (\n                <div key={index} className={styles.marker}>\n                  <div className={styles.tick}></div>\n                  <span style={{ fontSize: `${fontSize}px` }}>\n                    {value}%\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        <button className={styles.addWaterBtn} onClick={handleAddWaterClick}>\n          <svg className={styles.icon} width=\"20\" height=\"20\">\n            <use href=\"images_auth/vectorbtn.svg#icon-vector-btn\"></use>\n          </svg>\n          Add Water\n        </button>\n      </div>\n\n      {modalVisible && <AddWaterModal setModalVisible={setModalVisible} />}\n    </div>\n  );\n};\n\nWaterTracker.propTypes = {\n  sliderValue: PropTypes.number.isRequired,\n  onAddWaterClick: PropTypes.func.isRequired,\n};\n\nexport default WaterTracker;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import styles from \"./WaterRatioPanel.module.css\";\n// import PropTypes from \"prop-types\";\n// import DailyNorma from \"../DailyNorma/DailyNorma\";\n\n// const ProgressBar = ({ sliderValue }) => {\n//   const [sliderWidth, setSliderWidth] = useState(256);\n\n//   useEffect(() => {\n//     const updateSliderWidth = () => {\n//       if (window.innerWidth >= 1440) {\n//         setSliderWidth(350);\n//       } else if (window.innerWidth >= 768) {\n//         setSliderWidth(325);\n//       } else {\n//         setSliderWidth(256);\n//       }\n//     };\n\n//     updateSliderWidth();\n//     window.addEventListener(\"resize\", updateSliderWidth);\n\n//     return () => {\n//       window.removeEventListener(\"resize\", updateSliderWidth);\n//     };\n//   }, []);\n\n//   return (\n//     <svg\n//       className={styles.progressBar}\n//       width=\"100%\"\n//       height=\"20\"\n//       viewBox={`0 0 ${sliderWidth} 20`}\n//     >\n//       <rect x=\"0\" y=\"6\" width={sliderWidth} height=\"8\" fill=\"#d7e3ff\" rx=\"7\" />\n//       <rect\n//         x=\"0\"\n//         y=\"6\"\n//         width={(sliderValue / 100) * sliderWidth}\n//         height=\"8\"\n//         fill=\"#9ebbff\"\n//         rx=\"7\"\n//       />\n//       <circle\n//         cx={Math.min(Math.max((sliderValue / 100) * sliderWidth, 7), sliderWidth - 7)}\n//         cy=\"10\"\n//         r=\"7\"\n//         fill=\"#ffffff\"\n//         stroke=\"#407bff\"\n//         strokeWidth=\"1\"\n//       />\n//     </svg>\n//   );\n// };\n\n// ProgressBar.propTypes = {\n//   sliderValue: PropTypes.number.isRequired,\n// };\n\n// const WaterTracker = ({ sliderValue, onAddWaterClick }) => {\n//   return (\n//     <div className={styles.dailyNormaSection}>\n//       <DailyNorma />\n//       <div className={styles.imageContainer}></div>\n//       <div className={styles.bottomSection}>\n//         <div className={styles.progressContainer}>\n//           <span className={styles.progressTitle}>Today</span>\n//           <ProgressBar sliderValue={sliderValue} />\n\n//           <div className={styles.progressMarkers}>\n//   {[0, 50, 100].map((value, index) => {\n//     const isActive = sliderValue === value;\n//     const fontSize = isActive ? 16 : 12;\n\n//     return (\n//       <div key={index} className={styles.marker}>\n//         <div className={styles.tick}></div>\n//         <span style={{ fontSize: `${fontSize}px` }}>\n//           {value}%\n//         </span>\n//       </div>\n//     );\n//   })}\n// </div>\n//         </div>\n\n//         <button className={styles.addWaterBtn} onClick={onAddWaterClick}>\n//           <svg className={styles.icon} width=\"20\" height=\"20\">\n//             <use href=\"images_auth/vectorbtn.svg#icon-vector-btn\"></use>\n//           </svg>\n//           Add Water\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// WaterTracker.propTypes = {\n//   sliderValue: PropTypes.number.isRequired,\n//   onAddWaterClick: PropTypes.func.isRequired,\n// };\n\n// export default WaterTracker;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"HomePage_homeContainer__6ghGM\",\"dailyNormaSection\":\"HomePage_dailyNormaSection__ZP+Dx\",\"waterTrackerSection\":\"HomePage_waterTrackerSection__tdyHv\",\"todayWaterListSection\":\"HomePage_todayWaterListSection__Rz2pC\"};","import { useState } from \"react\";\nimport WaterTracker from \"../../components/WaterRatioPanel/WaterRatioPanel\";\nimport styles from \"./HomePage.module.css\";\n\nconst HomePage = () => {\n  const [sliderValue, setSliderValue] = useState(0);\n\n  const handleSliderChange = (value) => {\n    setSliderValue(value);\n  };\n\n  const handleAddWater = () => {\n    setSliderValue((prev) => Math.min(prev + 10, 100));\n  };\n\n  return (\n    <div className={styles.homeContainer}>\n      <section className={styles.waterTrackerSection}>\n        <WaterTracker\n          sliderValue={sliderValue}\n          onSliderChange={handleSliderChange}\n          onAddWaterClick={handleAddWater}\n        />\n      </section>\n      <section className={styles.todayWaterListSection}>\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;"],"names":["updateDailyNorma","dailyNorma","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","dispatch","token","response","_context","prev","next","localStorage","getItem","axios","headers","Authorization","concat","sent","type","payload","data","abrupt","success","message","t0","stop","_x","apply","arguments","setModalVisible","_useState","useState","_useState2","_slicedToArray","gender","setGender","_useState3","_useState4","weight","setWeight","_useState5","_useState6","activityTime","setActivityTime","_useState7","_useState8","requiredWater","setRequiredWater","_useState9","_useState10","waterIntake","setWaterIntake","useDispatch","useEffect","adjustTextareaHeight","window","addEventListener","removeEventListener","textarea","document","getElementById","style","height","scrollHeight","calculateWaterIntake","useCallback","V","isNaN","toFixed","clearDefault","event","target","value","restoreDefault","handleSave","_ref2","result","preventDefault","alert","_jsx","className","css","children","_jsxs","onClick","id","readOnly","onSubmit","name","checked","onChange","htmlFor","e","parseFloat","onFocus","onBlur","modalVisible","styles","DailyNormaModal","setAuthHeader","accessToken","createWaterRecord","createAsyncThunk","thunkAPI","amount","time","_error$response$data","status","date","Date","toISOString","split","toast","duration","position","rejectWithValue","_x2","setAmount","setTime","populateTimeDropdown","handleChangeAmount","delta","prevAmount","Math","max","authData","JSON","parse","console","log","timeDropdown","now","currentHour","getHours","currentMinute","floor","getMinutes","hour","minute","option","createElement","toString","padStart","textContent","selected","appendChild","Number","ProgressBar","sliderValue","sliderWidth","setSliderWidth","updateSliderWidth","innerWidth","width","viewBox","x","y","fill","rx","cx","min","cy","r","stroke","strokeWidth","onAddWaterClick","DailyNorma","map","index","fontSize","href","AddWaterModal","setSliderValue","WaterTracker","onSliderChange"],"sourceRoot":""}