{"version":3,"file":"static/js/740.55e79f17.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/WaterRatioPanel/WaterRatioPanel.module.css?a6e9","webpack://react-homework-template/./src/components/DailyNorma/DailyNorma.module.css?8e40","redux/water/operations.js","webpack://react-homework-template/./src/components/DailyNormaModal/DailyNormaModal.module.css?cfa8","components/DailyNormaModal/DailyNormaModal.jsx","components/DailyNorma/DailyNorma.jsx","components/WaterRatioPanel/WaterRatioPanel.jsx","webpack://react-homework-template/./src/components/TodayWaterList/TodayWaterList.module.css?0bc6","components/TodayWaterList/TodayWaterList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaSection\":\"WaterRatioPanel_dailyNormaSection__lejGd\",\"imageContainer\":\"WaterRatioPanel_imageContainer__JcPUd\",\"slider\":\"WaterRatioPanel_slider__+PTSK\",\"waterBottle\":\"WaterRatioPanel_waterBottle__uU5gu\",\"progressContainer\":\"WaterRatioPanel_progressContainer__f0Qbe\",\"progressTitle\":\"WaterRatioPanel_progressTitle__Z-RzH\",\"progressBar\":\"WaterRatioPanel_progressBar__dShpn\",\"progressMarkers\":\"WaterRatioPanel_progressMarkers__+UN4R\",\"marker\":\"WaterRatioPanel_marker__m+8sw\",\"tick\":\"WaterRatioPanel_tick__Gwmie\",\"progressLabels\":\"WaterRatioPanel_progressLabels__92zZK\",\"addWaterBtn\":\"WaterRatioPanel_addWaterBtn__mfzkw\",\"icon\":\"WaterRatioPanel_icon__ZAI64\",\"bottomSection\":\"WaterRatioPanel_bottomSection__pH0C5\"};","// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaContainer\":\"DailyNorma_dailyNormaContainer__KHUio\",\"title\":\"DailyNorma_title__X4SZH\",\"normaContainer\":\"DailyNorma_normaContainer__yAGrT\",\"normaValue\":\"DailyNorma_normaValue__Gd29x\",\"editButton\":\"DailyNorma_editButton__Zko6d\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://the-dominators-back-project.onrender.com';\n\nconst setAuthHeader = (accessToken) => {\n  axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n};\n\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\nexport const updateDailyNorma = createAsyncThunk(\n  'user/water-rate',\n  async ({ accessToken, dailyNorma }, thunkAPI) => {\n    try {\n      setAuthHeader(accessToken);\n\n      const response = await axios.patch('/users/water-rate', { daylyNorm: dailyNorma });\n\n      toast.success(response.data.message, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return response.data;\n    } catch (error) {\n      if (error.response) {\n        const { status, message, data } = error.response.data;\n        toast.error(`Error: ${message}`, {\n          duration: 4000,\n          position: 'top-right',\n        });\n\n        return thunkAPI.rejectWithValue({ status, message, data });\n      }\n\n      toast.error(`Error: ${error.message}`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return thunkAPI.rejectWithValue({\n        status: null,\n        message: error.message,\n        data: null,\n      });\n    }\n  }\n);\n\n\n\n\nexport const createWaterRecord = createAsyncThunk(\n  'water/createRecord',\n\n  async ({ accessToken, amount, time }, thunkAPI) => {\n    try {\n      setAuthHeader(accessToken);\n\n      const response = await axios.post('/water', {\n        amount,\n        date: new Date().toISOString().split('T')[0] + 'T' + time + ':00Z',\n      });\n\n      toast.success(response.data.message, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return response.data;\n    } catch (error) {\n      if (error.response) {\n        const { status, message, data } = error.response.data;\n        toast.error(`Error: ${message}`, {\n          duration: 4000,\n          position: 'top-right',\n        });\n\n        return thunkAPI.rejectWithValue({ status, message, data });\n      }\n\n      toast.error(`Error: ${error.message}`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n\n      return thunkAPI.rejectWithValue({\n        status: null,\n        message: error.message,\n        data: null,\n      });\n    }\n  }\n);\n\n\n\n// import axios from 'axios';\n// import { createAsyncThunk } from '@reduxjs/toolkit';\n// import { toast } from 'react-toastify';\n\n// axios.defaults.baseURL = 'https://the-dominators-back-project.onrender.com';\n\n// const setAuthHeader = (accessToken) => {\n//   axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n// };\n\n// const clearAuthHeader = () => {\n//   axios.defaults.headers.common.Authorization = '';\n// };\n\n\n// export const updateDailyNorma = createAsyncThunk(\n//   'user/water-rate',\n//   async ({ accessToken, dailyNorma }, thunkAPI) => {\n//     try {\n//       setAuthHeader(accessToken);\n\n//       const response = await axios.put('/water-rate', { dailyNorma });\n\n//       toast.success(response.data.message, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return response.data;\n//     } catch (error) {\n//       if (error.response) {\n//         const { status, message, data } = error.response.data;\n//         toast.error(`Error: ${message}`, {\n//           duration: 4000,\n//           position: 'top-right',\n//         });\n\n//         return thunkAPI.rejectWithValue({ status, message, data });\n//       }\n\n//       toast.error(`Error: ${error.message}`, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return thunkAPI.rejectWithValue({\n//         status: null,\n//         message: error.message,\n//         data: null,\n//       });\n//     }\n//   }\n// );\n\n\n\n\n// export const createWaterRecord = createAsyncThunk(\n//   'water/createRecord',\n\n//   async ({ accessToken, amount, time }, thunkAPI) => {\n//     try {\n//       setAuthHeader(accessToken);\n\n//       const response = await axios.post('/water', {\n//         amount,\n//         date: new Date().toISOString().split('T')[0] + 'T' + time + ':00Z',\n//       });\n\n//       toast.success(response.data.message, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return response.data;\n//     } catch (error) {\n//       if (error.response) {\n//         const { status, message, data } = error.response.data;\n//         toast.error(`Error: ${message}`, {\n//           duration: 4000,\n//           position: 'top-right',\n//         });\n\n//         return thunkAPI.rejectWithValue({ status, message, data });\n//       }\n\n//       toast.error(`Error: ${error.message}`, {\n//         duration: 4000,\n//         position: 'top-right',\n//       });\n\n//       return thunkAPI.rejectWithValue({\n//         status: null,\n//         message: error.message,\n//         data: null,\n//       });\n//     }\n//   }\n// );\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"DailyNormaModal_modal__vJ3oF\",\"modalContent\":\"DailyNormaModal_modalContent__KvIF8\",\"navnButton\":\"DailyNormaModal_navnButton__YziaA\",\"closeButton\":\"DailyNormaModal_closeButton__Uur27\",\"formulas\":\"DailyNormaModal_formulas__wR-gI\",\"label\":\"DailyNormaModal_label__FhZVe\",\"formula\":\"DailyNormaModal_formula__LLd2F\",\"radioGroup\":\"DailyNormaModal_radioGroup__hW-rO\",\"radio-label\":\"DailyNormaModal_radio-label__j1hG2\",\"labelInput\":\"DailyNormaModal_labelInput__zcUdV\",\"inputWrapper\":\"DailyNormaModal_inputWrapper__yjnEa\",\"bluInput\":\"DailyNormaModal_bluInput__QSMvJ\",\"modal-content\":\"DailyNormaModal_modal-content__TsjF1\",\"radio-group\":\"DailyNormaModal_radio-group__CV3cj\",\"blu\":\"DailyNormaModal_blu__S7if2\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateDailyNorma } from '../../redux/water/operations';\nimport css from './DailyNormaModal.module.css';\n\nconst DailyNormaModal = ({ setModalVisible }) => {\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [requiredWater, setRequiredWater] = useState('0 L');\n  const [waterIntake, setWaterIntake] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    adjustTextareaHeight();\n    window.addEventListener('resize', adjustTextareaHeight);\n    return () => window.removeEventListener('resize', adjustTextareaHeight);\n  }, []);\n\n  const adjustTextareaHeight = () => {\n    const textarea = document.getElementById('infoText');\n    textarea.style.height = 'auto';\n    textarea.style.height = textarea.scrollHeight + 'px';\n  };\n\n  const calculateWaterIntake = useCallback(() => {\n    let V;\n    if (gender === 'woman') {\n      V = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      V = weight * 0.04 + activityTime * 0.6;\n    }\n\n    if (isNaN(V)) {\n      V = 0;\n    }\n\n    setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    calculateWaterIntake();\n  }, [calculateWaterIntake]);\n\n  const clearDefault = (event) => {\n    if (event.target.value === '0') {\n      event.target.value = '';\n    }\n  };\n\n  const restoreDefault = (event) => {\n    if (event.target.value === '') {\n      event.target.value = '0';\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    const dailyNorma = waterIntake * 1000;\n\n    if (dailyNorma > 5000) {\n      alert('Максимальная суточная норма потребления воды - 5000 мл');\n      return;\n    }\n\n    const authData = JSON.parse(localStorage.getItem('persist:auth'));\n    const accessToken = authData.accessToken.replace(/\"/g, '');\n\n    const result = await dispatch(updateDailyNorma({ accessToken, dailyNorma }));\n\n    if (!result.error) {\n      setModalVisible(false);\n    } else {\n      alert(`Ошибка: ${result.error.message}`);\n    }\n  };\n\n  return (\n    <div className={css.App}>\n      <div className={css.modal}>\n        <div className={css.modalContent}>\n          <div className={css.navnButton}>\n            <h2>My daily norma</h2>\n            <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n          </div>\n          <div className={css.formulas}>\n            <p>\n              <span className={css.label}>For girl:</span>\n              <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n            </p>\n            <p>\n              <span className={css.label}>For man:</span>\n              <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n            </p>\n          </div>\n          <textarea\n            id=\"infoText\"\n            readOnly\n            className={css.textarea}\n            value=\"* V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"\n          />\n          <form onSubmit={handleSave}>\n            <h4>Calculate your rate:</h4>\n            <div className={css.radioGroup}>\n              <label className={css.radioLabel}>\n                <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n              </label>\n              <label className={css.radioLabel}>\n                <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n              </label>\n            </div>\n            <div className={css.inputWrapper}>\n              <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"weight\"\n                name=\"weight\"\n                value={weight}\n                onChange={(e) => setWeight(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <div className={css.inputWrapper}>\n              <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"activity-time\"\n                name=\"activity-time\"\n                value={activityTime}\n                onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <div>\n              <p>\n                <span>The required amount of water in liters per day:</span>\n                <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n              </p>\n            </div>\n            <h4>Write down how much water you will drink:</h4>\n            <div className={css.inputWrapper}>\n              <input\n                className={css.bluInput}\n                type=\"number\"\n                id=\"water-intake\"\n                name=\"water-intake\"\n                value={waterIntake}\n                onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n                onFocus={clearDefault}\n                onBlur={restoreDefault}\n              />\n            </div>\n            <button type=\"submit\" className={css.saveButton}>Save</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DailyNormaModal;\n\n\n\n\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from '../../redux/water/operations';\n// import css from './DailyNormaModal.module.css';\n\n// const DailyNormaModal = ({ setModalVisible }) => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = useCallback(() => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   }, [gender, weight, activityTime]);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [calculateWaterIntake]);\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake * 1000;\n\n//     if (dailyNorma > 5000) {\n//       alert('Максимальная суточная норма потребления воды - 5000 мл');\n//       return;\n//     }\n\n//     const authData = JSON.parse(localStorage.getItem('persist:auth'));\n//     const accessToken = authData.accessToken.replace(/\"/g, '');\n\n//     const result = await dispatch(updateDailyNorma({ accessToken, dailyNorma }));\n\n//     if (!result.error) {\n//       setModalVisible(false); // Закрываем модальное окно при успешном обновлении\n//     } else {\n//       alert(`Ошибка: ${result.error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className={css.App}>\n//       <div className={css.modal}>\n//         <div className={css.modalContent}>\n//           <div className={css.navnButton}>\n//             <h2>My daily norma</h2>\n//             <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n//           </div>\n//           <div className={css.formulas}>\n//             <p>\n//               <span className={css.label}>For girl:</span>\n//               <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//             </p>\n//             <p>\n//               <span className={css.label}>For man:</span>\n//               <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//             </p>\n//           </div>\n//           <textarea id=\"infoText\" readOnly className={css.textarea}>\n//             * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n//           </textarea>\n//           <form onSubmit={handleSave}>\n//             <h4>Calculate your rate:</h4>\n//             <div className={css.radioGroup}>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//               </label>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//               </label>\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"weight\"\n//                 name=\"weight\"\n//                 value={weight}\n//                 onChange={(e) => setWeight(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"activity-time\"\n//                 name=\"activity-time\"\n//                 value={activityTime}\n//                 onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div>\n//               <p>\n//                 <span>The required amount of water in liters per day:</span>\n//                 <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//               </p>\n//             </div>\n//             <h4>Write down how much water you will drink:</h4>\n//             <div className={css.inputWrapper}>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"water-intake\"\n//                 name=\"water-intake\"\n//                 value={waterIntake}\n//                 onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <button type=\"submit\" className={css.saveButton}>Save</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNormaModal;\n\n\n","import React, { useState } from 'react';\nimport styles from \"./DailyNorma.module.css\";\nimport DailyNormaModal from '../DailyNormaModal/DailyNormaModal'; // Путь к модальному окну\n\nconst DailyNorma = () => {\n  const [modalVisible, setModalVisible] = useState(false); // Состояние для видимости модального окна\n  const [normaValue] = useState(2.0);\n\n  const openModal = () => {\n    setModalVisible(true); // Функция для открытия модального окна\n  };\n\n  return (\n    <div className={styles.dailyNormaContainer}>\n      <p className={styles.title}>My daily norma</p>\n      <div className={styles.normaContainer}>\n        <span className={styles.normaValue}>{normaValue} L</span>\n        <button onClick={openModal} className={styles.editButton}>Edit</button> {/* Кнопка для открытия модального окна */}\n      </div>\n      {modalVisible && <DailyNormaModal setModalVisible={setModalVisible} />} {/* Отображение модального окна */}\n    </div>\n  );\n};\n\nexport default DailyNorma;\n\n\n\n\n\n// import styles from \"./DailyNorma.module.css\";\n\n// const DailyNorma = () => {\n//   return (\n//     <div className={styles.dailyNormaContainer}>\n//       <p className={styles.title}>My daily norma</p>\n//       <div className={styles.normaContainer}>\n//         <span className={styles.normaValue}>1.5 L</span>\n//         <button  className={styles.editButton}>Edit</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNorma;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./WaterRatioPanel.module.css\";\nimport PropTypes from \"prop-types\";\nimport DailyNorma from \"../DailyNorma/DailyNorma\";\n\nconst ProgressBar = ({ sliderValue }) => {\nconst [sliderWidth, setSliderWidth] = useState(256);\n\n   useEffect(() => {\n   const updateSliderWidth = () => {\n       if (window.innerWidth >= 1440) {\n        setSliderWidth(350);\n       } else if (window.innerWidth >= 768) {\n         setSliderWidth(325);\n       } else {\n         setSliderWidth(256);\n       }\n     };\n\n     updateSliderWidth();\n     window.addEventListener(\"resize\", updateSliderWidth);\n\n     return () => {\n       window.removeEventListener(\"resize\", updateSliderWidth);\n     };\n  }, []);\n\n   return (\n    <svg\n       className={styles.progressBar}\n       width=\"100%\"\n       height=\"20\"\n       viewBox={`0 0 ${sliderWidth} 20`}\n     >\n       <rect x=\"0\" y=\"6\" width={sliderWidth} height=\"8\" fill=\"#d7e3ff\" rx=\"7\" />\n       <rect\n         x=\"0\"\n        y=\"6\"\n         width={(sliderValue / 100) * sliderWidth}\n        height=\"8\"\n         fill=\"#9ebbff\"\n         rx=\"7\"\n       />\n       <circle\n         cx={Math.min(Math.max((sliderValue / 100) * sliderWidth, 7), sliderWidth - 7)}\n        cy=\"10\"\n         r=\"7\"\n         fill=\"#ffffff\"\n         stroke=\"#407bff\"\n         strokeWidth=\"1\"\n       />\n     </svg>\n   );\n };\n\n ProgressBar.propTypes = {\n   sliderValue: PropTypes.number.isRequired,\n };\n\n const WaterTracker = ({ sliderValue, onAddWaterClick }) => {\n   return (\n    <div className={styles.dailyNormaSection}>\n      <DailyNorma />\n      <div className={styles.imageContainer}></div>\n      <div className={styles.bottomSection}>\n         <div className={styles.progressContainer}>\n         <span className={styles.progressTitle}>Today</span>\n           <ProgressBar sliderValue={sliderValue} />\n\n           <div className={styles.progressMarkers}>\n{[0, 50, 100].map((value, index) => {\n    const isActive = sliderValue === value;\n    const fontSize = isActive ? 16 : 12;\n\n     return (\n       <div key={index} className={styles.marker}>\n         <div className={styles.tick}></div>\n        <span style={{ fontSize: `${fontSize}px` }}>\n           {value}%\n         </span>\n       </div>\n    );\n   })}\n </div>\n         </div>\n\n         <button className={styles.addWaterBtn} onClick={onAddWaterClick}>\n           <svg className={styles.icon} width=\"20\" height=\"20\">\n            <use href=\"images_auth/vectorbtn.svg#icon-vector-btn\"></use>\n           </svg>\n           Add Water\n         </button>\n      </div>\n     </div>\n   );\n };\n\n WaterTracker.propTypes = {\n   sliderValue: PropTypes.number.isRequired,\n   onAddWaterClick: PropTypes.func.isRequired,\n };\n\nexport default WaterTracker;","// extracted by mini-css-extract-plugin\nexport default {\"todayWaterListSection\":\"TodayWaterList_todayWaterListSection__tsQ3J\",\"title\":\"TodayWaterList_title__1N7Qm\",\"list\":\"TodayWaterList_list__pz4ad\",\"listItem\":\"TodayWaterList_listItem__Nh9Nv\",\"info\":\"TodayWaterList_info__RbyUS\",\"amount\":\"TodayWaterList_amount__d+vnD\",\"time\":\"TodayWaterList_time__4fofH\",\"actions\":\"TodayWaterList_actions__cBHzi\",\"editButton\":\"TodayWaterList_editButton__XlLch\",\"addButton\":\"TodayWaterList_addButton__gMK19\"};","import { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TodayWaterList.module.css\";\n\nconst TodayWaterList = ({ waterRecords, onEdit, onDelete }) => {\n  const listRef = useRef(null); \n\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n  }, [waterRecords]);\n\n  return (\n    <section className={styles.todayWaterListSection}>\n      <h2 className={styles.title}>Today</h2>\n      <ul className={styles.list} ref={listRef}>\n        {waterRecords.map(({ id, amount, time }) => (\n          <li key={id} className={styles.listItem}>\n            <div className={styles.info}>\n              <span className={styles.amount}> <svg\n    width=\"26\"\n    height=\"26\"\n  >\n    <use href=\"./images_auth/today_water.svg#icon-today_water\"></use>\n  </svg>\n  {amount} ml</span>\n              <span className={styles.time}>{time}</span>\n            </div>\n            <div className={styles.actions}>\n            <button\n              className={styles.editButton}\n              onClick={() => onEdit(id)}\n              aria-label=\"Edit\"\n              >\n              <svg\n        \n                  width=\"16\"\n                  height=\"16\"\n        \n                  >\n                    <use href=\"./images_auth/pendelete.svg#icon-pencil\"></use>\n                  </svg>\n                  </button>\n\n                  <button\n                  className={styles.deleteButton}\n                  onClick={() => onDelete(id)}\n                  aria-label=\"Delete\"\n                >\n                  <svg\n                \n                    width=\"16\"\n                    height=\"16\"\n            \n                  >\n                    \n                    <use href=\"./images_auth/pendelete.svg#icon-delete\"></use>\n                  </svg>\n                </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button className={styles.addButton} onClick={() => onEdit(null)}>\n        + Add water\n      </button>\n    </section>\n  );\n};\n\nTodayWaterList.propTypes = {\n  waterRecords: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      time: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default TodayWaterList;","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"HomePage_homeContainer__6ghGM\",\"dailyNormaSection\":\"HomePage_dailyNormaSection__ZP+Dx\",\"waterTrackerSection\":\"HomePage_waterTrackerSection__tdyHv\",\"todayWaterListSection\":\"HomePage_todayWaterListSection__Rz2pC\"};","import React, { useState } from \"react\";\nimport WaterTracker from \"../../components/WaterRatioPanel/WaterRatioPanel\";\nimport TodayWaterList from \"../../components/TodayWaterList/TodayWaterList\";\nimport styles from \"./HomePage.module.css\";\n\nconst HomePage = () => {\n  const [sliderValue, setSliderValue] = useState(0); \n  const [waterRecords, setWaterRecords] = useState([\n    \n  ]); \n\n  const handleSliderChange = (value) => {\n    setSliderValue(value);\n  };\n\n  const handleAddWater = () => {\n    const newRecord = {\n      id: Date.now().toString(),\n      amount: 200, \n      time: new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\n    };\n\n    setWaterRecords((prev) => [...prev, newRecord]);\n    setSliderValue((prev) => Math.min(prev + 10, 100)); \n  };\n\n  const handleEdit = (id) => {\n    console.log(\"Edit record with ID:\", id);\n  };\n\n  const handleDelete = (id) => {\n    setWaterRecords((prev) => prev.filter((record) => record.id !== id));\n  };\n\n  return (\n    <div className={styles.homeContainer}>\n      <section className={styles.waterTrackerSection}>\n        <WaterTracker\n          sliderValue={sliderValue}\n          onSliderChange={handleSliderChange}\n          onAddWaterClick={handleAddWater}\n        />\n      </section>\n\n      <section className={styles.todayWaterListSection}>\n        <TodayWaterList\n          waterRecords={waterRecords}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;"],"names":["axios","setAuthHeader","accessToken","concat","updateDailyNorma","createAsyncThunk","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","thunkAPI","dailyNorma","response","_error$response$data","status","message","data","_context","prev","next","daylyNorm","sent","toast","duration","position","abrupt","t0","rejectWithValue","stop","_x","_x2","apply","arguments","_ref4","_callee2","_ref3","amount","time","_error$response$data2","_context2","date","Date","toISOString","split","_x3","_x4","setModalVisible","_useState","useState","_useState2","_slicedToArray","gender","setGender","_useState3","_useState4","weight","setWeight","_useState5","_useState6","activityTime","setActivityTime","_useState7","_useState8","requiredWater","setRequiredWater","_useState9","_useState10","waterIntake","setWaterIntake","dispatch","useDispatch","useEffect","adjustTextareaHeight","window","addEventListener","removeEventListener","textarea","document","getElementById","style","height","scrollHeight","calculateWaterIntake","useCallback","V","isNaN","toFixed","clearDefault","event","target","value","restoreDefault","handleSave","authData","result","preventDefault","alert","JSON","parse","localStorage","getItem","replace","error","_jsx","className","css","children","_jsxs","onClick","id","readOnly","onSubmit","type","name","checked","onChange","htmlFor","e","parseFloat","onFocus","onBlur","modalVisible","normaValue","styles","DailyNormaModal","ProgressBar","sliderValue","sliderWidth","setSliderWidth","updateSliderWidth","innerWidth","width","viewBox","x","y","fill","rx","cx","Math","min","max","cy","r","stroke","strokeWidth","onAddWaterClick","DailyNorma","map","index","fontSize","href","waterRecords","onEdit","onDelete","listRef","useRef","current","scrollTop","ref","setSliderValue","setWaterRecords","WaterTracker","onSliderChange","newRecord","now","toString","toLocaleTimeString","hour","minute","_toConsumableArray","TodayWaterList","console","log","filter","record"],"sourceRoot":""}