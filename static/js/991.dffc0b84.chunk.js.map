{"version":3,"file":"static/js/991.dffc0b84.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/components/AuthWrapper/AuthWrapper.module.css?765f","components/AuthWrapper/AuthWrapper.jsx","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.css?2000","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"AuthForm_formContainer__JSxQY\",\"formLabel\":\"AuthForm_formLabel__F52GG\",\"btn\":\"AuthForm_btn__vR4ay\",\"formField\":\"AuthForm_formField__vGBWA\",\"maskedPassword\":\"AuthForm_maskedPassword__llV9a\",\"formFieldError\":\"AuthForm_formFieldError__NONmO\",\"error\":\"AuthForm_error__cNFpJ\",\"title\":\"AuthForm_title__nrVeh\",\"formFieldWrap\":\"AuthForm_formFieldWrap__1xoMh\",\"passwordWrapper\":\"AuthForm_passwordWrapper__jQhRT\",\"showPasswordButton\":\"AuthForm_showPasswordButton__8serp\",\"navLinksContainer\":\"AuthForm_navLinksContainer__j50Nc\",\"navLinks\":\"AuthForm_navLinks__6T1bF\",\"navButton\":\"AuthForm_navButton__J7joL\"};","import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport css from \"./AuthForm.module.css\";\nimport { useState } from \"react\";\n\n\nexport const AuthForm = ({ title, fields, onSubmit, navigationLinks }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n  const toggleRepeatPasswordVisibility = () => {\n    setShowRepeatPassword((prevState) => !prevState);\n  };\n\n  const initialValues = fields.reduce(\n    (values, field) => ({ ...values, [field.name]: \"\" }),\n    {}\n  );\n\n  const validationSchema = Yup.object(\n    fields.reduce(\n      (schema, field) => ({\n        ...schema,\n        [field.name]: field.validation,\n      }),\n      {}\n    )\n  );\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form className={css.formContainer} autoComplete=\"off\">\n          <h2 className={css.title}>{title}</h2>\n          {fields.map((field) => (\n            <div key={field.name} className={css.formFieldWrap}>\n              <label className={css.formLabel}>\n                {field.label}\n                <div className={css.passwordWrapper}>\n                  <Field\n                    type={\n                      field.name === \"password\" && !showPassword\n                        ? \"password\"\n                        : field.name === \"repeatPassword\" && !showRepeatPassword\n                        ? \"password\"\n                        : \"text\"\n                    }\n                    name={field.name}\n                    placeholder={field.placeholder}\n                    className={\n                      errors[field.name] && touched[field.name]\n                        ? `${css.formField} ${css.formFieldError}`\n                        : css.formField\n                    }\n                  />\n                  {field.name === \"password\" && (\n                    <button\n                      type=\"button\"\n                      onClick={togglePasswordVisibility}\n                      className={css.showPasswordButton}\n                    >\n                      <img\n                        src={\n                          showPassword\n                            ? \"./images_auth/eye.svg\"\n                            : \"./images_auth/eye-slash.svg\"\n                        }\n                        alt={showPassword ? \"Hide password\" : \"Show password\"}\n                      />\n                    </button>\n                  )}\n                  {field.name === \"repeatPassword\" && (\n                    <button\n                      type=\"button\"\n                      onClick={toggleRepeatPasswordVisibility}\n                      className={css.showPasswordButton}\n                    >\n                      <img\n                        src={\n                          showRepeatPassword\n                            ? \"./images_auth/eye.svg\"\n                            : \"./images_auth/eye-slash.svg\"\n                        }\n                        alt={\n                          showRepeatPassword ? \"Hide password\" : \"Show password\"\n                        }\n                      />\n                    </button>\n                  )}\n                </div>\n                <ErrorMessage\n                  name={field.name}\n                  component=\"div\"\n                  className={css.error}\n                />\n              </label>\n            </div>\n          ))}\n          <button type=\"submit\" disabled={isSubmitting} className={css.btn}>\n            {isSubmitting ? \"Submitting...\" : title}\n          </button>\n          <div className={css.navLinksContainer}>\n            {navigationLinks?.map((link) => (\n              <button\n                key={link.text}\n                type=\"button\"\n                className={css.navButton}\n                onClick={link.onClick}\n              >\n                {link.text}\n              </button>\n            ))}\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"AuthWrapper\":\"AuthWrapper_AuthWrapper__9ViU9\"};","import React from 'react';\nimport css from './AuthWrapper.module.css';\n\nexport const AuthWrapper = ({ children }) => {\n  return <div className={css.AuthWrapper}>{children}</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SignupPageWrapper\":\"SignUpPage_SignupPageWrapper__88A0C\"};","import { useDispatch } from \"react-redux\";\nimport { signUp } from \"../../redux/auth/operations\";\nimport { AuthForm } from \"../../components/AuthForm/AuthForm\";\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport {AuthWrapper} from \"../../components/AuthWrapper/AuthWrapper\";\nimport css from \"./SignUpPage.module.css\";\n\nconst SignupPage = () => {\nconst dispatch = useDispatch();\nconst navigate = useNavigate();\n\nconst fields = [\n  {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    placeholder: \"E-mail\",\n    validation: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Email is required\"),\n  },\n  {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    validation: Yup.string()\n      .min(8, \"Password must be at least 6 characters\").max(64, \"Password must be not more than 64 characters\")\n      .required(\"Password is required\"),\n  },\n  {\n    name: \"repeatPassword\",\n    type: \"password\",\n    label: \"Repeat Password\",\n    placeholder: \"Repeat password\",\n    validation: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Repeat Password is required\"),\n  },\n];\n\n  const handleSignup = async (values, event) => {\n    try {\n      // Call backend API for signup\n      const payload = {\n        email: values.email,\n        password: values.password,\n        repeatPassword: values.repeatPassword,\n      };\n      await dispatch(signUp(payload)); \n\n    // navigate(\"/home\");\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      alert(\"Signup failed. Please try again.\");\n    }\n  };\n\n  return (\n    <div className={css.SignupPageWrapper}>\n      \n    <AuthWrapper>\n    <AuthForm\n      title=\"Sign Up\"\n      fields={fields}\n      onSubmit={handleSignup}\n      navigationLinks={[\n        {\n          text: \"Sign In\",\n        onClick: () => navigate(\"/signin\"),\n        },\n      ]}\n    />\n    </AuthWrapper>\n    </div>\n  );\n};\n\n\nexport default (SignupPage);  //додала експорт по дефолду для навігації (Таня)"],"names":["AuthForm","_ref","title","fields","onSubmit","navigationLinks","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showRepeatPassword","setShowRepeatPassword","togglePasswordVisibility","prevState","toggleRepeatPasswordVisibility","initialValues","reduce","values","field","_objectSpread","_defineProperty","name","validationSchema","Yup","schema","validation","_jsx","Formik","children","_ref2","errors","touched","isSubmitting","_jsxs","Form","className","css","autoComplete","map","label","Field","type","placeholder","concat","onClick","src","alt","ErrorMessage","component","disabled","link","text","AuthWrapper","dispatch","useDispatch","navigate","useNavigate","email","required","min","max","oneOf","handleSignup","_asyncToGenerator","_regeneratorRuntime","_callee","event","payload","_context","prev","next","password","repeatPassword","signUp","t0","console","error","alert","stop","_x","_x2","apply","arguments"],"sourceRoot":""}