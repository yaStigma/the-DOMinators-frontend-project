{"version":3,"file":"static/js/818.84374c75.chunk.js","mappings":"oPACA,EAAoC,2CAApC,EAAgG,wCAAhG,EAAwP,2CAAxP,EAAmT,uCAAnT,EAAwW,qCAAxW,EAAoc,yCAApc,EAAsf,gCAAtf,EAA6hB,8BAA7hB,EAAkoB,qCAAloB,EAA8qB,8BAA9qB,EAA4tB,uC,UCA5tB,EAAsC,wCAAtC,EAAsF,0BAAtF,EAAiI,mCAAjI,EAAiL,+BAAjL,EAA6N,+B,oBCA7N,GAAgB,MAAQ,+BAA+B,aAAe,sCAAsC,WAAa,oCAAoC,YAAc,qCAAqC,UAAY,mCAAmC,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,WAAa,oCAAoC,SAAW,kCAAkC,MAAQ,+BAA+B,QAAU,iCAAiC,KAAO,8BAA8B,WAAa,oCAAoC,cAAc,qCAAqC,aAAe,sCAAsC,WAAa,oCAAoC,SAAW,kCAAkC,SAAW,kCAAkC,WAAa,oCAAoC,gBAAgB,uCAAuC,cAAc,qCAAqC,IAAM,8B,mBCwM5/B,EAlMwB,SAAHA,GAA6B,IAAvBC,EAAeD,EAAfC,gBACzBC,GAA4BC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA4BL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAwCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0Cb,EAAAA,EAAAA,UAAS,OAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAsCjB,EAAAA,EAAAA,UAAS,GAAEkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAGR,OAFAC,IACAC,OAAOC,iBAAiB,SAAUF,GAC3B,kBAAMC,OAAOE,oBAAoB,SAAUH,EAAsB,CAC1E,GAAG,IAEH,IAAMA,EAAuB,WAC3B,IAAMI,EAAWC,SAASC,eAAe,YACzCF,EAASG,MAAMC,OAAS,OACxBJ,EAASG,MAAMC,OAASJ,EAASK,aAAe,IAClD,EAEMC,GAAuBC,EAAAA,EAAAA,cAAY,WACvC,IAAIC,EACW,UAAXnC,EACFmC,EAAa,IAAT/B,EAA+B,GAAfI,EACA,QAAXR,IACTmC,EAAa,IAAT/B,EAA+B,GAAfI,GAGlB4B,MAAMD,KACRA,EAAI,GAGNtB,EAAuB,IAANsB,EAAU,MAAQA,EAAEE,QAAQ,GAAK,KACpD,GAAG,CAACrC,EAAQI,EAAQI,KAEpBc,EAAAA,EAAAA,YAAU,WACR,IAAMgB,EAAY,SAACC,GACH,WAAVA,EAAEC,KACJ7C,GAAgB,EAEpB,EAMA,OAHA6B,OAAOC,iBAAiB,UAAWa,GAG5B,WACLd,OAAOE,oBAAoB,UAAWY,EACxC,CACF,GAAG,CAAC3C,KAEJ2B,EAAAA,EAAAA,YAAU,WACRW,GACF,GAAG,CAACA,IAEJ,IAAMQ,EAAe,SAACC,GACO,MAAvBA,EAAMC,OAAOC,QACfF,EAAMC,OAAOC,MAAQ,GAEzB,EAEMC,EAAiB,SAACH,GACK,KAAvBA,EAAMC,OAAOC,QACfF,EAAMC,OAAOC,MAAQ,IAEzB,EAEME,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOR,GAAK,IAAAS,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,GAD/BZ,EAAMa,oBACAJ,EAAanC,GAEF,GAAC,CAAAoC,EAAAE,KAAA,QAEqC,OAArDE,EAAAA,GAAAA,MAAY,yCAAyCJ,EAAAK,OAAA,oBAIpC,IAAfN,EAAgB,CAAAC,EAAAE,KAAA,QAEoC,OAAtDE,EAAAA,GAAAA,MAAY,0CAA0CJ,EAAAK,OAAA,wBAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAKjClC,GAASsC,EAAAA,EAAAA,IAAiB,CAAEP,WAAAA,KAAeQ,SAAS,KAAD,GAA5DP,EAAAQ,KACAC,OACVlE,GAAgB,GACjByD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEDW,MAAM,yCAADC,OAAYZ,EAAAU,GAAMG,UAAW,yBAAAb,EAAAc,OAAA,GAAAhB,EAAA,mBAErC,gBAxBeiB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAuChB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,MAAWC,IAAKvD,EAAUwD,QAPhB,SAAChC,GACvBxB,EAASyD,SAAWzD,EAASyD,UAAYjC,EAAMC,QACjDhD,GAAgB,EAEpB,EAGyEiF,UACrEC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBI,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,WAAeI,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,GAAOI,SAAC,oBACvBN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,YAAiBE,QAAS,kBAAM/E,GAAgB,EAAM,EAACiF,UACxEN,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,KAAK,QAAQR,UAAWC,EAAAA,kBAGtCK,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,SAAaI,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,MAAUI,SAAC,eAC5BN,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,QAAYI,SAAC,6BAEhCC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,MAAUI,SAAC,cAC5BN,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,QAAYI,SAAC,gCAGlCN,EAAAA,EAAAA,KAAA,YACEU,GAAG,WACHC,UAAQ,EACRV,UAAWC,EAAAA,SACX5B,MAAM,wNAERiC,EAAAA,EAAAA,MAAA,QAAMN,UAAWC,EAAAA,KAAUU,SAAUpC,EAAW8B,SAAA,EAC9CN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,GAAOI,SAAC,0BACvBC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,WAAeI,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,SAAON,UAAWC,EAAAA,WAAeI,SAAA,EAC/BN,EAAAA,EAAAA,KAAA,SAAOa,KAAK,QAAQJ,KAAK,SAASnC,MAAM,QAAQwC,QAAoB,UAAXpF,EAAoBqF,SAAU,kBAAMpF,EAAU,QAAQ,IAAI,iBAErH4E,EAAAA,EAAAA,MAAA,SAAON,UAAWC,EAAAA,WAAeI,SAAA,EAC/BN,EAAAA,EAAAA,KAAA,SAAOa,KAAK,QAAQJ,KAAK,SAASnC,MAAM,MAAMwC,QAAoB,QAAXpF,EAAkBqF,SAAU,kBAAMpF,EAAU,MAAM,IAAI,kBAGjH4E,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBI,SAAA,EAC/BN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,WAAgBc,QAAQ,SAAQV,SAAC,+BACnDN,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,SACXW,KAAK,SACLH,GAAG,SACHD,KAAK,SACLnC,MAAOxC,EACPiF,SAAU,SAAC9C,GAAC,OAAKlC,EAAUkF,WAAWhD,EAAEI,OAAOC,OAAO,EACtD4C,QAAS/C,EACTgD,OAAQ5C,QAGZgC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBI,SAAA,EAC/BN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,WAAgBc,QAAQ,gBAAeV,SAAC,wGAC1DN,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,SACXW,KAAK,SACLH,GAAG,gBACHD,KAAK,gBACLnC,MAAOpC,EACP6E,SAAU,SAAC9C,GAAC,OAAK9B,EAAgB8E,WAAWhD,EAAEI,OAAOC,OAAO,EAC5D4C,QAAS/C,EACTgD,OAAQ5C,QAGZyB,EAAAA,EAAAA,KAAA,OAAAM,UACEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,QAAAM,SAAM,qDACNN,EAAAA,EAAAA,KAAA,QAAMC,UAAS,GAAAP,OAAKQ,EAAAA,IAAO,KAAAR,OAAIQ,EAAAA,eAAoBI,SAAEhE,UAGzD0D,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,GAAOI,SAAC,+CACvBN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAiBI,UAC/BN,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,SACXW,KAAK,SACLH,GAAG,eACHD,KAAK,eACLnC,MAAO5B,EACPqE,SAxFoB,SAAC9C,GAC/B,IAAMK,EAAQL,EAAEI,OAAOC,MACnB,cAAc8C,KAAK9C,IACrB3B,EAAesE,WAAW3C,GAE9B,EAoFY4C,QAAS/C,EACTgD,OAAQ5C,OAGZyB,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASZ,UAAWC,EAAAA,WAAeI,SAAC,gBAK3D,E,UChJA,EA7CmB,WACjB,IAAMxD,GAAWC,EAAAA,EAAAA,MACjBzB,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD+F,EAAY7F,EAAA,GAAEH,EAAeG,EAAA,IAGpCwB,EAAAA,EAAAA,YAAU,WACRF,GAASwE,EAAAA,EAAAA,MACX,GAAG,CAACxE,IAEJ,IAAMyE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAe,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAQ,CAAC,EAG1BC,EAAaD,EAAKE,UAAYF,EAAKE,UAAY,IAAO,EAGtDpD,EAAU,eAAApD,GAAAsD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOiD,GAAQ,OAAAlD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEPlC,GAASsC,EAAAA,EAAAA,IAAiB,CAAEP,WAAuB,IAAXgD,KAAoBxC,SAAS,KAAD,EAA7EP,EAAAQ,MAEZjE,GAAgB,GACjByD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEDgD,QAAQvC,MAAM,gCAA+BT,EAAAU,IAAS,yBAAAV,EAAAc,OAAA,GAAAhB,EAAA,kBAEzD,gBATeiB,GAAA,OAAAzE,EAAA0E,MAAA,KAAAC,UAAA,KAgBhB,OACMQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAwBI,SAAA,EACtCN,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAUI,SAAC,oBACzBC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAmBI,SAAA,EACjCC,EAAAA,EAAAA,MAAA,QAAMN,UAAWC,EAAeI,SAAA,CAAEqB,EAAW,SAC7C3B,EAAAA,EAAAA,KAAA,UAAQI,QATA,WAChB/E,GAAgB,EAClB,EAOsC4E,UAAWC,EAAeI,SAAC,YAGxDe,IAAgBrB,EAAAA,EAAAA,KAAC+B,EAAe,CAAC1G,gBAAiBA,EAAiBmD,WAAYA,MAGtF,E,UCpDJ,GAAgB,MAAQ,6BAA6B,aAAe,oCAAoC,YAAc,mCAAmC,WAAa,kCAAkC,eAAe,oCAAoC,MAAQ,6BAA6B,UAAY,iCAAiC,eAAiB,sCAAsC,mBAAqB,0CAA0C,UAAY,iCAAiC,cAAgB,qCAAqC,kBAAoB,yCAAyC,WAAa,kCAAkC,eAAiB,sCAAsC,WAAa,mCCoJrtB,EAhJsB,SAAHpD,GAAsC,IAAhCC,EAAeD,EAAfC,gBAAiB2G,EAAO5G,EAAP4G,QACxC1G,GAA4BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhC2G,EAAMzG,EAAA,GAAE0G,EAAS1G,EAAA,GACxBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BuG,EAAItG,EAAA,GAAEuG,EAAOvG,EAAA,GACpBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCqG,EAAOpG,EAAA,GAAEqG,EAAUrG,EAAA,GACpBW,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACR,IAAMgB,EAAY,SAACC,GACH,WAAVA,EAAEC,KACJ7C,GAAgB,EAEpB,EAMA,OAHA6B,OAAOC,iBAAiB,UAAWa,GAG5B,WACLd,OAAOE,oBAAoB,UAAWY,EACxC,CACF,GAAG,CAAC3C,IACJ,IAAMkH,GAAc3E,EAAAA,EAAAA,cAAY,WAC9BvC,GAAgB,EAClB,GAAG,CAACA,KAEJ2B,EAAAA,EAAAA,YAAU,WACRwF,IAGA,IAAMC,EAAgB,SAACrE,GACH,WAAdA,EAAMF,KACRqE,GAEJ,EAEA,OADAjF,SAASH,iBAAiB,UAAWsF,GAC9B,WACLnF,SAASF,oBAAoB,UAAWqF,EAC1C,CACF,GAAG,CAACF,IAEJ,IAMMG,EAAqB,SAACC,GAC1BT,GAAU,SAACU,GAAU,OAAKC,KAAKC,IAAI,EAAGF,EAAaD,EAAM,GAC3D,EAEMnE,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACZqD,EAAQ,CAADvD,EAAAE,KAAA,QAC2B,OAArCS,MAAM,+BAA+BX,EAAAK,OAAA,wBAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI/BlC,GAASiG,EAAAA,EAAAA,IAAkB,CAAEd,OAAAA,EAAQE,KAAAA,KAAS,KAAD,EAEnD9G,GAAgB,GAChB2G,EAAQC,EAAQE,GAChBrD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEAW,MAAM,wBAA0BX,EAAAU,GAAMG,SAAS,yBAAAb,EAAAc,OAAA,GAAAhB,EAAA,mBAElD,kBAde,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KAqCVyC,EAAuB,WAM3B,IALA,IAAMQ,EAAe1F,SAASC,eAAe,QACvC0F,EAAM,IAAIC,KACVC,EAAcF,EAAIG,WAClBC,EAAmD,EAAnCR,KAAKS,MAAML,EAAIM,aAAe,GAE3CC,EAAO,EAAGA,EAAO,GAAIA,IAC5B,IAAK,IAAIC,EAAS,EAAGA,EAAS,GAAIA,GAAU,EAAG,CAC7C,IAAMC,EAASpG,SAASqG,cAAc,UACtCD,EAAOpF,MAAK,GAAAoB,OAAM8D,EAAKI,WAAWC,SAAS,EAAG,KAAI,KAAAnE,OAAI+D,EAAOG,WAAWC,SAAS,EAAG,MACpFH,EAAOI,YAAW,GAAApE,OAAM8D,EAAKI,WAAWC,SAAS,EAAG,KAAI,KAAAnE,OAAI+D,EAAOG,WAAWC,SAAS,EAAG,MACtFL,IAASL,GAAeM,IAAWJ,IACrCK,EAAOK,UAAW,EAClB3B,EAAQsB,EAAOpF,QAEjB0E,EAAagB,YAAYN,EAC3B,CAEJ,EAEA,OACE1D,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,MAAWC,IAAKvD,EAAUwD,QApEhB,SAAChC,GACvBxB,EAASyD,SAAWzD,EAASyD,UAAYjC,EAAMC,QACjDkE,GAEJ,EAgEyEjC,UACrEC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,aAAiBI,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,YAAgBI,SAAA,EAC9BN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,WAAeI,SAAC,eAC/BN,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,MAAWE,QAASmC,EAAYjC,UAACN,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,KAAK,QAAQR,UAAWC,EAAAA,kBAEtFK,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,UAAcI,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,cAAmBc,QAAQ,SAAQV,SAAC,qBACnDN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,kBAAuBc,QAAQ,SAAQV,SAAC,sBAC1DC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,eAAmBI,SAAA,EACjCN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,eAAoBE,QAAS,kBAAMsC,GAAoB,GAAG,EAACpC,SAAC,OAC/EC,EAAAA,EAAAA,MAAA,QAAMG,GAAG,SAAQJ,SAAA,CAAE2B,EAAO,UAC1BjC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,eAAoBE,QAAS,kBAAMsC,EAAmB,GAAG,EAACpC,SAAC,UAEhFN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,kBAAuBc,QAAQ,OAAMV,SAAC,qBACxDN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,UAAeQ,GAAG,OAAOK,SAAU,SAAC9C,GAAC,OAAKmE,EAAQnE,EAAEI,OAAOC,MAAM,KACpF0B,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,cAAmBc,QAAQ,QAAOV,SAAC,wCAClDN,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,UACXW,KAAK,SACLH,GAAG,QACHpC,MAAO2D,EACPlB,SAhEiB,SAAC9C,GAC1B,IAAMK,EAAQL,EAAEI,OAAOC,MACjB2F,EAAQ,cAAc7C,KAAK9C,GACjCgE,EAAW2B,GACPA,GACF/B,EAAUgC,OAAO5F,GAErB,EA0DU4C,QAxDU,SAACjD,GACI,MAAnBA,EAAEI,OAAOC,OACX4D,EAAU,GAEd,EAqDUf,OAnDS,SAAClD,GACK,KAAnBA,EAAEI,OAAOC,OACX4D,EAAU,EAEd,KAiDQ3B,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,mBAAuBI,SAAA,EACrCN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAAA,WAAgBW,KAAK,OAAOH,GAAG,gBAAgBC,UAAQ,EAACrC,MAAK,GAAAoB,OAAKuC,EAAM,UAC1FjC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,WAAgBE,QAAS5B,EAAW8B,SAAC,mBAMpE,EC/Ia6D,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAAa,ECQ9DC,EAAc,SAAHnJ,GAAyB,IAAnBoJ,EAAWpJ,EAAXoJ,YACrBlJ,GAAsCC,EAAAA,EAAAA,UAAS,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CmJ,EAAWjJ,EAAA,GAAEkJ,EAAclJ,EAAA,GAqBlC,OAnBAwB,EAAAA,EAAAA,YAAU,WACR,IAAM2H,EAAoB,WACpBzH,OAAO0H,YAAc,KACvBF,EAAe,KACNxH,OAAO0H,YAAc,IAC9BF,EAAe,KAEfA,EAAe,IAEnB,EAKA,OAHAC,IACAzH,OAAOC,iBAAiB,SAAUwH,GAE3B,WACLzH,OAAOE,oBAAoB,SAAUuH,EACvC,CACF,GAAG,KAGDpE,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,EAAoBC,MAAM,OAAOrH,OAAO,KAAKsH,QAAO,OAAArF,OAAS+E,EAAW,OAAMnE,SAAA,EAC5FN,EAAAA,EAAAA,KAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIH,MAAOL,EAAahH,OAAO,IAAIyH,KAAK,UAAUC,GAAG,OACnEnF,EAAAA,EAAAA,KAAA,QAAMgF,EAAE,IAAIC,EAAE,IAAIH,MAAQN,EAAc,IAAOC,EAAahH,OAAO,IAAIyH,KAAK,UAAUC,GAAG,OACzFnF,EAAAA,EAAAA,KAAA,UACEoF,GAAIvC,KAAKwC,IAAIxC,KAAKC,IAAK0B,EAAc,IAAOC,EAAa,GAAIA,EAAc,GAC3Ea,GAAG,KACHC,EAAE,IACFL,KAAK,UACLM,OAAO,UACPC,YAAY,QAIpB,EAoFA,EA9EqB,WACnB,IAAA7J,GAAwCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDyF,EAAYxF,EAAA,GAAER,EAAeQ,EAAA,GAE9BiB,GAAWC,EAAAA,EAAAA,MAEX2I,EAAcC,aAAaC,QAAQ,gBACnCC,GAAerE,EAAAA,EAAAA,IAAY2C,IAGjCnH,EAAAA,EAAAA,YAAU,WACRF,GAASwE,EAAAA,EAAAA,MACX,GAAG,CAACxE,IACN,IAAMyE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAErB5C,IADa,OAAR0C,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAQ,CAAC,GACNE,WAIxB5E,EAAAA,EAAAA,YAAU,WACJ0I,GACF5I,GAASgJ,EAAAA,EAAAA,MAEb,GAAG,CAAChJ,EAAU4I,IAGd,IAAMK,EAAaF,EAAaG,QAAO,SAACC,EAAKC,GAAM,OAAKD,EAAMC,EAAOjE,MAAM,GAAE,GACvEkE,EAAmBtD,KAAKwC,IAAKU,EAAalH,EAAc,IAAK,KAM7DuH,EAAgB,eAAA3H,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACA,GAAvB3D,GAAgB,IACZqK,EAAY,CAAD5G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELlC,GAASgJ,EAAAA,EAAAA,OAA0B,KAAD,EAAAhH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAExCgD,QAAQvC,MAAM,+BAA8BT,EAAAU,IAAO,yBAAAV,EAAAc,OAAA,GAAAhB,EAAA,kBAGxD,kBATqB,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KAUtB,OACEQ,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,EAAyBvE,SAAA,EACvCN,EAAAA,EAAAA,KAACqG,EAAU,KACXrG,EAAAA,EAAAA,KAAA,OAAKC,UAAW4E,KAChBtE,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,EAAqBvE,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,EAAyBvE,SAAA,EACvCN,EAAAA,EAAAA,KAAA,QAAMC,UAAW4E,EAAqBvE,SAAC,WACvCN,EAAAA,EAAAA,KAACuE,EAAW,CAACC,YAAa2B,KAE1BnG,EAAAA,EAAAA,KAAA,OAAKC,UAAW4E,EAAuBvE,SACpC,CAAC,EAAG,GAAI,KAAKgG,KAAI,SAAChI,EAAOiI,GAAK,OAC7BhG,EAAAA,EAAAA,MAAA,OAAiBN,UAAW4E,EAAcvE,SAAA,EACxCN,EAAAA,EAAAA,KAAA,OAAKC,UAAW4E,KAChBtE,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAOhC,EAAM,SAFLiI,EAGJ,UAKZhG,EAAAA,EAAAA,MAAA,UAAQN,UAAW4E,EAAoBzE,QAjCjB,WAC1B/E,GAAgB,EAClB,EA+B0EiF,SAAA,EAClEN,EAAAA,EAAAA,KAAA,OAAKC,UAAW4E,EAAaC,MAAM,KAAKrH,OAAO,KAAI6C,UACjDN,EAAAA,EAAAA,KAAA,OAAKwG,KAAK,kDACN,eAGPnF,IACHrB,EAAAA,EAAAA,KAACyG,EAAa,CACZpL,gBAAiBA,EACjB2G,QAASoE,SAMjB,ECjIA,GAAgB,sBAAwB,8CAA8C,MAAQ,8BAA8B,KAAO,6BAA6B,SAAW,iCAAiC,KAAO,6BAA6B,OAAS,+BAA+B,WAAa,mCAAmC,KAAO,6BAA6B,QAAU,gCAAgC,WAAa,mCAAmC,aAAe,qCAAqC,UAAY,kCAAkC,OAAS,gCCAjjB,EAAwB,8BAAxB,EAAqE,qCAArE,EAAwH,oCAAxH,EAAyK,mCAAzK,EAA0N,oCAA1N,EAA0Q,kCAA1Q,EAAwT,kCAAxT,EAAyW,qCAAzW,EAA+Z,uCAA/Z,EAA2d,2CAA3d,EAA2hB,2CAA3hB,EAAklB,kCAAllB,EAAooB,sCAApoB,GAA8rB,0CAA9rB,GAAqvB,mCAArvB,GAAqyB,mCAAryB,GAAs1B,oCAAt1B,GAAs4B,kCAAt4B,GAAu/B,mCC0Mv/B,GApMuB,SAAHhL,GAA0C,IAApCC,EAAeD,EAAfC,gBAAiBqL,EAAWtL,EAAXsL,YACzCpL,GAA4BC,EAAAA,EAAAA,UAASmL,EAAcA,EAAYzE,OAAS,GAAEzG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnE2G,EAAMzG,EAAA,GAAE0G,EAAS1G,EAAA,GACxBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BuG,EAAItG,EAAA,GAAEuG,EAAOvG,EAAA,GACpBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCqG,EAAOpG,EAAA,GAAEqG,EAAUrG,EAAA,GACpBW,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAWC,EAAAA,EAAAA,MACX8I,GAAerE,EAAAA,EAAAA,IAAY2C,IAGjCnH,EAAAA,EAAAA,YAAU,WACR,IAAM2J,EAAY,eAAAlI,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACblC,GAASgJ,EAAAA,EAAAA,OAA0B,KAAD,mBAAAhH,EAAAc,OAAA,GAAAhB,EAAA,KACzC,kBAFiB,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KAIlB4G,IACAnE,GACF,GAAG,CAAC1F,KAEJE,EAAAA,EAAAA,YAAU,WAER,GAAI0J,EAAa,CACf,IAAME,EAAY,IAAI1D,KAAKwD,EAAYG,MACjCC,EAAQF,EAAUxD,WAClB2D,EAAUH,EAAUrD,aAAaK,WAAWC,SAAS,EAAG,KACxDmD,EAAOF,GAAS,GAAK,KAAO,KAC5BG,GAAkBH,EAAQ,IAAM,IAAIlD,WAAWC,SAAS,EAAG,KACjEzB,EAAQ,GAAD1C,OAAIuH,EAAc,KAAAvH,OAAIqH,EAAO,KAAArH,OAAIsH,GAE1C,CACF,GAAG,CAACnB,EAAca,KAGhB1J,EAAAA,EAAAA,YAAU,WACR,IAAMyF,EAAgB,SAACrE,GACH,WAAdA,EAAMF,KACR7C,GAAgB,EAEpB,EAGA,OADAiC,SAASH,iBAAiB,UAAWsF,GAC9B,WACLnF,SAASF,oBAAoB,UAAWqF,EAC1C,CACF,GAAG,CAACpH,IAEN,IAAMkH,EAAc,WAClBlH,GAAgB,EAElB,EAQMqH,EAAqB,SAACC,GAC1BT,GAAU,SAACU,GAAU,OAAKC,KAAKC,IAAI,EAAGF,EAAaD,EAAM,GAC3D,EAEMnE,EAAU,eAAA0I,GAAAxI,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwI,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAT,EAAAC,EAAAC,EAAAC,EAAAJ,EAAAW,EAAAC,EAAA,OAAA9I,IAAAA,MAAA,SAAA+I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,UACZqD,EAAQ,CAADqF,EAAA1I,KAAA,QAC2B,OAArCS,MAAM,+BAA+BiI,EAAAvI,OAAA,qBAInCuH,IAAeA,EAAYiB,IAAG,CAAAD,EAAA1I,KAAA,SAqB0B,OArB1B0I,EAAA3I,KAAA,EAExBqI,EAAc9J,SAASC,eAAe,QACtC8J,EAAUD,EAAY9I,MAAKgJ,EACRD,EAAQO,MAAM,KAAIL,GAAA9L,EAAAA,EAAAA,GAAA6L,EAAA,GAApCR,EAAKS,EAAA,GAAER,EAAOQ,EAAA,GACfP,EAAOK,EAAQQ,SAAS,MAAQ,KAAO,KACzCZ,EAAiBa,SAAShB,EAAO,IAExB,OAATE,GAAoC,KAAnBC,EACnBA,GAAkB,GACA,OAATD,GAAoC,KAAnBC,IAC1BA,EAAiB,IAGbJ,EAAO,IAAI3D,MACZ6E,SAASd,EAAgBa,SAASf,EAAS,IAAK,EAAG,GAGxDF,EAAKkB,SAASlB,EAAKzD,WAAa,GAE1BoE,EAAgBX,EAAKmB,cACrBP,EAAWf,EAAYiB,IAAIM,MAAQvB,EAAYiB,IAAGD,EAAA1I,KAAA,GAElDlC,GAASoL,EAAAA,EAAAA,IAAkB,CAAET,SAAAA,EAAUZ,KAAMW,EAAevF,OAAAA,KAAW,KAAD,UAAAyF,EAAA1I,KAAA,GAGtElC,GAASgJ,EAAAA,EAAAA,OAA0B,KAAD,GAGxCzK,GAAgB,GAAOqM,EAAA1I,KAAA,iBAAA0I,EAAA3I,KAAA,GAAA2I,EAAAlI,GAAAkI,EAAA,SAEvB5F,QAAQvC,MAAKmI,EAAAlI,IAAQ,yBAAAkI,EAAA9H,OAAA,GAAAuH,EAAA,mBAG1B,kBAxCe,OAAAD,EAAApH,MAAA,KAAAC,UAAA,KA+DVyC,EAAuB,WAC3B,IAAMQ,EAAe1F,SAASC,eAAe,QAC7C,GAAKyF,EAAL,CAEA,IAAK,IAAIQ,EAAO,EAAGA,EAAO,GAAIA,IAC5B,IAAK,IAAIC,EAAS,EAAGA,EAAS,GAAIA,GAAU,EAAG,CAC7C,IAAMC,EAASpG,SAASqG,cAAc,UAChCqD,EAAOxD,GAAQ,GAAK,KAAO,KAC3B2E,GAAiB3E,EAAO,IAAM,IAAII,WAAWC,SAAS,EAAG,KAC/DH,EAAOpF,MAAK,GAAAoB,OAAMyI,EAAa,KAAAzI,OAAI+D,EAAOG,WAAWC,SAAS,EAAG,KAAI,KAAAnE,OAAIsH,GACzEtD,EAAOI,YAAW,GAAApE,OAAMyI,EAAa,KAAAzI,OAAI+D,EAAOG,WAAWC,SAAS,EAAG,KAAI,KAAAnE,OAAIsH,GAC/EhE,EAAagB,YAAYN,EAC3B,CAGF,IAAMT,EAAM,IAAIC,KACVC,EAAcF,EAAIG,WAClBC,EAAmD,EAAnCR,KAAKS,MAAML,EAAIM,aAAe,GAC9C6E,EAAcjF,GAAe,GAAK,KAAO,KACzCkF,GAAwBlF,EAAc,IAAM,IAAIS,WAAWC,SAAS,EAAG,KAC7Eb,EAAa1E,MAAK,GAAAoB,OAAM2I,EAAoB,KAAA3I,OAAI2D,EAAcO,WAAWC,SAAS,EAAG,KAAI,KAAAnE,OAAI0I,EAlBpE,CAmB3B,EAEA,OACEpI,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,IAAKvD,EAAUwD,QAjGhB,SAAChC,GACvBxB,EAASyD,SAAWzD,EAASyD,UAAYjC,EAAMC,QACjDkE,GAEJ,EA6FyEjC,UACrEC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAiBI,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAgBI,SAAA,EAC9BN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAeI,SAAC,sCAC/BN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAiBE,QAASmC,EAAYjC,UACzDN,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,KAAK,QAAQR,UAAWC,UAGpCK,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAcI,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,GAAeI,SAAA,EAC7BN,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,KAAK,WACfF,EAAAA,EAAAA,MAAA,QAAMN,UAAWC,GAAgBI,SAAA,CAAE2B,EAAO,UAC1CjC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,GAAcI,SAAE6B,QAEnCnC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAkBI,SAAC,2BAClCN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,GAAuBc,QAAQ,SAAQV,SAAC,sBAC1DC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAmBI,SAAA,EACjCN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAkBE,QAAS,kBAAMsC,GAAoB,GAAG,EAACpC,SAAC,OAC7EC,EAAAA,EAAAA,MAAA,QAAMN,UAAWC,EAAwBQ,GAAG,SAAQJ,SAAA,CAAE2B,EAAO,UAC7DjC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAkBE,QAAS,kBAAMsC,EAAmB,GAAG,EAACpC,SAAC,UAE9EN,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAmBc,QAAQ,OAAMV,SAAC,qBACpDN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAeQ,GAAG,OAAOK,SAAU,SAAC9C,GAAC,OAAKmE,EAAQnE,EAAEI,OAAOC,MAAM,KACpF0B,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAkBI,SAAC,wCAClCN,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXW,KAAK,SACLH,GAAG,QACHpC,MAAO2D,EACPlB,SA1EiB,SAAC9C,GAC1B,IAAMK,EAAQL,EAAEI,OAAOC,MACjB2F,EAAQ,cAAc7C,KAAK9C,GACjCgE,EAAW2B,GACPA,GACF/B,EAAUgC,OAAO5F,GAErB,EAoEU4C,QAlEU,SAACjD,GACI,MAAnBA,EAAEI,OAAOC,OACX4D,EAAU,GAEd,EA+DUf,OA7DS,SAAClD,GACK,KAAnBA,EAAEI,OAAOC,OACX4D,EAAU,EAEd,KA2DQ3B,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAuBI,SAAA,EACrCN,EAAAA,EAAAA,KAAA,SACEC,UAAWC,GACXW,KAAK,OACLH,GAAG,gBACHC,UAAQ,EACRrC,MAAK,GAAAoB,OAAKuC,EAAM,UAElBjC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,GAAgBE,QAAS5B,EAAW8B,SAAC,mBAMpE,E,WCsQA,IACA,GAAe,IAA0B,2DC/czC,IAAgB,OAAS,iCAAiC,aAAe,uCAAuC,WAAa,qCAAqC,KAAO,+BAA+B,gBAAkB,0CAA0C,aAAe,uCAAuC,SAAW,mCAAmC,UAAY,oCAAoC,QAAU,mCCMrZgI,GAAmB,SAAHlN,GAKtB,IAJLmN,EAAWnN,EAAXmN,YACAC,EAAUpN,EAAVoN,WACAC,EAAWrN,EAAXqN,YACAC,EAAatN,EAAbsN,cAEApN,GAA0CC,EAAAA,EAAAA,UAASmN,GAAclN,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DqN,EAAanN,EAAA,GAAEoN,EAAgBpN,EAAA,GACtCI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCiN,EAAQhN,EAAA,GAAEiN,EAAWjN,EAAA,GAC5BG,GAAkCT,EAAAA,EAAAA,UAAS,CAAEyJ,EAAG,EAAGC,EAAG,IAAIhJ,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnD+M,EAAS9M,EAAA,GAAE+M,EAAY/M,EAAA,GACxBa,GAAWC,EAAAA,EAAAA,MACXH,GAAWC,EAAAA,EAAAA,QAAO,OAExBG,EAAAA,EAAAA,YAAU,WACRF,GAASwE,EAAAA,EAAAA,MACX,GAAG,CAACxE,IAEJ,IAAMyE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAe,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAQ,CAAC,EAE1BC,EAAaD,EAAKE,UAAYF,EAAKE,UAAY,IAAO,GAE5D5E,EAAAA,EAAAA,YAAU,WACR4L,EAAiBF,EACnB,GAAG,CAACA,IAGJ,IAmBMO,EAAgB,WACpBH,GAAY,EACd,EAEQI,EAAcP,EAAdO,IAAKC,EAASR,EAATQ,KAEPC,EAAa,CACjBF,IAAI,GAADxJ,OAAKwJ,EAAM,IAAG,MACjBC,KAAK,GAADzJ,OAAKyJ,EAAO,EAAC,MACjBE,UAAW,0BACXC,OAAQ,IAGJtL,GAAYJ,EAAAA,EAAAA,cAChB,SAACQ,GACmB,WAAdA,EAAMF,KACRsK,GAEJ,GACA,CAACA,KAGHxL,EAAAA,EAAAA,YAAU,WAER,OADAM,SAASH,iBAAiB,UAAWa,GAC9B,WACLV,SAASF,oBAAoB,UAAWY,EAC1C,CACF,GAAG,CAACA,IAEJ,IAAMuL,GAAqB3L,EAAAA,EAAAA,cACzB,SAACQ,GACKxB,EAASyD,UAAYzD,EAASyD,QAAQmJ,SAASpL,EAAMC,SACvDmK,GAEJ,GACA,CAACA,IAUH,OAPAxL,EAAAA,EAAAA,YAAU,WAER,OADAM,SAASH,iBAAiB,YAAaoM,GAChC,WACLjM,SAASF,oBAAoB,YAAamM,EAC5C,CACF,GAAG,CAACA,IAECd,GAKHlI,EAAAA,EAAAA,MAAA,OACEN,UAAS,GAAAP,OAAKmF,GAAAA,aAAmB,KAAAnF,OAAI6I,EAAc1D,GAAAA,KAAc,IACjErH,MAAO4L,EACPK,YAxEoB,SAACrL,GACvB0K,GAAY,GACZE,EAAa,CAAEhE,EAAG5G,EAAMsL,QAASzE,EAAG7G,EAAMuL,SAC5C,EAsEIC,YApEe,SAACxL,GAClB,GAAKyK,EAAL,CAEA,IAAMgB,EAASzL,EAAMsL,QAAUX,EAAU/D,EACnC8E,EAAS1L,EAAMuL,QAAUZ,EAAU9D,EAEzC2D,GAAiB,SAACmB,GAAY,MAAM,CAClCb,IAAKa,EAAab,IAAMY,EACxBX,KAAMY,EAAaZ,KAAOU,EAC3B,IAEDb,EAAa,CAAEhE,EAAG5G,EAAMsL,QAASzE,EAAG7G,EAAMuL,SAVrB,CAWvB,EAyDIK,UAAWf,EACXgB,aAAchB,EACd9I,IAAKvD,EAAU0D,SAAA,EAEfC,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAAAA,OAAcvE,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,KAAGN,UAAW4E,GAAAA,KAAYvE,SAAA,CACvBmI,EAAY5B,KAAK,KAAG4B,EAAYyB,UAEnClK,EAAAA,EAAAA,KAAA,UAAQC,UAAW4E,GAAAA,gBAAwBzE,QAASoI,EAAWlI,UAC7DN,EAAAA,EAAAA,KAAA,OAAK8E,MAAM,OAAOrH,OAAO,OAAO+H,OAAO,eAAeN,KAAK,eAAc5E,UACvEN,EAAAA,EAAAA,KAAA,OAAKmK,UAAS,GAAAzK,OAAK0K,GAAW,yBAIpC7J,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAAAA,QAAevE,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,KAAGC,UAAW4E,GAAAA,UAAiBvE,SAAC,kBAChCC,EAAAA,EAAAA,MAAA,KAAGN,UAAW4E,GAAAA,UAAiBvE,SAAA,CAAEqB,EAAW,YAE9CpB,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAAAA,QAAevE,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,KAAGC,UAAW4E,GAAAA,UAAiBvE,SAAC,oCAChCC,EAAAA,EAAAA,MAAA,KAAGN,UAAW4E,GAAAA,UAAiBvE,SAAA,CAAEmI,EAAY4B,iBAAiB,WAEhE9J,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAAAA,QAAevE,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,KAAGC,UAAW4E,GAAAA,UAAiBvE,SAAC,iCAChCN,EAAAA,EAAAA,KAAA,KAAGC,UAAW4E,GAAAA,UAAiBvE,SAAEmI,EAAY6B,qBAjC1C,IAqCX,ECtIA,IAAgB,eAAiB,wCAAwC,eAAiB,wCAAwC,SAAW,kCAAkC,QAAU,iCAAiC,UAAY,mCAAmC,iBAAiB,wCAAwC,cAAgB,uCAAuC,WAAa,oCAAoC,cAAgB,uCAAuC,aAAe,sCAAsC,gBAAkB,yCAAyC,gBAAkB,0C,WCSplB,SAASC,KACtB,IAAMC,GAAe5M,EAAAA,EAAAA,cAAY,SAAC6M,GAKhC,MAJe,CACb,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAE1CA,EAChB,GAAG,IAoBHnP,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CiN,EAAW/M,EAAA,GAAEkP,EAAclP,EAAA,GAClCI,GAAsCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7C6M,EAAW5M,EAAA,GAAE8O,EAAc9O,EAAA,GAClCG,GAAkCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvC4O,EAAS3O,EAAA,GAAE4O,EAAY5O,EAAA,GAExB6O,EAAYnF,aAAaC,QAAQ,gBAEvCxJ,GAAkCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA1C2O,EAAS1O,EAAA,GAAE2O,EAAY3O,EAAA,GAC9BG,GAA0CjB,EAAAA,EAAAA,UAAS,CAAE2N,IAAK,EAAG+B,MAAO,IAAIxO,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjEkM,EAAajM,EAAA,GAAEyO,EAAgBzO,EAAA,GACtC0O,GAA0B5P,EAAAA,EAAAA,UAAS,CACjC6P,mBAAmB,IAAIlI,MAAOmI,WAC9BC,aAAa,IAAIpI,MAAOqI,cACxBC,aAAa,IAAItI,MAAOuI,YAHnBC,GAILjQ,EAAAA,EAAAA,GAAA0P,EAAA,GAJoB,GAMdC,EAAgDM,EAAhDN,kBAAmBE,EAA6BI,EAA7BJ,YAAaE,EAAgBE,EAAhBF,YACxCG,GAAoDpQ,EAAAA,EAAAA,UAAS6P,GAAkBQ,GAAAnQ,EAAAA,EAAAA,GAAAkQ,EAAA,GAAxEE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,GAAwCxQ,EAAAA,EAAAA,UAAS+P,GAAYU,GAAAvQ,EAAAA,EAAAA,GAAAsQ,EAAA,GAAtDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,GAAYC,EAAAA,EAAAA,UAAQ,kBAAM5B,EAAaqB,EAAmB,GAAE,CAACA,EAAoBrB,IACjF6B,GAAmBD,EAAAA,EAAAA,UAAQ,WAC/B,OAAOE,MAAMC,KACX,CAAEC,OAAQ,IAAItJ,KAAK+I,EAAcJ,EAAqB,EAAG,GAAGJ,YAC5D,SAACgB,EAAGlG,GAAK,MAAM,CACb2D,MAAOiC,EACPtF,KAAMN,EAAQ,EACd8D,iBAAkB,EAClBC,aAAc,EACf,GAEL,GAAG,CAACuB,EAAoBI,EAAcE,IAEhCO,EAAoB,SAACC,GACzB,IACMC,GACHf,EAAqBc,EAFJ,OAGpBT,EACoB,KAAlBU,IAAuC,IAAfD,EACpBV,EAAe,EACG,IAAlBW,GAAqC,IAAdD,EACvBV,EAAe,EACfA,GAENH,EAAsBc,EACxB,EAEM9P,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACR,GAAK8N,EAAL,CAEAE,GAAa,GACb,IAAM6B,EAAoBV,EAE1BrP,GAASgQ,EAAAA,EAAAA,IAAe,CACtBX,UAAWU,EACXE,KAAMd,EACNvG,YAAaoF,KAEZzL,SACA2N,MAAK,SAACC,GACL,GAAIA,GAAYX,MAAMY,QAAQD,EAASvL,MAAO,CAC5C,IAAMyL,EAAaF,EAASvL,KAAKsE,QAAO,SAACoH,EAAKC,GAC5C,IAAMC,EAjFE,SAACC,GACjB,IAAKA,GAA8B,kBAAZA,EAAsB,OAAO,KACpD,IAAAC,EAAqBD,EAAQ3F,MAAM,MAAK6F,GAAAhS,EAAAA,EAAAA,GAAA+R,EAAA,GAAjCE,EAAGD,EAAA,GAAEvD,EAAKuD,EAAA,GACjB,IAAKC,IAAQxD,EAAO,OAAO,KAE3B,IAIMO,EAJS,CACb,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAE9BkD,QAAQzD,EAAM0D,QACxC,IAAoB,IAAhBnD,EAAmB,OAAO,KAE9B,IAAMoD,EAAY/F,SAAS4F,EAAIE,QAC/B,OAAI9P,MAAM+P,GAAmB,KAEtB,IAAI3K,MAAK,IAAIA,MAAOqI,cAAed,EAAYoD,EACxD,CAiE2BC,CAAUT,EAAKxG,MAC5ByG,IAEFF,EADYE,EAAStF,cAAcJ,MAAM,KAAK,IACnC,CACTyC,iBAAkBvC,SAASuF,EAAKhD,mBAAqB,EACrDC,aAAc+C,EAAK/C,cAAgB,IAGvC,OAAO8C,CACT,GAAG,CAAC,GAEEW,EAAsB1B,EAAiB/F,KAAI,SAACoH,GAChD,IACMxP,EADU,IAAIgF,KAAK+I,EAAcJ,EAAoB6B,EAAI7G,MAC3CmB,cAAcJ,MAAM,KAAK,GACvCoG,EAAeb,EAAWjP,GAEhC,OAAI8P,GACFC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACKP,GAAG,IACNrD,iBAAkB2D,EAAa3D,iBAC/BC,aAAc0D,EAAa1D,eAGxBoD,CACT,IACA7C,EAAakD,EACf,CACF,IACCG,OAAM,SAAC3O,GACNuC,QAAQvC,MAAM,uBAAwBA,EACxC,IACC4O,SAAQ,WACPnD,GAAa,EACf,GA/CoB,CAgDxB,GAAG,CAACF,EAAWe,EAAoBI,EAAcnP,EAAUuP,EAAkBF,IA0B7E,OACE5L,EAAAA,EAAAA,MAAA6N,EAAAA,SAAA,CAAA9N,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAAAA,eAAsBvE,SAAA,EACpCN,EAAAA,EAAAA,KAAA,MAAIC,UAAW4E,GAAAA,WAAkBvE,SAAC,WAClCC,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAAAA,cAAqBvE,SAAA,EACnCN,EAAAA,EAAAA,KAAA,UACEC,UAAS,GAAAP,OAAKmF,GAAAA,YAAkB,KAAAnF,OAAImF,GAAAA,iBACpCzE,QAAS,kBAAMsM,GAAmB,EAAE,EAACpM,UAErCN,EAAAA,EAAAA,KAAA,OAAK8E,MAAM,OAAOrH,OAAO,OAAM6C,UAC7BN,EAAAA,EAAAA,KAAA,OAAKwG,KAAI,GAAA9G,OAAK0K,GAAW,kCAG7B7J,EAAAA,EAAAA,MAAA,KAAGN,UAAW4E,GAAAA,aAAoBvE,SAAA,CAC/B6L,EAAU,KAAGF,MAEhBjM,EAAAA,EAAAA,KAAA,UACRC,UAAS,GAAAP,OAAKmF,GAAAA,YAAkB,KAAAnF,OAAImF,GAAAA,iBACpCzE,QAAS,kBAAMsM,EAAkB,EAAE,EACnC2B,SAAUxC,IAAuBT,GAAqBa,IAAiBX,EAAYhL,UAEnFN,EAAAA,EAAAA,KAAA,OAAK8E,MAAM,OAAOrH,OAAO,OAAM6C,UAC7BN,EAAAA,EAAAA,KAAA,OAAKwG,KAAI,GAAA9G,OAAK0K,GAAW,uCAMtBW,GACC/K,EAAAA,EAAAA,KAACsO,GAAAA,EAAM,KAEPtO,EAAAA,EAAAA,KAAA,MAAIC,UAAW4E,GAAAA,SAAgBvE,SAC3B,OAATsK,QAAS,IAATA,OAAS,EAATA,EAAWtE,KAAI,SAACoH,GACf,IAvCmBa,EAuCbC,EACJd,EAAI7G,OAAS2E,GAAeJ,IAAsBS,EAEpD,OACEtL,EAAAA,EAAAA,MAAA,MAAmBN,UAAW4E,GAAAA,QAAevE,SAAA,EAC3CN,EAAAA,EAAAA,KAAA,KACNU,GAAG,aACHN,QAAS,SAAChC,GAAK,OAhES,SAACsP,EAAKtP,GAC5B,IAAMqQ,EAAOrQ,EAAMsQ,cAAcC,wBAC3BC,EAAcH,EAAKtF,KAAOjM,OAAO0H,WAAa,EAEpDsG,EAAiB,CACfhC,IAAKuF,EAAKvF,IAAMhM,OAAO2R,QAAU,GACjC1F,KAAMyF,EAAcH,EAAKtF,KAAO,IAAMsF,EAAKtF,OAG7CwB,EAAe+C,GACfhD,GAAe,EACjB,CAqDoBoE,CAAgBpB,EAAKtP,EAAM,EAC/C6B,UAAS,GAAAP,OAAKmF,GAAAA,UAAgB,KAAAnF,OAAImF,GAAO,cAADnF,QA/CnB6O,EA+C8Cb,EAAIrD,iBA9ClD,IAAfkE,EAAyB,UACzBA,EAAa,IAAY,MACtB,UA4CkF,KAAA7O,OACzF8O,GAAcd,EAAIrD,iBAAmB,EAAIxF,GAAAA,kBAA2B,IACnEvE,SAEFoN,EAAI7G,QAEC7G,EAAAA,EAAAA,KAAA,KAAGC,UAAW4E,GAAAA,cAAqBvE,SAClCoN,EAAIrD,iBAAgB,GAAA3K,OAAMgO,EAAIrD,iBAAmB,KAAQ,QAXnDqD,EAAI7G,KAejB,MAID0B,IACCvI,EAAAA,EAAAA,KAACsI,GAAgB,CACfE,WArEuB,WACvBkC,GAAe,GACfC,EAAe,KACjB,EAmEEoE,OAAQxG,EACRE,YAAaA,EACbC,cAAeA,MAKnB,CCjOA,OAA2B,mCAA3B,GAA4E,sCAA5E,GAA2I,iDAA3I,GAAkN,8CAAlN,GAAqR,6CAArR,GAAsV,4CAAtV,GAAuZ,6CAAvZ,GAA8d,kDAA9d,GAAsiB,8CAAtiB,GAA0mB,8CAA1mB,GAAgrB,gDAAhrB,GAAuvB,+CCI1uBsG,GAAmB,SAAH5T,GAAuD,IAAjD8K,EAAM9K,EAAN8K,OAAQ+I,EAAU7T,EAAV6T,WAAYC,EAAa9T,EAAb8T,cAAeC,EAAM/T,EAAN+T,OAC9DrS,GAAWC,EAAAA,EAAAA,MAEXqS,EAAY,eAAA3Q,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdkH,GAAWA,EAAOyB,IAAG,CAAA7I,EAAAE,KAAA,QACyB,OAAjD8C,QAAQvC,MAAM,mCAAmCT,EAAAK,OAAA,wBAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI5BlC,GAASuS,EAAAA,EAAAA,IAAkBnJ,EAAOyB,MAAM,KAAD,EAAhD,GACsB,cADtB7I,EAAAQ,KACDgQ,KAAKC,cAA6B,CAAAzQ,EAAAE,KAAA,aACvCmQ,EAAO,CAADrQ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACFmQ,IAAS,KAAD,GAEhBF,IAAanQ,EAAAE,KAAA,iBAEb8C,QAAQvC,MAAM,iCAAiC,QAAAT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAGjDgD,QAAQvC,MAAM,yBAAwBT,EAAAU,IAAO,yBAAAV,EAAAc,OAAA,GAAAhB,EAAA,mBAEhD,kBAlBiB,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KAoBlB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,GAAcE,QAAS,SAACnC,GAAC,OAAKA,EAAEI,SAAWJ,EAAEyQ,eAAiBQ,GAAe,EAAC5O,UAC5FN,EAAAA,EAAAA,KAAA,WAASC,UAAWC,GAAgBI,UAClCC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,GAA2BI,SAAA,EACzCC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,GAAwBI,SAAA,EACtCN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,GAAuBI,SAAC,kBACvCN,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,GAAwBE,QAAS6O,EAAW3O,UAC7DN,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACC,KAAK,QAAQR,UAAWC,WAGtCK,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,GAAyBI,SAAA,EACvCC,EAAAA,EAAAA,MAAA,KAAGN,UAAWC,GAAsBI,SAAA,CAAC,gDACW4F,EAAOjE,OAAO,mBAC/C,IAAIiB,KAAKgD,EAAOW,MAAM2I,mBAAmB,QAAS,CAAEhM,KAAM,UAAWC,OAAQ,YAAa,QAEzGlD,EAAAA,EAAAA,MAAA,OAAMN,UAAWC,GAA0BI,SAAA,EAC3CN,EAAAA,EAAAA,KAAA,UACEa,KAAK,SACLZ,UAAWC,GACXE,QAASgP,EAAa9O,SACvB,YAGDN,EAAAA,EAAAA,KAAA,UACEa,KAAK,SACLZ,UAAWC,GACXE,QAAS6O,EAAW3O,SACrB,uBASb,ECqGA,GAzJuB,WACrB,IAAAhF,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDmU,EAAcjU,EAAA,GAAEH,EAAeG,EAAA,GACtCI,GAAkDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1D8T,EAAkB7T,EAAA,GAAE8T,EAAmB9T,EAAA,GAC9CG,GAAsDT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA9D4T,EAAoB3T,EAAA,GAAE4T,EAAqB5T,EAAA,GAC5Ca,GAAWC,EAAAA,EAAAA,MAEX2I,EAAcC,aAAaC,QAAQ,gBACzCxJ,GAA0Cb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjD0T,EAAazT,EAAA,GAAE0T,EAAgB1T,EAAA,GAChC2T,GAAUnT,EAAAA,EAAAA,QAAO,MACjBgJ,GAAerE,EAAAA,EAAAA,IAAY2C,IAGnCnH,EAAAA,EAAAA,YAAU,WACJ0I,IAEF5I,GAASgJ,EAAAA,EAAAA,OACZhJ,GAASgQ,EAAAA,EAAAA,OAEV,GAAG,CAAChQ,EAAU4I,KAEZ1I,EAAAA,EAAAA,YAAU,WACJgT,EAAQ3P,UACV2P,EAAQ3P,QAAQ4P,UAAYD,EAAQ3P,QAAQ3C,aAEhD,GAAG,CAACmI,IAEJ,IAIMO,EAAgB,eAAAhL,GAAAsD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEA,GAAvB3D,GAAgB,IAEZqK,EAAY,CAAD5G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEHlC,GAASgJ,EAAAA,EAAAA,OAA0B,KAAD,SAAAhH,EAAAE,KAAA,EAClClC,GAASgQ,EAAAA,EAAAA,OAAiB,OAAAhO,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAElCgD,QAAQvC,MAAM,4BAA2BT,EAAAU,IAAO,yBAAAV,EAAAc,OAAA,GAAAhB,EAAA,kBAGrD,kBAZqB,OAAAxD,EAAA0E,MAAA,KAAAC,UAAA,KAoBhBmQ,EAAc,eAAAzR,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwI,EAAOgJ,GAAa,OAAAxR,IAAAA,MAAA,SAAA+I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cAAA0I,EAAA3I,KAAA,EAAA2I,EAAA1I,KAAA,EAEjClC,GAASoL,EAAAA,EAAAA,IAAkBiI,IAAgB,KAAD,SAAAzI,EAAA1I,KAAA,EAE1ClC,GAASgJ,EAAAA,EAAAA,OAA0B,KAAD,SAAA4B,EAAA1I,KAAA,EAClClC,GAASgQ,EAAAA,EAAAA,OAAiB,OAAApF,EAAA1I,KAAA,gBAAA0I,EAAA3I,KAAA,EAAA2I,EAAAlI,GAAAkI,EAAA,SAEhC5F,QAAQvC,MAAM,8BAA6BmI,EAAAlI,IAAO,yBAAAkI,EAAA9H,OAAA,GAAAuH,EAAA,kBAErD,gBATmBtH,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAkBdqQ,EAAgB,eAAAlJ,GAAAxI,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0R,EAAOF,GAAa,OAAAxR,IAAAA,MAAA,SAAA2R,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cAAAsR,EAAAvR,KAAA,EAAAuR,EAAAtR,KAAA,EAGnClC,GAASgJ,EAAAA,EAAAA,OAA0B,KAAD,SAAAwK,EAAAtR,KAAA,EAClClC,GAASgQ,EAAAA,EAAAA,OAAiB,OAAAwD,EAAAtR,KAAA,gBAAAsR,EAAAvR,KAAA,EAAAuR,EAAA9Q,GAAA8Q,EAAA,SAEhCxO,QAAQvC,MAAM,8BAA6B+Q,EAAA9Q,IAAO,yBAAA8Q,EAAA1Q,OAAA,GAAAyQ,EAAA,kBAErD,gBARqBE,GAAA,OAAArJ,EAAApH,MAAA,KAAAC,UAAA,KAUtB,OACEQ,EAAAA,EAAAA,MAAA,WAASN,UAAW4E,EAAAA,sBAA6BvE,SAAA,EAC/CN,EAAAA,EAAAA,KAAA,MAAIC,UAAW4E,EAAAA,MAAavE,SAAC,WAC7BN,EAAAA,EAAAA,KAAA,MAAIC,UAAW4E,EAAAA,KAAa1E,IAAK6P,EAAQ1P,SACtCuF,EAAaS,KAAI,SAAAkK,GAAA,IAAG7I,EAAG6I,EAAH7I,IAAK1F,EAAMuO,EAANvO,OAAQ4E,EAAI2J,EAAJ3J,KAAI,OACpCtG,EAAAA,EAAAA,MAAA,MAAcN,UAAW4E,EAAAA,SAAgBvE,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,EAAAA,KAAYvE,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,QAAMN,UAAW4E,EAAAA,OAAcvE,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,OAAKC,UAAW4E,EAAAA,WAAkBvE,UAChCN,EAAAA,EAAAA,KAAA,OAAKwG,KAAK,qDAEXvE,EAAO,UAEVjC,EAAAA,EAAAA,KAAA,QAAMC,UAAW4E,EAAAA,KAAYvE,SAC1B,IAAI4C,KAAK2D,GAAM2I,mBAAmB,QAAS,CAAEhM,KAAM,UAAWC,OAAQ,kBAI3ElD,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,EAAAA,QAAevE,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,UACEC,UAAW4E,EAAAA,WACXzE,QAAS,kBAtDR,SAACqH,GACd,IAAMvB,EAASL,EAAa4K,MAAK,SAACvK,GAAM,OAAKA,EAAOyB,MAAQF,CAAQ,IACpEsI,EAAiB7J,GACjByJ,GAAoB,EACtB,CAkD6Be,CAAO/I,EAAI,EAC1B,aAAW,OAAMrH,UAEjBN,EAAAA,EAAAA,KAAA,OAAK8E,MAAM,KAAKrH,OAAO,KAAI6C,UACzBN,EAAAA,EAAAA,KAAA,OAAKwG,KAAK,kDAGdxG,EAAAA,EAAAA,KAAA,UACEC,UAAW4E,EAAAA,aACXzE,QAAS,kBA9CN,SAACqH,GAChB,IAAMvB,EAASL,EAAa4K,MAAK,SAACvK,GAAM,OAAKA,EAAOyB,MAAQF,CAAQ,IACpEsI,EAAiB7J,GACjB2J,GAAsB,EACxB,CA0C6Bc,CAAShJ,EAAI,EAC5B,aAAW,SAAQrH,UAEnBN,EAAAA,EAAAA,KAAA,OAAK8E,MAAM,KAAKrH,OAAO,KAAI6C,UACzBN,EAAAA,EAAAA,KAAA,OAAKwG,KAAK,wDA7BTmB,EAiCJ,OAGT3H,EAAAA,EAAAA,KAAA,UAAQC,UAAW4E,EAAAA,UAAkBzE,QA7Fb,WAC1B/E,GAAgB,EAClB,EA2FsEiF,SAAC,gBAIlEmP,IACDzP,EAAAA,EAAAA,KAACyG,EAAa,CACZpL,gBAAiBA,EACjB2G,QAASoE,IAIVsJ,GAAsBI,IACrB9P,EAAAA,EAAAA,KAAC4Q,GAAc,CACbvV,gBAAiBsU,EACjBjJ,YAAaoJ,EACbX,OAAQe,IAIXN,GAAwBE,IACvB9P,EAAAA,EAAAA,KAACgP,GAAgB,CACf9I,OAAQ4J,EACRb,WAAY,kBAAMY,GAAsB,EAAM,EAC9CX,cAAe,kBAAMW,GAAsB,EAAM,EACjDV,OAAQiB,KAGZpQ,EAAAA,EAAAA,KAAA,WAASC,UAAW4E,EAAAA,uBAA8BvE,UAChDN,EAAAA,EAAAA,KAACuK,GAAe,QAKxB,ECnKA,GAAgC,gCAAhC,GAAsF,sCAAtF,GAAgN,sCC6DhN,GAtDiB,WACf,IAAAjP,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CkJ,EAAWhJ,EAAA,GAAEqV,EAAcrV,EAAA,GAClCI,GAAwCL,EAAAA,EAAAA,UAAS,IAE/CM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFKiK,EAAYhK,EAAA,GAAEiV,EAAejV,EAAA,GA2BpC,OACEmE,EAAAA,EAAAA,KAAA,OAAKC,UAAW4E,GAAqBvE,UACnCC,EAAAA,EAAAA,MAAA,OAAKN,UAAW4E,GAA2BvE,SAAA,EAC3CN,EAAAA,EAAAA,KAAA,WAASC,UAAW4E,GAA2BvE,UAC7CN,EAAAA,EAAAA,KAAC+Q,EAAY,CACXvM,YAAaA,EACbwM,eA7BmB,SAAC1S,GAC1BuS,EAAevS,EACjB,EA4BQ2S,gBA1Be,WACrB,IAAMC,EAAY,CAChBxQ,GAAIwC,KAAKD,MAAMW,WACf3B,OAAQ,IACRE,MAAM,IAAIe,MAAOsM,mBAAmB,GAAI,CAAEhM,KAAM,UAAWC,OAAQ,aAGrEqN,GAAgB,SAAC/R,GAAI,SAAAW,QAAAyR,EAAAA,EAAAA,GAASpS,GAAI,CAAEmS,GAAY,IAChDL,GAAe,SAAC9R,GAAI,OAAK8D,KAAKwC,IAAItG,EAAO,GAAI,IAAI,GACnD,OAsBMiB,EAAAA,EAAAA,KAACoR,GAAc,CACbvL,aAAcA,EACd6K,OAtBW,SAAChQ,GAClBoB,QAAQuP,IAAI,uBAAwB3Q,EACtC,EAqBQiQ,SAnBa,SAACjQ,GACpBoQ,GAAgB,SAAC/R,GAAI,OAAKA,EAAKuS,QAAO,SAACpL,GAAM,OAAKA,EAAOxF,KAAOA,CAAE,GAAC,GACrE,QAyBF,C","sources":["webpack://react-homework-template/./src/components/WaterRatioPanel/WaterRatioPanel.module.css?a6e9","webpack://react-homework-template/./src/components/DailyNorma/DailyNorma.module.css?8e40","webpack://react-homework-template/./src/components/DailyNormaModal/DailyNormaModal.module.css?cfa8","components/DailyNormaModal/DailyNormaModal.jsx","components/DailyNorma/DailyNorma.jsx","webpack://react-homework-template/./src/components/AddWaterModal/AddWaterModal.module.css?e69a","components/AddWaterModal/AddWaterModal.jsx","redux/water/selectors.js","components/WaterRatioPanel/WaterRatioPanel.jsx","webpack://react-homework-template/./src/components/TodayWaterList/TodayWaterList.module.css?0bc6","webpack://react-homework-template/./src/components/EditWaterModal/EditWaterModal.module.css?981f","components/EditWaterModal/EditWaterModal.jsx","components/MonthStatsTable/sprite.svg","webpack://react-homework-template/./src/components/DaysGeneralStats/DaysGeneralStats.module.css?b64d","components/DaysGeneralStats/DaysGeneralStats.jsx","webpack://react-homework-template/./src/components/MonthStatsTable/MonthStatsTable.module.css?b2ab","components/MonthStatsTable/MonthStatsTable.jsx","webpack://react-homework-template/./src/components/DeleteWaterModal/DeleteWaterModal.module.css?9b57","components/DeleteWaterModal/DeleteWaterModal.jsx","components/TodayWaterList/TodayWaterList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaSection\":\"WaterRatioPanel_dailyNormaSection__lejGd\",\"imageContainer\":\"WaterRatioPanel_imageContainer__JcPUd\",\"slider\":\"WaterRatioPanel_slider__+PTSK\",\"waterBottle\":\"WaterRatioPanel_waterBottle__uU5gu\",\"progressContainer\":\"WaterRatioPanel_progressContainer__f0Qbe\",\"progressTitle\":\"WaterRatioPanel_progressTitle__Z-RzH\",\"progressBar\":\"WaterRatioPanel_progressBar__dShpn\",\"rect\":\"WaterRatioPanel_rect__fxWW0\",\"progressMarkers\":\"WaterRatioPanel_progressMarkers__+UN4R\",\"marker\":\"WaterRatioPanel_marker__m+8sw\",\"tick\":\"WaterRatioPanel_tick__Gwmie\",\"progressLabels\":\"WaterRatioPanel_progressLabels__92zZK\",\"addWaterBtn\":\"WaterRatioPanel_addWaterBtn__mfzkw\",\"icon\":\"WaterRatioPanel_icon__ZAI64\",\"bottomSection\":\"WaterRatioPanel_bottomSection__pH0C5\"};","// extracted by mini-css-extract-plugin\nexport default {\"dailyNormaContainer\":\"DailyNorma_dailyNormaContainer__KHUio\",\"title\":\"DailyNorma_title__X4SZH\",\"normaContainer\":\"DailyNorma_normaContainer__yAGrT\",\"normaValue\":\"DailyNorma_normaValue__Gd29x\",\"editButton\":\"DailyNorma_editButton__Zko6d\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"DailyNormaModal_modal__vJ3oF\",\"modalContent\":\"DailyNormaModal_modalContent__KvIF8\",\"navnButton\":\"DailyNormaModal_navnButton__YziaA\",\"closeButton\":\"DailyNormaModal_closeButton__Uur27\",\"iconClose\":\"DailyNormaModal_iconClose__fl1tD\",\"h2\":\"DailyNormaModal_h2__JS8CC\",\"h3\":\"DailyNormaModal_h3__kI5gk\",\"h4\":\"DailyNormaModal_h4__BHKPZ\",\"labelInput\":\"DailyNormaModal_labelInput__zcUdV\",\"formulas\":\"DailyNormaModal_formulas__wR-gI\",\"label\":\"DailyNormaModal_label__FhZVe\",\"formula\":\"DailyNormaModal_formula__LLd2F\",\"form\":\"DailyNormaModal_form__Z0uC7\",\"radioGroup\":\"DailyNormaModal_radioGroup__hW-rO\",\"radio-label\":\"DailyNormaModal_radio-label__j1hG2\",\"inputWrapper\":\"DailyNormaModal_inputWrapper__yjnEa\",\"radioLabel\":\"DailyNormaModal_radioLabel__7kCVO\",\"bluInput\":\"DailyNormaModal_bluInput__QSMvJ\",\"textarea\":\"DailyNormaModal_textarea__g-zaU\",\"saveButton\":\"DailyNormaModal_saveButton__b6ZL2\",\"modal-content\":\"DailyNormaModal_modal-content__TsjF1\",\"radio-group\":\"DailyNormaModal_radio-group__CV3cj\",\"blu\":\"DailyNormaModal_blu__S7if2\"};","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateDailyNorma } from '../../redux/user/operations';\nimport { toast } from 'react-toastify';\nimport css from './DailyNormaModal.module.css';\nimport SvgIcons from 'components/SvgIcons/SvgIcons';\n\nconst DailyNormaModal = ({ setModalVisible }) => {\n  const [gender, setGender] = useState('woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [requiredWater, setRequiredWater] = useState('0 L');\n  const [waterIntake, setWaterIntake] = useState(0);\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    adjustTextareaHeight();\n    window.addEventListener('resize', adjustTextareaHeight);\n    return () => window.removeEventListener('resize', adjustTextareaHeight);\n  }, []);\n\n  const adjustTextareaHeight = () => {\n    const textarea = document.getElementById('infoText');\n    textarea.style.height = 'auto';\n    textarea.style.height = textarea.scrollHeight + 'px';\n  };\n\n  const calculateWaterIntake = useCallback(() => {\n    let V;\n    if (gender === 'woman') {\n      V = weight * 0.03 + activityTime * 0.4;\n    } else if (gender === 'man') {\n      V = weight * 0.04 + activityTime * 0.6;\n    }\n\n    if (isNaN(V)) {\n      V = 0;\n    }\n\n    setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n  }, [gender, weight, activityTime]);\n\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        setModalVisible(false); // Close modal if Escape is pressed\n      }\n    };\n\n    // Add event listener for Escape key\n    window.addEventListener('keydown', handleEsc);\n\n    // Cleanup the event listener when the component is unmounted\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, [setModalVisible]);\n\n  useEffect(() => {\n    calculateWaterIntake();\n  }, [calculateWaterIntake]);\n\n  const clearDefault = (event) => {\n    if (event.target.value === '0') {\n      event.target.value = '';\n    }\n  };\n\n  const restoreDefault = (event) => {\n    if (event.target.value === '') {\n      event.target.value = '0';\n    }\n  };\n\n  const handleSave = async (event) => {\n    event.preventDefault();\n    const dailyNorma = waterIntake;\n\n    if (dailyNorma > 5) {\n      // alert('Максимальная суточная норма потребления воды - 5 L');\n      toast.error('The maximum daily water intake is 5 L');\n      return;\n    }\n\n    if (dailyNorma === 0) {\n      // alert('Пожалуйста, введите значение больше нуля');\n      toast.error('Please enter a value greater than zero');\n      return;\n    }\n\n    try {\n      const result = await dispatch(updateDailyNorma({ dailyNorma })).unwrap();\n      if (!result.error) {\n        setModalVisible(false); // Закрываем модальное окно\n      }\n    } catch (error) {\n      alert(`Ошибка: ${error.message}`);\n    }\n  };\n\n  const handleWaterIntakeChange = (e) => {\n    const value = e.target.value;\n    if (/^\\d*\\.?\\d*$/.test(value)) { // Проверка на дробное число\n      setWaterIntake(parseFloat(value));\n    }\n  };\n\n  const handleBackdropClick = (event) => {\n    if (modalRef.current && modalRef.current === event.target) {\n      setModalVisible(false);\n    }\n  };\n\n  return (\n    <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n      <div className={css.modalContent}>\n        <div className={css.navnButton}>\n          <h2 className={css.h2}>My daily norma</h2>\n          <button className={css.closeButton} onClick={() => setModalVisible(false)}>\n            <SvgIcons name=\"close\" className={css.iconClose} />\n          </button>\n        </div>\n        <div className={css.formulas}>\n          <p>\n            <span className={css.label}>For girl:</span>\n            <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n          </p>\n          <p>\n            <span className={css.label}>For man:</span>\n            <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n          </p>\n        </div>\n        <textarea\n          id=\"infoText\"\n          readOnly\n          className={css.textarea}\n          value=\"* V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"\n        />\n        <form className={css.form} onSubmit={handleSave}>\n          <h4 className={css.h4}>Calculate your rate:</h4>\n          <div className={css.radioGroup}>\n            <label className={css.radioLabel}>\n              <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n            </label>\n            <label className={css.radioLabel}>\n              <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n            </label>\n          </div>\n          <div className={css.inputWrapper}>\n            <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n            <input\n              className={css.bluInput}\n              type=\"number\"\n              id=\"weight\"\n              name=\"weight\"\n              value={weight}\n              onChange={(e) => setWeight(parseFloat(e.target.value))}\n              onFocus={clearDefault}\n              onBlur={restoreDefault}\n            />\n          </div>\n          <div className={css.inputWrapper}>\n            <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n            <input\n              className={css.bluInput}\n              type=\"number\"\n              id=\"activity-time\"\n              name=\"activity-time\"\n              value={activityTime}\n              onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n              onFocus={clearDefault}\n              onBlur={restoreDefault}\n            />\n          </div>\n          <div>\n            <p>\n              <span>The required amount of water in liters per day:</span>\n              <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n            </p>\n          </div>\n          <h4 className={css.h4}>Write down how much water you will drink:</h4>\n          <div className={css.inputWrapper}>\n            <input\n              className={css.bluInput}\n              type=\"number\"\n              id=\"water-intake\"\n              name=\"water-intake\"\n              value={waterIntake}\n              onChange={handleWaterIntakeChange}\n              onFocus={clearDefault}\n              onBlur={restoreDefault}\n            />\n          </div>\n          <button type=\"submit\" className={css.saveButton}>Save</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default DailyNormaModal;\n\n\n// import React, { useState, useEffect, useCallback, useRef } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from '../../redux/user/operations';\n// import css from './DailyNormaModal.module.css';\n// import SvgIcons from 'components/SvgIcons/SvgIcons';\n\n// const DailyNormaModal = ({ setModalVisible }) => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const [isValid, setIsValid] = useState(true);\n//   const modalRef = useRef(null);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = useCallback(() => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   }, [gender, weight, activityTime]);\n\n//   useEffect(() => {\n//     const handleEsc = (e) => {\n//       if (e.key === 'Escape') {\n//         setModalVisible(false); // Close modal if Escape is pressed\n//       }\n//     };\n\n//     // Add event listener for Escape key\n//     window.addEventListener('keydown', handleEsc);\n\n//     // Cleanup the event listener when the component is unmounted\n//     return () => {\n//       window.removeEventListener('keydown', handleEsc);\n//     };\n//   }, [setModalVisible]);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [calculateWaterIntake]);\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake;\n\n//     if (dailyNorma > 5) {\n//       alert('Максимальная суточная норма потребления воды - 5 L');\n//       return;\n//     }\n\n//     if (dailyNorma === 0) {\n//       alert('Пожалуйста, введите значение больше нуля');\n//       return;\n//     }\n\n//     try {\n//       const result = await dispatch(updateDailyNorma({ dailyNorma })).unwrap();\n//       if (!result.error) {\n//         setModalVisible(false); // Закрываем модальное окно\n//       }\n//     } catch (error) {\n//       alert(`Ошибка: ${error.message}`);\n//     }\n//   };\n\n//   const handleWaterIntakeChange = (e) => {\n//     const value = e.target.value;\n//     const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n//     setIsValid(valid);\n//     if (valid) {\n//       setWaterIntake(parseFloat(value));\n//     }\n//   };\n\n//   const handleBackdropClick = (event) => {\n//     if (modalRef.current && modalRef.current === event.target) {\n//       setModalVisible(false);\n//     }\n//   };\n\n//   return (\n//     <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n//       <div className={css.modalContent}>\n//         <div className={css.navnButton}>\n//           <h2 className={css.h2}>My daily norma</h2>\n//           <button className={css.closeButton} onClick={() => setModalVisible(false)}>\n//             <SvgIcons name=\"close\" className={css.iconClose} />\n//           </button>\n//         </div>\n//         <div className={css.formulas}>\n//           <p>\n//             <span className={css.label}>For girl:</span>\n//             <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//           </p>\n//           <p>\n//             <span className={css.label}>For man:</span>\n//             <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//           </p>\n//         </div>\n//         <textarea\n//           id=\"infoText\"\n//           readOnly\n//           className={css.textarea}\n//           value=\"* V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"\n//         />\n//         <form className={css.form} onSubmit={handleSave}>\n//           <h4 className={css.h4}>Calculate your rate:</h4>\n//           <div className={css.radioGroup}>\n//             <label className={css.radioLabel}>\n//               <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//             </label>\n//             <label className={css.radioLabel}>\n//               <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//             </label>\n//           </div>\n//           <div className={css.inputWrapper}>\n//             <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//             <input\n//               className={css.bluInput}\n//               type=\"number\"\n//               id=\"weight\"\n//               name=\"weight\"\n//               value={weight}\n//               onChange={(e) => setWeight(parseFloat(e.target.value))}\n//               onFocus={clearDefault}\n//               onBlur={restoreDefault}\n//             />\n//           </div>\n//           <div className={css.inputWrapper}>\n//             <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//             <input\n//               className={css.bluInput}\n//               type=\"number\"\n//               id=\"activity-time\"\n//               name=\"activity-time\"\n//               value={activityTime}\n//               onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//               onFocus={clearDefault}\n//               onBlur={restoreDefault}\n//             />\n//           </div>\n//           <div>\n//             <p>\n//               <span>The required amount of water in liters per day:</span>\n//               <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//             </p>\n//           </div>\n//           <h4 className={css.h4}>Write down how much water you will drink:</h4>\n//           <div className={css.inputWrapper}>\n//             <input\n//               className={css.bluInput}\n//               type=\"number\"\n//               id=\"water-intake\"\n//               name=\"water-intake\"\n//               value={waterIntake}\n//               onChange={handleWaterIntakeChange}\n//               onFocus={clearDefault}\n//               onBlur={restoreDefault}\n//             />\n//           </div>\n//           <button type=\"submit\" className={css.saveButton}>Save</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNormaModal;\n\n// import React, { useState, useEffect, useCallback, useRef } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from '../../redux/user/operations';\n// import css from './DailyNormaModal.module.css';\n// import SvgIcons from 'components/SvgIcons/SvgIcons';\n\n// const DailyNormaModal = ({ setModalVisible }) => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const [isValid, setIsValid] = useState(true);\n//   const modalRef = useRef(null);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = useCallback(() => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   }, [gender, weight, activityTime]);\n\n//   useEffect(() => {\n//     const handleEsc = (e) => {\n//       if (e.key === 'Escape') {\n//         setModalVisible(false); // Close modal if Escape is pressed\n//       }\n//     };\n\n//     // Add event listener for Escape key\n//     window.addEventListener('keydown', handleEsc);\n\n//     // Cleanup the event listener when the component is unmounted\n//     return () => {\n//       window.removeEventListener('keydown', handleEsc);\n//     };\n//   }, [setModalVisible]);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [calculateWaterIntake]);\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake;\n\n//     if (dailyNorma > 5) {\n//       alert('Максимальная суточная норма потребления воды - 5 L');\n//       return;\n//     }\n\n//     if (dailyNorma === 0) {\n//       alert('Пожалуйста, введите значение больше нуля');\n//       return;\n//     }\n\n//     try {\n//       const result = await dispatch(updateDailyNorma({ dailyNorma })).unwrap();\n//       if (!result.error) {\n//         setModalVisible(false); // Закрываем модальное окно\n//       }\n//     } catch (error) {\n//       alert(`Ошибка: ${error.message}`);\n//     }\n//   };\n\n//   const handleWaterIntakeChange = (e) => {\n//     const value = e.target.value;\n//     const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n//     setIsValid(valid);\n//     if (valid) {\n//       setWaterIntake(parseFloat(value));\n//     }\n//   };\n\n//   const handleBackdropClick = (event) => {\n//     if (modalRef.current && modalRef.current === event.target) {\n//       setModalVisible(false);\n//     }\n//   };\n\n//   return (\n//     <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n//       <div className={css.modalContent}>\n//         <div className={css.navnButton}>\n//           <h2 className={css.h2}>My daily norma</h2>\n//           <button className={css.closeButton} onClick={() => setModalVisible(false)}>\n//             <SvgIcons name=\"close\" className={css.iconClose} />\n//           </button>\n//         </div>\n//         <div className={css.formulas}>\n//           <p>\n//             <span className={css.label}>For girl:</span>\n//             <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//           </p>\n//           <p>\n//             <span className={css.label}>For man:</span>\n//             <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//           </p>\n//         </div>\n//         <textarea\n//           id=\"infoText\"\n//           readOnly\n//           className={css.textarea}\n//           value=\"* V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"\n//         />\n//         <form className={css.form} onSubmit={handleSave}>\n//           <h4 className={css.h4}>Calculate your rate:</h4>\n//           <div className={css.radioGroup}>\n//             <label className={css.radioLabel}>\n//               <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//             </label>\n//             <label className={css.radioLabel}>\n//               <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//             </label>\n//           </div>\n//           <div className={css.inputWrapper}>\n//             <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//             <input\n//               className={css.bluInput}\n//               type=\"number\"\n//               id=\"weight\"\n//               name=\"weight\"\n//               value={weight}\n//               onChange={(e) => setWeight(parseFloat(e.target.value))}\n//               onFocus={clearDefault}\n//               onBlur={restoreDefault}\n//             />\n//           </div>\n//           <div className={css.inputWrapper}>\n//             <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//             <input\n//               className={css.bluInput}\n//               type=\"number\"\n//               id=\"activity-time\"\n//               name=\"activity-time\"\n//               value={activityTime}\n//               onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//               onFocus={clearDefault}\n//               onBlur={restoreDefault}\n//             />\n//           </div>\n//           <div>\n//             <p>\n//               <span>The required amount of water in liters per day:</span>\n//               <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//             </p>\n//           </div>\n//           <h4 className={css.h4}>Write down how much water you will drink:</h4>\n//           <div className={css.inputWrapper}>\n//             <input\n//               className={css.bluInput}\n//               type=\"number\"\n//               id=\"water-intake\"\n//               name=\"water-intake\"\n//               value={waterIntake}\n//               onChange={handleWaterIntakeChange}\n//               onFocus={clearDefault}\n//               onBlur={restoreDefault}\n//             />\n//           </div>\n//           <button type=\"submit\" className={css.saveButton}>Save</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNormaModal;\n\n\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from '../../redux/user/operations';\n// import css from './DailyNormaModal.module.css';\n// import SvgIcons from 'components/SvgIcons/SvgIcons';\n// const DailyNormaModal = ({ setModalVisible }) => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = useCallback(() => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   }, [gender, weight, activityTime]);\n//   useEffect(() => {\n//     const handleEsc = (e) => {\n//       if (e.key === 'Escape') {\n//         setModalVisible(false) // Close modal if Escape is pressed\n//       }\n//     };\n\n//     // Add event listener for Escape key\n//     window.addEventListener('keydown', handleEsc);\n\n//     // Cleanup the event listener when the component is unmounted\n//     return () => {\n//       window.removeEventListener('keydown', handleEsc);\n//     };\n//   }, [setModalVisible]);\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [calculateWaterIntake]);\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake;\n\n//     if (dailyNorma > 5) {\n//         alert('Максимальная суточная норма потребления воды - 5 L');\n//         return;\n//     }\n\n//     try {\n//         const result = await dispatch(updateDailyNorma({ dailyNorma })).unwrap();\n//         if (!result.error) {\n//             setModalVisible(false); // Закрываем модальное окно\n//         }\n//     } catch (error) {\n//         alert(`Ошибка: ${error.message}`);\n//     }\n// };\n\n//   return (\n//     // <div className={css.App}>\n//       <div className={css.modal}>\n//         <div className={css.modalContent}>\n//           <div className={css.navnButton}>\n//             <h2 className={css.h2}>My daily norma</h2>\n//             <button className={css.closeButton} onClick={() => setModalVisible(false)}><SvgIcons name=\"close\" className={css.iconClose}/></button>\n//           </div>\n//           <div className={css.formulas}>\n//             <p>\n//               <span className={css.label}>For girl:</span>\n//               <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//             </p>\n//             <p>\n//               <span className={css.label}>For man:</span>\n//               <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//             </p>\n//           </div>\n//           <textarea\n//             id=\"infoText\"\n//             readOnly\n//             className={css.textarea}\n//             value=\"* V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\"\n//           />\n//           <form className={css.form} onSubmit={handleSave}>\n//             <h4 className={css.h4}>Calculate your rate:</h4>\n//             <div className={css.radioGroup}>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//               </label>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//               </label>\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"weight\"\n//                 name=\"weight\"\n//                 value={weight}\n//                 onChange={(e) => setWeight(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"activity-time\"\n//                 name=\"activity-time\"\n//                 value={activityTime}\n//                 onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div>\n//               <p>\n//                 <span>The required amount of water in liters per day:</span>\n//                 <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//               </p>\n//             </div>\n//             <h4 className={css.h4}>Write down how much water you will drink:</h4>\n//             <div className={css.inputWrapper}>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"water-intake\"\n//                 name=\"water-intake\"\n//                 value={waterIntake}\n//                 onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <button type=\"submit\" className={css.saveButton}>Save</button>\n//           </form>\n//         </div>\n//       </div>\n//     // </div>\n//   );\n// };\n\n// export default DailyNormaModal;\n\n\n\n\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { updateDailyNorma } from '../../redux/water/operations';\n// import css from './DailyNormaModal.module.css';\n\n// const DailyNormaModal = ({ setModalVisible }) => {\n//   const [gender, setGender] = useState('woman');\n//   const [weight, setWeight] = useState(0);\n//   const [activityTime, setActivityTime] = useState(0);\n//   const [requiredWater, setRequiredWater] = useState('0 L');\n//   const [waterIntake, setWaterIntake] = useState(0);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     adjustTextareaHeight();\n//     window.addEventListener('resize', adjustTextareaHeight);\n//     return () => window.removeEventListener('resize', adjustTextareaHeight);\n//   }, []);\n\n//   const adjustTextareaHeight = () => {\n//     const textarea = document.getElementById('infoText');\n//     textarea.style.height = 'auto';\n//     textarea.style.height = textarea.scrollHeight + 'px';\n//   };\n\n//   const calculateWaterIntake = useCallback(() => {\n//     let V;\n//     if (gender === 'woman') {\n//       V = weight * 0.03 + activityTime * 0.4;\n//     } else if (gender === 'man') {\n//       V = weight * 0.04 + activityTime * 0.6;\n//     }\n\n//     if (isNaN(V)) {\n//       V = 0;\n//     }\n\n//     setRequiredWater(V === 0 ? '0 L' : V.toFixed(2) + ' L');\n//   }, [gender, weight, activityTime]);\n\n//   useEffect(() => {\n//     calculateWaterIntake();\n//   }, [calculateWaterIntake]);\n\n//   const clearDefault = (event) => {\n//     if (event.target.value === '0') {\n//       event.target.value = '';\n//     }\n//   };\n\n//   const restoreDefault = (event) => {\n//     if (event.target.value === '') {\n//       event.target.value = '0';\n//     }\n//   };\n\n//   const handleSave = async (event) => {\n//     event.preventDefault();\n//     const dailyNorma = waterIntake * 1000;\n\n//     if (dailyNorma > 5000) {\n//       alert('Максимальная суточная норма потребления воды - 5000 мл');\n//       return;\n//     }\n\n//     const authData = JSON.parse(localStorage.getItem('persist:auth'));\n//     const accessToken = authData.accessToken.replace(/\"/g, '');\n\n//     const result = await dispatch(updateDailyNorma({ accessToken, dailyNorma }));\n\n//     if (!result.error) {\n//       setModalVisible(false); // Закрываем модальное окно при успешном обновлении\n//     } else {\n//       alert(`Ошибка: ${result.error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className={css.App}>\n//       <div className={css.modal}>\n//         <div className={css.modalContent}>\n//           <div className={css.navnButton}>\n//             <h2>My daily norma</h2>\n//             <button className={css.closeButton} onClick={() => setModalVisible(false)}>&times;</button>\n//           </div>\n//           <div className={css.formulas}>\n//             <p>\n//               <span className={css.label}>For girl:</span>\n//               <span className={css.formula}>V=(M*0.03) + (T*0.4)</span>\n//             </p>\n//             <p>\n//               <span className={css.label}>For man:</span>\n//               <span className={css.formula}>V=(M*0.04) + (T*0.6)</span>\n//             </p>\n//           </div>\n//           <textarea id=\"infoText\" readOnly className={css.textarea}>\n//             * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n//           </textarea>\n//           <form onSubmit={handleSave}>\n//             <h4>Calculate your rate:</h4>\n//             <div className={css.radioGroup}>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"woman\" checked={gender === 'woman'} onChange={() => setGender('woman')} /> For woman\n//               </label>\n//               <label className={css.radioLabel}>\n//                 <input type=\"radio\" name=\"gender\" value=\"man\" checked={gender === 'man'} onChange={() => setGender('man')} /> For man\n//               </label>\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"weight\">Your weight in kilograms:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"weight\"\n//                 name=\"weight\"\n//                 value={weight}\n//                 onChange={(e) => setWeight(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div className={css.inputWrapper}>\n//               <label className={css.labelInput} htmlFor=\"activity-time\">The time of active participation in sports or other activities with a high physical load in hours:</label>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"activity-time\"\n//                 name=\"activity-time\"\n//                 value={activityTime}\n//                 onChange={(e) => setActivityTime(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <div>\n//               <p>\n//                 <span>The required amount of water in liters per day:</span>\n//                 <span className={`${css.blu} ${css.requiredWater}`}>{requiredWater}</span>\n//               </p>\n//             </div>\n//             <h4>Write down how much water you will drink:</h4>\n//             <div className={css.inputWrapper}>\n//               <input\n//                 className={css.bluInput}\n//                 type=\"number\"\n//                 id=\"water-intake\"\n//                 name=\"water-intake\"\n//                 value={waterIntake}\n//                 onChange={(e) => setWaterIntake(parseFloat(e.target.value))}\n//                 onFocus={clearDefault}\n//                 onBlur={restoreDefault}\n//               />\n//             </div>\n//             <button type=\"submit\" className={css.saveButton}>Save</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DailyNormaModal;\n\n\n","\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './DailyNorma.module.css';\nimport { fetchUser } from '../../redux/user/operations'; // Загружаем данные пользователя\nimport { updateDailyNorma } from '../../redux/user/operations'; // Обновляем норму воды\nimport DailyNormaModal from '../DailyNormaModal/DailyNormaModal';\nimport { selectUserInfo } from '../../redux/user/selectors'; // Выбор данных пользователя из Redux\n\nconst DailyNorma = () => {\n  const dispatch = useDispatch();\n  const [modalVisible, setModalVisible] = useState(false);\n\n  // Загружаем данные пользователя при монтировании компонента\n  useEffect(() => {\n    dispatch(fetchUser());\n  }, [dispatch]);\n\n  const userInfo = useSelector(selectUserInfo);\n  const data = userInfo?.data || {}; // Если данных нет, используем пустой объект\n\n  // Извлекаем норму воды из данных пользователя\n  const normaValue = data.daylyNorm ? data.daylyNorm / 1000 : 2.0; // В литрах\n\n  // Сохранение новой нормы воды\n  const handleSave = async (newNorma) => {\n    try {\n      const response = await dispatch(updateDailyNorma({ dailyNorma: newNorma * 1000 })).unwrap(); // Преобразуем литры в мл\n      if (response) {\n        setModalVisible(false); // Закрываем модальное окно после успешного сохранения\n      }\n    } catch (error) {\n      console.error('Failed to update daily norma:', error);\n    }\n  };\n\n  // Открытие модального окна\n  const openModal = () => {\n    setModalVisible(true);\n  };\n\n  return (\n        <div className={css.dailyNormaContainer}>\n          <p className={css.title}>My daily norma</p>\n          <div className={css.normaContainer}>\n            <span className={css.normaValue}>{normaValue} L</span>\n            <button onClick={openModal} className={css.editButton}>Edit</button>\n          </div>\n    \n          {modalVisible && <DailyNormaModal setModalVisible={setModalVisible} handleSave={handleSave} />} \n        </div>\n      );\n    };\n\nexport default DailyNorma;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"AddWaterModal_modal__dUadi\",\"modalContent\":\"AddWaterModal_modalContent__PCT0Q\",\"modalHeader\":\"AddWaterModal_modalHeader__blV6-\",\"headerText\":\"AddWaterModal_headerText__cEz7Y\",\"modal-header\":\"AddWaterModal_modal-header__XGyFr\",\"close\":\"AddWaterModal_close__zmKJE\",\"modalBody\":\"AddWaterModal_modalBody__snhFv\",\"amountSelector\":\"AddWaterModal_amountSelector__fdnLF\",\"inputSaveContainer\":\"AddWaterModal_inputSaveContainer__BhJMK\",\"inputText\":\"AddWaterModal_inputText__8XBA6\",\"labelDistance\":\"AddWaterModal_labelDistance__1laX6\",\"labelDistanceText\":\"AddWaterModal_labelDistanceText__l4fKH\",\"saveButton\":\"AddWaterModal_saveButton__aM7B3\",\"buttonSelector\":\"AddWaterModal_buttonSelector__B-Mvf\",\"inputField\":\"AddWaterModal_inputField__6yl44\"};","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createWaterRecord } from '../../redux/water/operations';\nimport css from './AddWaterModal.module.css';\nimport SvgIcons from 'components/SvgIcons/SvgIcons';\nconst AddWaterModal = ({ setModalVisible, onClose }) => {\n  const [amount, setAmount] = useState(0);\n  const [time, setTime] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        setModalVisible(false); // Close modal if Escape is pressed\n      }\n    };\n\n    // Add event listener for Escape key\n    window.addEventListener('keydown', handleEsc);\n\n    // Cleanup the event listener when the component is unmounted\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, [setModalVisible]);\n  const handleClose = useCallback(() => {\n    setModalVisible(false);\n  }, [setModalVisible]);\n\n  useEffect(() => {\n    populateTimeDropdown();\n\n    // Закрытие по нажатию клавиши Esc\n    const handleKeyDown = (event) => {\n      if (event.key === 'Escape') {\n        handleClose();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose]);\n\n  const handleBackdropClick = (event) => {\n    if (modalRef.current && modalRef.current === event.target) {\n      handleClose();\n    }\n  };\n\n  const handleChangeAmount = (delta) => {\n    setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n  };\n\n  const handleSave = async () => {\n    if (!isValid) {\n      alert('Please enter a valid amount');\n      return;\n    }\n    try {\n      await dispatch(createWaterRecord({ amount, time }));\n\n      setModalVisible(false);\n      onClose(amount, time);  // Вызываем обновление списка после сохранения\n      // window.location.reload();\n    } catch (error) {\n      alert('Error saving record: ' + error.message);\n    }\n  };\n\n  const handleAmountChange = (e) => {\n    const value = e.target.value;\n    const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n    setIsValid(valid);\n    if (valid) {\n      setAmount(Number(value));\n    }\n  };\n\n  const handleFocus = (e) => {\n    if (e.target.value === '0') {\n      setAmount('');\n    }\n  };\n\n  const handleBlur = (e) => {\n    if (e.target.value === '') {\n      setAmount(0);\n    }\n  };\n\n  const populateTimeDropdown = () => {\n    const timeDropdown = document.getElementById('time');\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 5) {\n        const option = document.createElement('option');\n        option.value = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        option.textContent = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n        if (hour === currentHour && minute === currentMinute) {\n          option.selected = true;\n          setTime(option.value);\n        }\n        timeDropdown.appendChild(option);\n      }\n    }\n  };\n\n  return (\n    <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n      <div className={css.modalContent}>\n        <div className={css.modalHeader}>\n          <h2 className={css.headerText}>Add water</h2>\n          <span className={css.close} onClick={handleClose}><SvgIcons name=\"close\" className={css.iconClose} /></span>\n        </div>\n        <div className={css.modalBody}>\n          <h4 className={css.labelDistance} htmlFor=\"amount\">Choose a value:</h4>\n          <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n          <div className={css.amountSelector}>\n            <button className={css.buttonSelector} onClick={() => handleChangeAmount(-50)}>-</button>\n            <span id=\"amount\">{amount} ml</span>\n            <button className={css.buttonSelector} onClick={() => handleChangeAmount(50)}>+</button>\n          </div>\n          <label className={css.labelDistanceText} htmlFor=\"time\">Recording time:</label>\n          <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n          <h4 className={css.labelDistance} htmlFor=\"value\">Enter the value of the water used:</h4>\n          <input\n            className={css.inputText}\n            type=\"number\"\n            id=\"value\"\n            value={amount}\n            onChange={handleAmountChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n          />\n          <div className={css.inputSaveContainer}>\n            <input className={css.inputField} type=\"text\" id=\"autoFillInput\" readOnly value={`${amount} ml`} />\n            <button className={css.saveButton} onClick={handleSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddWaterModal;\n\n\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { createWaterRecord } from '../../redux/water/operations';\n// import css from './AddWaterModal.module.css';\n\n// const AddWaterModal = ({ setModalVisible, onClose }) => {\n//   const [amount, setAmount] = useState(0);\n//   const [time, setTime] = useState('');\n//   const [isValid, setIsValid] = useState(true);\n//   const modalRef = useRef(null);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     populateTimeDropdown();\n\n//     // Закрытие по нажатию клавиши Esc\n//     const handleKeyDown = (event) => {\n//       if (event.key === 'Escape') {\n//         handleClose();\n//       }\n//     };\n//     document.addEventListener('keydown', handleKeyDown);\n//     return () => {\n//       document.removeEventListener('keydown', handleKeyDown);\n//     };\n//   }, []);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleBackdropClick = (event) => {\n//     if (modalRef.current && modalRef.current === event.target) {\n//       handleClose();\n//     }\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n//   const handleSave = async () => {\n//     if (!isValid) {\n//       alert('Please enter a valid amount');\n//       return;\n//     }\n//     try {\n//       await dispatch(createWaterRecord({ amount, time }));\n\n//       setModalVisible(false);\n//       onClose(amount, time);  // Вызываем обновление списка после сохранения\n//       window.location.reload();\n//     } catch (error) {\n//       alert('Error saving record: ' + error.message);\n//     }\n//   };\n\n//   const handleAmountChange = (e) => {\n//     const value = e.target.value;\n//     const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n//     setIsValid(valid);\n//     if (valid) {\n//       setAmount(Number(value));\n//     }\n//   };\n\n//   const handleFocus = (e) => {\n//     if (e.target.value === '0') {\n//       setAmount('');\n//     }\n//   };\n\n//   const handleBlur = (e) => {\n//     if (e.target.value === '') {\n//       setAmount(0);\n//     }\n//   };\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         option.value = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n//         option.textContent = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n//         if (hour === currentHour && minute === currentMinute) {\n//           option.selected = true;\n//           setTime(option.value);\n//         }\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Add water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <h4 className={css.labelDistance} htmlFor=\"amount\">Choose a value:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonSelector} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount} ml</span>\n//             <button className={css.buttonSelector} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance} htmlFor=\"value\">Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={handleAmountChange}\n//             onFocus={handleFocus}\n//             onBlur={handleBlur}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input className={css.inputField} type=\"text\" id=\"autoFillInput\" readOnly value={`${amount} ml`} />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AddWaterModal;\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { createWaterRecord } from '../../redux/water/operations';\n// import css from './AddWaterModal.module.css';\n\n// const AddWaterModal = ({ setModalVisible, onClose }) => {\n//   const [amount, setAmount] = useState(0);\n//   const [time, setTime] = useState('');\n//   const [isValid, setIsValid] = useState(true);\n//   const modalRef = useRef(null);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     populateTimeDropdown();\n\n//     // Закрытие по нажатию клавиши Esc\n//     const handleKeyDown = (event) => {\n//       if (event.key === 'Escape') {\n//         handleClose();\n//       }\n//     };\n//     document.addEventListener('keydown', handleKeyDown);\n//     return () => {\n//       document.removeEventListener('keydown', handleKeyDown);\n//     };\n//   }, []);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleBackdropClick = (event) => {\n//     if (modalRef.current && modalRef.current === event.target) {\n//       handleClose();\n//     }\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n//   const handleSave = async () => {\n//     if (!isValid) {\n//       alert('Please enter a valid amount');\n//       return;\n//     }\n//     try {\n//       await dispatch(createWaterRecord({ amount, time }));\n\n//       setModalVisible(false);\n//       onClose(amount, time);  // Вызываем обновление списка после сохранения\n//       window.location.reload();\n//     } catch (error) {\n//       alert('Error saving record: ' + error.message);\n//     }\n//   };\n\n//   const handleAmountChange = (e) => {\n//     const value = e.target.value;\n//     const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n//     setIsValid(valid);\n//     if (valid) {\n//       setAmount(Number(value));\n//     }\n//   };\n\n//   const handleFocus = (e) => {\n//     if (e.target.value === '0') {\n//       setAmount('');\n//     }\n//   };\n\n//   const handleBlur = (e) => {\n//     if (e.target.value === '') {\n//       setAmount(0);\n//     }\n//   };\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         option.value = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n//         option.textContent = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n//         if (hour === currentHour && minute === currentMinute) {\n//           option.selected = true;\n//           setTime(option.value);\n//         }\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Add water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <h4 className={css.labelDistance} htmlFor=\"amount\">Choose a value:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonSelector} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount} ml</span>\n//             <button className={css.buttonSelector} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance} htmlFor=\"value\">Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={handleAmountChange}\n//             onFocus={handleFocus}\n//             onBlur={handleBlur}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input className={css.inputField} type=\"text\" id=\"autoFillInput\" readOnly value={`${amount} ml`} />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AddWaterModal;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n\n// import { createWaterRecord} from '../../redux/water/operations';\n// import css from './AddWaterModal.module.css';\n\n// const AddWaterModal = ({ setModalVisible, onClose }) => {\n//   const [amount, setAmount] = useState(0);\n//   const [time, setTime] = useState('');\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     populateTimeDropdown();\n//   }, []);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n//   const handleSave = async () => {\n//     try {\n//       await dispatch(createWaterRecord({ amount, time }));\n\n//       setModalVisible(false);\n//       onClose(amount, time);  // Вызываем обновление списка после сохранения\n//  window.location.reload();\n//     } catch (error) {\n//       alert('Error saving record: ' + error.message);\n//     }\n//   };\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         option.value = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n//         option.textContent = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n//         if (hour === currentHour && minute === currentMinute) {\n//           option.selected = true;\n//           setTime(option.value);\n//         }\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className={css.modal}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Add water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <h4 className={css.labelDistance} htmlFor=\"amount\">Choose a value:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonSelector} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount}ml</span>\n//             <button className={css.buttonSelector} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance} htmlFor=\"value\">Enter the value of the water used:</h4>\n//           <input className={css.inputText} type=\"number\" id=\"value\" value={amount} onChange={(e) => setAmount(Number(e.target.value))} />\n//           <div className={css.inputSaveContainer}>\n//             <input className={css.inputField} type=\"text\" id=\"autoFillInput\" readOnly value={`${amount}ml`} />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AddWaterModal;\n\n","// export const selectDailyNorm = state => state.water.dailyNorm || 0;\n\n// export const selectWaterRate = state => state.auth.user.waterRate;\nexport const selectWaterRecords = state => state.water.waterRecords;\nexport const selectTodayRecords = state => state.water.recordsToday;\nexport const selectDaysArray = state => state.water.daysArray;\nexport const selectIsLoading = state => state.water.loading;\nexport const selectSelectedMonthIndex = state => state.water.selectedMonthIndex;\nexport const selectSelectedYear = state => state.water.selectedYear;\nexport const selectError = state => state.water.error;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./WaterRatioPanel.module.css\";\nimport PropTypes from \"prop-types\";\nimport DailyNorma from \"../DailyNorma/DailyNorma\";\nimport AddWaterModal from \"../AddWaterModal/AddWaterModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTodayWaterRecords } from \"../../redux/water/operations\";\n// import { selectToken } from \"../../redux/auth/selectors\";\nimport { selectTodayRecords } from \"../../redux/water/selectors\";\nimport { fetchUser } from \"../../redux/user/operations\";\nimport { selectUserInfo } from \"../../redux/user/selectors\";\n\nconst ProgressBar = ({ sliderValue }) => {\n  const [sliderWidth, setSliderWidth] = useState(256);\n\n  useEffect(() => {\n    const updateSliderWidth = () => {\n      if (window.innerWidth >= 1440) {\n        setSliderWidth(350);\n      } else if (window.innerWidth >= 768) {\n        setSliderWidth(325);\n      } else {\n        setSliderWidth(256);\n      }\n    };\n\n    updateSliderWidth();\n    window.addEventListener(\"resize\", updateSliderWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", updateSliderWidth);\n    };\n  }, []);\n\n  return (\n    <svg className={styles.progressBar} width=\"100%\" height=\"20\" viewBox={`0 0 ${sliderWidth} 20`}>\n      <rect x=\"0\" y=\"6\" width={sliderWidth} height=\"8\" fill=\"#d7e3ff\" rx=\"7\" />\n      <rect x=\"0\" y=\"6\" width={(sliderValue / 100) * sliderWidth} height=\"8\" fill=\"#9ebbff\" rx=\"7\" />\n      <circle\n        cx={Math.min(Math.max((sliderValue / 100) * sliderWidth, 7), sliderWidth - 7)}\n        cy=\"10\"\n        r=\"7\"\n        fill=\"#ffffff\"\n        stroke=\"#407bff\"\n        strokeWidth=\"1\"\n      />\n    </svg>\n  );\n};\n\nProgressBar.propTypes = {\n  sliderValue: PropTypes.number.isRequired,\n};\n\nconst WaterTracker = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  \n  const dispatch = useDispatch();\n  // const accessToken = useSelector(selectToken);\n  const accessToken = localStorage.getItem(\"persist:auth\");\n  const waterRecords = useSelector(selectTodayRecords);\n\n//витягуємо дані про денну норму \n  useEffect(() => {\n    dispatch(fetchUser());\n  }, [dispatch]);\nconst userInfo = useSelector(selectUserInfo);\nconst data = userInfo?.data || {}; // Если данных нет, используем пустой объект\n  const dailyNorma = data.daylyNorm;\n\n\n//оновлюємо дані при монтуванні\n  useEffect(() => {\n    if (accessToken) {\n      dispatch(fetchTodayWaterRecords());\n    }\n  }, [dispatch, accessToken]);\n\n  // Calculate total water and percentage of daily goal\n  const totalWater = waterRecords.reduce((sum, record) => sum + record.amount, 0);\n  const sliderPercentage = Math.min((totalWater / dailyNorma) * 100, 100);\n\n  const handleAddWaterClick = () => {\n    setModalVisible(true);\n  };\n\n  const handleModalClose = async () => {\n    setModalVisible(false);\n    if (accessToken) {\n      try {\n        await dispatch(fetchTodayWaterRecords());\n      } catch (err) {\n        console.error(\"Error fetching water records\", err);\n      }\n    }\n  };\n  return (\n    <div className={styles.dailyNormaSection}>\n      <DailyNorma />\n      <div className={styles.imageContainer}></div>\n      <div className={styles.bottomSection}>\n        <div className={styles.progressContainer}>\n          <span className={styles.progressTitle}>Today</span>\n          <ProgressBar sliderValue={sliderPercentage} />\n\n          <div className={styles.progressMarkers}>\n            {[0, 50, 100].map((value, index) => (\n              <div key={index} className={styles.marker}>\n                <div className={styles.tick}></div>\n                <span>{value}%</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <button className={styles.addWaterBtn} onClick={handleAddWaterClick}>\n          <svg className={styles.icon} width=\"20\" height=\"20\">\n            <use href=\"./images_auth/vectorbtn.svg#icon-vector-btn\"></use>\n          </svg>\n          Add Water\n        </button>\n        {modalVisible && (\n      <AddWaterModal\n        setModalVisible={setModalVisible}\n        onClose={handleModalClose}  // Передаем функцию\n      />\n    )}\n      </div>\n    </div>\n  );\n};\n\nexport default WaterTracker;","// extracted by mini-css-extract-plugin\nexport default {\"todayWaterListSection\":\"TodayWaterList_todayWaterListSection__tsQ3J\",\"title\":\"TodayWaterList_title__1N7Qm\",\"list\":\"TodayWaterList_list__pz4ad\",\"listItem\":\"TodayWaterList_listItem__Nh9Nv\",\"info\":\"TodayWaterList_info__RbyUS\",\"amount\":\"TodayWaterList_amount__d+vnD\",\"amountIcon\":\"TodayWaterList_amountIcon__+6tGu\",\"time\":\"TodayWaterList_time__4fofH\",\"actions\":\"TodayWaterList_actions__cBHzi\",\"editButton\":\"TodayWaterList_editButton__XlLch\",\"deleteButton\":\"TodayWaterList_deleteButton__M0gAj\",\"addButton\":\"TodayWaterList_addButton__gMK19\",\"twbtni\":\"TodayWaterList_twbtni__EiBtO\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"EditWaterModal_modal__GhXVO\",\"modalContent\":\"EditWaterModal_modalContent__tX-md\",\"modalHeader\":\"EditWaterModal_modalHeader__LghY1\",\"modalTitle\":\"EditWaterModal_modalTitle__K7jh2\",\"closeButton\":\"EditWaterModal_closeButton__3y7Bl\",\"iconClose\":\"EditWaterModal_iconClose__cdKlg\",\"modalBody\":\"EditWaterModal_modalBody__dE70S\",\"buttonChange\":\"EditWaterModal_buttonChange__rVTqz\",\"amountSelector\":\"EditWaterModal_amountSelector__bl-wx\",\"amountSelectorSpan\":\"EditWaterModal_amountSelectorSpan__5w4FC\",\"inputSaveContainer\":\"EditWaterModal_inputSaveContainer__9gqFA\",\"inputText\":\"EditWaterModal_inputText__CAfgU\",\"labelDistance\":\"EditWaterModal_labelDistance__kLqa8\",\"labelDistanceText\":\"EditWaterModal_labelDistanceText__BdCZ5\",\"saveButton\":\"EditWaterModal_saveButton__SZbM8\",\"waterEntry\":\"EditWaterModal_waterEntry__N7YWl\",\"waterAmount\":\"EditWaterModal_waterAmount__OqrrT\",\"waterTime\":\"EditWaterModal_waterTime__noB83\",\"inputSave-container\":\"EditWaterModal_inputSave-container__4WY3h\",\"inputField\":\"EditWaterModal_inputField__aLJJf\"};","import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTodayWaterRecords, updateWaterRecord } from '../../redux/water/operations';\nimport { selectTodayRecords } from '../../redux/water/selectors';\nimport SvgIcons from '../SvgIcons/SvgIcons';\nimport css from './EditWaterModal.module.css';\n\nconst EditWaterModal = ({ setModalVisible, waterRecord }) => {\n  const [amount, setAmount] = useState(waterRecord ? waterRecord.amount : 0);\n  const [time, setTime] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  const waterRecords = useSelector(selectTodayRecords);\n\n// разбила на 2 еффекта что бы избежать бесконечно загрузки \n  useEffect(() => {\n    const fetchRecords = async () => {\n      await dispatch(fetchTodayWaterRecords());\n    };\n\n    fetchRecords();\n    populateTimeDropdown();\n  }, [dispatch]); // Убираем waterRecords из зависимостей\n\n  useEffect(() => {\n    // Обрабатываем данные только при наличии waterRecord\n    if (waterRecord) {\n      const localDate = new Date(waterRecord.date);\n      const hours = localDate.getHours();\n      const minutes = localDate.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n      setTime(`${formattedHours}:${minutes} ${ampm}`);\n  \n    }\n  }, [waterRecords, waterRecord]);\n\n    // Закрытие по нажатию клавиши Esc\n    useEffect(() => {\n      const handleKeyDown = (event) => {\n        if (event.key === 'Escape') {\n          setModalVisible(false)\n        }\n      };\n    \n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }, [setModalVisible]);\n\n  const handleClose = () => {\n    setModalVisible(false);\n\n  };\n\n  const handleBackdropClick = (event) => {\n    if (modalRef.current && modalRef.current === event.target) {\n      handleClose();\n    }\n  };\n\n  const handleChangeAmount = (delta) => {\n    setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n  };\n\n  const handleSave = async () => {\n    if (!isValid) {\n      alert('Please enter a valid amount');\n      return;\n    }\n  \n    if (waterRecord && waterRecord._id) {\n      try {\n        const timeElement = document.getElementById('time');\n        const newTime = timeElement.value;\n        const [hours, minutes] = newTime.split(':');\n        const ampm = newTime.includes('PM') ? 'PM' : 'AM';\n        let formattedHours = parseInt(hours, 10);\n  \n        if (ampm === 'PM' && formattedHours !== 12) {\n          formattedHours += 12;\n        } else if (ampm === 'AM' && formattedHours === 12) {\n          formattedHours = 0;\n        }\n  \n        const date = new Date();\n        date.setHours(formattedHours, parseInt(minutes, 10), 0, 0);\n  \n        // Добавляем 2 часа\n        date.setHours(date.getHours() + 2);\n  \n        const formattedDate = date.toISOString();\n        const recordId = waterRecord._id.$oid || waterRecord._id;\n  \n        await dispatch(updateWaterRecord({ recordId, date: formattedDate, amount }));\n  \n        // Загружаем обновленные данные\n        await dispatch(fetchTodayWaterRecords());\n        // window.location.reload();\n        // Закрываем модальное окно\n        setModalVisible(false);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  const handleAmountChange = (e) => {\n    const value = e.target.value;\n    const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n    setIsValid(valid);\n    if (valid) {\n      setAmount(Number(value));\n    }\n  };\n\n  const handleFocus = (e) => {\n    if (e.target.value === '0') {\n      setAmount('');\n    }\n  };\n\n  const handleBlur = (e) => {\n    if (e.target.value === '') {\n      setAmount(0);\n    }\n  };\n\n  const populateTimeDropdown = () => {\n    const timeDropdown = document.getElementById('time');\n    if (!timeDropdown) return;\n\n    for (let hour = 0; hour < 24; hour++) {\n      for (let minute = 0; minute < 60; minute += 5) {\n        const option = document.createElement('option');\n        const ampm = hour >= 12 ? 'PM' : 'AM';\n        const formattedHour = (hour % 12 || 12).toString().padStart(2, '0');\n        option.value = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n        option.textContent = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n        timeDropdown.appendChild(option);\n      }\n    }\n\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n    const currentAmpm = currentHour >= 12 ? 'PM' : 'AM';\n    const formattedCurrentHour = (currentHour % 12 || 12).toString().padStart(2, '0');\n    timeDropdown.value = `${formattedCurrentHour}:${currentMinute.toString().padStart(2, '0')} ${currentAmpm}`;\n  };\n\n  return (\n    <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n      <div className={css.modalContent}>\n        <div className={css.modalHeader}>\n          <h2 className={css.modalTitle}>Edit the entered amount of water</h2>\n          <button className={css.closeButton} onClick={handleClose}>\n          <SvgIcons name=\"close\" className={css.iconClose} />\n          </button>\n        </div>\n        <div className={css.modalBody}>\n          <div className={css.waterEntry}>\n            <SvgIcons name=\"glass\" />\n            <span className={css.waterAmount}>{amount} ml</span>\n            <span className={css.waterTime}>{time}</span>\n          </div>\n          <h4 className={css.labelDistance}>Correct entered data:</h4>\n          <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n          <div className={css.amountSelector}>\n            <button className={css.buttonChange} onClick={() => handleChangeAmount(-50)}>-</button>\n            <span className={css.amountSelectorSpan} id=\"amount\">{amount} ml</span>\n            <button className={css.buttonChange} onClick={() => handleChangeAmount(50)}>+</button>\n          </div>\n          <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n          <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n          <h4 className={css.labelDistance}>Enter the value of the water used:</h4>\n          <input\n            className={css.inputText}\n            type=\"number\"\n            id=\"value\"\n            value={amount}\n            onChange={handleAmountChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n          />\n          <div className={css.inputSaveContainer}>\n            <input\n              className={css.inputField}\n              type=\"text\"\n              id=\"autoFillInput\"\n              readOnly\n              value={`${amount} ml`}\n            />\n            <button className={css.saveButton} onClick={handleSave}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditWaterModal;\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchTodayWaterRecords, updateWaterRecord } from '../../redux/water/operations';\n// import { selectTodayRecords } from '../../redux/water/selectors';\n// import SvgIcons from '../SvgIcons/SvgIcons';\n// import css from './EditWaterModal.module.css';\n\n// const EditWaterModal = ({ setModalVisible, waterRecord }) => {\n//   const [amount, setAmount] = useState(waterRecord ? waterRecord.amount : 0);\n//   const [time, setTime] = useState('');\n//   const [isValid, setIsValid] = useState(true);\n//   const modalRef = useRef(null);\n//   const dispatch = useDispatch();\n//   const waterRecords = useSelector(selectTodayRecords);\n\n//   useEffect(() => {\n//     const fetchRecords = async () => {\n//       await dispatch(fetchTodayWaterRecords());\n//     };\n\n//     fetchRecords();\n//     populateTimeDropdown();\n\n//     if (waterRecord) {\n//       const localDate = new Date(waterRecord.date);\n//       const hours = localDate.getHours();\n//       const minutes = localDate.getMinutes().toString().padStart(2, '0');\n//       const ampm = hours >= 12 ? 'PM' : 'AM';\n//       const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n//       setTime(`${formattedHours}:${minutes} ${ampm}`);\n//     }\n\n//     // Закрытие по нажатию клавиши Esc\n//     const handleKeyDown = (event) => {\n//       if (event.key === 'Escape') {\n//         handleClose();\n//       }\n//     };\n//     document.addEventListener('keydown', handleKeyDown);\n//     return () => {\n//       document.removeEventListener('keydown', handleKeyDown);\n//     };\n//   }, [dispatch, waterRecord]);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleBackdropClick = (event) => {\n//     if (modalRef.current && modalRef.current === event.target) {\n//       handleClose();\n//     }\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n//   const handleSave = async () => {\n//     if (!isValid) {\n//       alert('Please enter a valid amount');\n//       return;\n//     }\n//     if (waterRecord && waterRecord._id) {\n//       try {\n//         const timeElement = document.getElementById('time');\n//         const newTime = timeElement.value;\n//         const [hours, minutes] = newTime.split(':');\n//         const ampm = newTime.includes('PM') ? 'PM' : 'AM';\n//         let formattedHours = parseInt(hours, 10);\n//         if (ampm === 'PM' && formattedHours !== 12) {\n//           formattedHours += 12;\n//         } else if (ampm === 'AM' && formattedHours === 12) {\n//           formattedHours = 0;\n//         }\n//         const date = new Date();\n//         date.setHours(formattedHours, parseInt(minutes, 10), 0, 0);\n\n//         // Добавляем 2 часа\n//         date.setHours(date.getHours() + 2);\n\n//         const formattedDate = date.toISOString();\n//         const recordId = waterRecord._id.$oid || waterRecord._id;\n//         await dispatch(updateWaterRecord({ recordId, date: formattedDate, amount }));\n//         setModalVisible(false);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n//   };\n\n//   const handleAmountChange = (e) => {\n//     const value = e.target.value;\n//     const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n//     setIsValid(valid);\n//     if (valid) {\n//       setAmount(Number(value));\n//     }\n//   };\n\n//   const handleFocus = (e) => {\n//     if (e.target.value === '0') {\n//       setAmount('');\n//     }\n//   };\n\n//   const handleBlur = (e) => {\n//     if (e.target.value === '') {\n//       setAmount(0);\n//     }\n//   };\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     if (!timeDropdown) return;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         const ampm = hour >= 12 ? 'PM' : 'AM';\n//         const formattedHour = (hour % 12 || 12).toString().padStart(2, '0');\n//         option.value = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         option.textContent = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n//     const currentAmpm = currentHour >= 12 ? 'PM' : 'AM';\n//     const formattedCurrentHour = (currentHour % 12 || 12).toString().padStart(2, '0');\n//     timeDropdown.value = `${formattedCurrentHour}:${currentMinute.toString().padStart(2, '0')} ${currentAmpm}`;\n//   };\n\n//   return (\n//     <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Edit the entered amount of water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <div className={css.waterEntry}>\n//             <SvgIcons name=\"glass\" />\n//             <span className={css.waterAmount}>{amount} ml</span>\n//             <span className={css.waterTime}>{time}</span>\n//           </div>\n//           <h4 className={css.labelDistance}>Correct entered data:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount} ml</span>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance}>Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={handleAmountChange}\n//             onFocus={handleFocus}\n//             onBlur={handleBlur}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input\n//               className={css.inputField}\n//               type=\"text\"\n//               id=\"autoFillInput\"\n//               readOnly\n//               value={`${amount} ml`}\n//             />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditWaterModal;\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchTodayWaterRecords, updateWaterRecord } from '../../redux/water/operations';\n// import { selectTodayRecords } from '../../redux/water/selectors';\n// import SvgIcons from '../SvgIcons/SvgIcons';\n// import css from './EditWaterModal.module.css';\n\n// const EditWaterModal = ({ setModalVisible, waterRecord }) => {\n//   const [amount, setAmount] = useState(waterRecord ? waterRecord.amount : 0);\n//   const [time, setTime] = useState('');\n//   const [isValid, setIsValid] = useState(true);\n//   const modalRef = useRef(null);\n//   const dispatch = useDispatch();\n//   const waterRecords = useSelector(selectTodayRecords);\n\n//   useEffect(() => {\n//     const fetchRecords = async () => {\n//       await dispatch(fetchTodayWaterRecords());\n//     };\n\n//     fetchRecords();\n//     populateTimeDropdown();\n\n//     if (waterRecord) {\n//       const localDate = new Date(waterRecord.date);\n//       const hours = localDate.getHours();\n//       const minutes = localDate.getMinutes().toString().padStart(2, '0');\n//       const ampm = hours >= 12 ? 'PM' : 'AM';\n//       const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n//       setTime(`${formattedHours}:${minutes} ${ampm}`);\n//     }\n\n//     // Закрытие по нажатию клавиши Esc\n//     const handleKeyDown = (event) => {\n//       if (event.key === 'Escape') {\n//         handleClose();\n//       }\n//     };\n//     document.addEventListener('keydown', handleKeyDown);\n//     return () => {\n//       document.removeEventListener('keydown', handleKeyDown);\n//     };\n//   }, [dispatch, waterRecord]);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleBackdropClick = (event) => {\n//     if (modalRef.current && modalRef.current === event.target) {\n//       handleClose();\n//     }\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n//   const handleSave = async () => {\n//     if (!isValid) {\n//       alert('Please enter a valid amount');\n//       return;\n//     }\n//     if (waterRecord && waterRecord._id) {\n//       try {\n//         const timeElement = document.getElementById('time');\n//         const newTime = timeElement.value;\n//         const [hours, minutes] = newTime.split(':');\n//         const ampm = newTime.includes('PM') ? 'PM' : 'AM';\n//         let formattedHours = parseInt(hours, 10);\n//         if (ampm === 'PM' && formattedHours !== 12) {\n//           formattedHours += 12;\n//         } else if (ampm === 'AM' && formattedHours === 12) {\n//           formattedHours = 0;\n//         }\n//         const date = new Date();\n//         date.setHours(formattedHours, parseInt(minutes, 10), 0, 0);\n\n//         // Добавляем 2 часа\n//         date.setHours(date.getHours() + 2);\n\n//         const formattedDate = date.toISOString();\n//         const recordId = waterRecord._id.$oid || waterRecord._id;\n//         await dispatch(updateWaterRecord({ recordId, date: formattedDate, amount }));\n//         setModalVisible(false);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n//   };\n\n//   const handleAmountChange = (e) => {\n//     const value = e.target.value;\n//     const valid = /^\\d*\\.?\\d*$/.test(value); // Проверка на дробное число\n//     setIsValid(valid);\n//     if (valid) {\n//       setAmount(Number(value));\n//     }\n//   };\n\n//   const handleFocus = (e) => {\n//     if (e.target.value === '0') {\n//       setAmount('');\n//     }\n//   };\n\n//   const handleBlur = (e) => {\n//     if (e.target.value === '') {\n//       setAmount(0);\n//     }\n//   };\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     if (!timeDropdown) return;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         const ampm = hour >= 12 ? 'PM' : 'AM';\n//         const formattedHour = (hour % 12 || 12).toString().padStart(2, '0');\n//         option.value = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         option.textContent = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n//     const currentAmpm = currentHour >= 12 ? 'PM' : 'AM';\n//     const formattedCurrentHour = (currentHour % 12 || 12).toString().padStart(2, '0');\n//     timeDropdown.value = `${formattedCurrentHour}:${currentMinute.toString().padStart(2, '0')} ${currentAmpm}`;\n//   };\n\n//   return (\n//     <div className={css.modal} ref={modalRef} onClick={handleBackdropClick}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Edit the entered amount of water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <div className={css.waterEntry}>\n//             <SvgIcons name=\"glass\" />\n//             <span className={css.waterAmount}>{amount} ml</span>\n//             <span className={css.waterTime}>{time}</span>\n//           </div>\n//           <h4 className={css.labelDistance}>Correct entered data:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount} ml</span>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance}>Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={handleAmountChange}\n//             onFocus={handleFocus}\n//             onBlur={handleBlur}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input\n//               className={css.inputField}\n//               type=\"text\"\n//               id=\"autoFillInput\"\n//               readOnly\n//               value={`${amount} ml`}\n//             />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditWaterModal;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchTodayWaterRecords, updateWaterRecord } from '../../redux/water/operations';\n// import { selectTodayRecords } from '../../redux/water/selectors';\n// import SvgIcons from '../SvgIcons/SvgIcons';\n// import css from './EditWaterModal.module.css';\n\n// const EditWaterModal = ({ setModalVisible, waterRecord }) => {\n//   const [amount, setAmount] = useState(waterRecord ? waterRecord.amount : 0);\n//   const [time, setTime] = useState('');\n//   const [previousAmount, setPreviousAmount] = useState(null);\n//   const [previousTime, setPreviousTime] = useState(null);\n//   const dispatch = useDispatch();\n//   const waterRecords = useSelector(selectTodayRecords);\n\n//   useEffect(() => {\n//     const fetchRecords = async () => {\n//       await dispatch(fetchTodayWaterRecords());\n//     };\n\n//     fetchRecords();\n//     populateTimeDropdown();\n\n//     if (waterRecord) {\n//       const localDate = new Date(waterRecord.date);\n//       const hours = localDate.getHours();\n//       const minutes = localDate.getMinutes().toString().padStart(2, '0');\n//       const ampm = hours >= 12 ? 'PM' : 'AM';\n//       const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n//       setTime(`${formattedHours}:${minutes} ${ampm}`);\n\n\n\n//       if (waterRecords && waterRecords.length > 1) {\n//         const currentIndex = waterRecords.findIndex(record => record._id === waterRecord._id);\n\n//         if (currentIndex > 0) {\n//           const previousRecord = waterRecords[currentIndex - 1];\n\n//           setPreviousAmount(previousRecord.amount);\n\n//           const previousDate = new Date(previousRecord.date);\n//           const previousHours = previousDate.getHours();\n//           const previousMinutes = previousDate.getMinutes().toString().padStart(2, '0');\n//           const previousAmpm = previousHours >= 12 ? 'PM' : 'AM';\n//           const formattedPreviousHours = (previousHours % 12 || 12).toString().padStart(2, '0');\n//           setPreviousTime(`${formattedPreviousHours}:${previousMinutes} ${previousAmpm}`);\n//         }\n//       }\n//     }\n//   }, [dispatch, waterRecord]);\n\n//   useEffect(() => {\n//     if (waterRecords && waterRecords.length > 1 && waterRecord) {\n//       const currentIndex = waterRecords.findIndex(record => record._id === waterRecord._id);\n//       if (currentIndex > 0) {\n//         const previousRecord = waterRecords[currentIndex - 1];\n//         setPreviousAmount(previousRecord.amount);\n\n//         const previousDate = new Date(previousRecord.date);\n//         const previousHours = previousDate.getHours();\n//         const previousMinutes = previousDate.getMinutes().toString().padStart(2, '0');\n//         const previousAmpm = previousHours >= 12 ? 'PM' : 'AM';\n//         const formattedPreviousHours = (previousHours % 12 || 12).toString().padStart(2, '0');\n//         setPreviousTime(`${formattedPreviousHours}:${previousMinutes} ${previousAmpm}`);\n//       }\n//     }\n//   }, [waterRecords, waterRecord]);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n\n//   const handleSave = async () => {\n//   if (waterRecord && waterRecord._id) {\n//     try {\n//       const timeElement = document.getElementById('time');\n//       const newTime = timeElement.value;\n//       const [hours, minutes] = newTime.split(':');\n//       const ampm = newTime.includes('PM') ? 'PM' : 'AM';\n//       let formattedHours = parseInt(hours, 10);\n//       if (ampm === 'PM' && formattedHours !== 12) {\n//         formattedHours += 12;\n//       } else if (ampm === 'AM' && formattedHours === 12) {\n//         formattedHours = 0;\n//       }\n//       const date = new Date();\n//       date.setHours(formattedHours, parseInt(minutes, 10), 0, 0);\n\n//       // Добавляем 2 часа\n//       date.setHours(date.getHours() + 2);\n\n//       const formattedDate = date.toISOString();\n//       const recordId = waterRecord._id.$oid || waterRecord._id;\n//       await dispatch(updateWaterRecord({ recordId, date: formattedDate, amount }));\n//       setModalVisible(false);\n\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n// };\n\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     if (!timeDropdown) return;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         const ampm = hour >= 12 ? 'PM' : 'AM';\n//         const formattedHour = (hour % 12 || 12).toString().padStart(2, '0');\n//         option.value = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         option.textContent = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n//     const currentAmpm = currentHour >= 12 ? 'PM' : 'AM';\n//     const formattedCurrentHour = (currentHour % 12 || 12).toString().padStart(2, '0');\n//     timeDropdown.value = `${formattedCurrentHour}:${currentMinute.toString().padStart(2, '0')} ${currentAmpm}`;\n//   };\n\n//   return (\n//     <div className={css.modal}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Edit the entered amount of water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <div className={css.waterEntry}>\n//             <SvgIcons name=\"glass\" />\n//             <span className={css.waterAmount}>{previousAmount !== null ? `${previousAmount} ml` : \"No notes yet\"}</span>\n//             {previousTime !== null ? <span className={css.waterTime}>{previousTime}</span> : null}\n//           </div>\n//           <h4 className={css.labelDistance}>Correct entered data:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount}ml</span>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance}>Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={(e) => setAmount(Number(e.target.value))}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input\n//               className={css.inputField}\n//               type=\"text\"\n//               id=\"autoFillInput\"\n//               readOnly\n//               value={`${amount}ml`}\n//             />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditWaterModal;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchTodayWaterRecords, updateWaterRecord } from '../../redux/water/operations';\n// import { selectTodayRecords } from '../../redux/water/selectors';\n// import SvgIcons from '../SvgIcons/SvgIcons';\n// import css from './EditWaterModal.module.css';\n\n// const EditWaterModal = ({ setModalVisible, waterRecord }) => {\n//   const [amount, setAmount] = useState(waterRecord ? waterRecord.amount : 0);\n//   const [time, setTime] = useState('');\n//   const [previousAmount, setPreviousAmount] = useState(null);\n//   const [previousTime, setPreviousTime] = useState(null);\n//   const dispatch = useDispatch();\n//   const waterRecords = useSelector(selectTodayRecords);\n\n//   useEffect(() => {\n//     const fetchRecords = async () => {\n//       await dispatch(fetchTodayWaterRecords());\n//     };\n\n//     fetchRecords();\n//     populateTimeDropdown();\n\n//     if (waterRecord) {\n//       const localDate = new Date(waterRecord.date);\n//       const hours = localDate.getHours();\n//       const minutes = localDate.getMinutes().toString().padStart(2, '0');\n//       const ampm = hours >= 12 ? 'PM' : 'AM';\n//       const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n//       setTime(`${formattedHours}:${minutes} ${ampm}`);\n\n\n\n//       if (waterRecords && waterRecords.length > 1) {\n//         const currentIndex = waterRecords.findIndex(record => record._id === waterRecord._id);\n\n//         if (currentIndex > 0) {\n//           const previousRecord = waterRecords[currentIndex - 1];\n\n//           setPreviousAmount(previousRecord.amount);\n\n//           const previousDate = new Date(previousRecord.date);\n//           const previousHours = previousDate.getHours();\n//           const previousMinutes = previousDate.getMinutes().toString().padStart(2, '0');\n//           const previousAmpm = previousHours >= 12 ? 'PM' : 'AM';\n//           const formattedPreviousHours = (previousHours % 12 || 12).toString().padStart(2, '0');\n//           setPreviousTime(`${formattedPreviousHours}:${previousMinutes} ${previousAmpm}`);\n//         }\n//       }\n//     }\n//   }, [dispatch, waterRecord]);\n\n//   useEffect(() => {\n//     if (waterRecords && waterRecords.length > 1 && waterRecord) {\n//       const currentIndex = waterRecords.findIndex(record => record._id === waterRecord._id);\n//       if (currentIndex > 0) {\n//         const previousRecord = waterRecords[currentIndex - 1];\n//         setPreviousAmount(previousRecord.amount);\n\n//         const previousDate = new Date(previousRecord.date);\n//         const previousHours = previousDate.getHours();\n//         const previousMinutes = previousDate.getMinutes().toString().padStart(2, '0');\n//         const previousAmpm = previousHours >= 12 ? 'PM' : 'AM';\n//         const formattedPreviousHours = (previousHours % 12 || 12).toString().padStart(2, '0');\n//         setPreviousTime(`${formattedPreviousHours}:${previousMinutes} ${previousAmpm}`);\n//       }\n//     }\n//   }, [waterRecords, waterRecord]);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n\n//   const handleSave = async () => {\n//   if (waterRecord && waterRecord._id) {\n//     try {\n//       const timeElement = document.getElementById('time');\n//       const newTime = timeElement.value;\n//       const [hours, minutes] = newTime.split(':');\n//       const ampm = newTime.includes('PM') ? 'PM' : 'AM';\n//       let formattedHours = parseInt(hours, 10);\n//       if (ampm === 'PM' && formattedHours !== 12) {\n//         formattedHours += 12;\n//       } else if (ampm === 'AM' && formattedHours === 12) {\n//         formattedHours = 0;\n//       }\n//       const date = new Date();\n//       date.setHours(formattedHours, parseInt(minutes, 10), 0, 0);\n\n//       // Добавляем 2 часа\n//       date.setHours(date.getHours() + 2);\n\n//       const formattedDate = date.toISOString();\n//       const recordId = waterRecord._id.$oid || waterRecord._id;\n//       await dispatch(updateWaterRecord({ recordId, date: formattedDate, amount }));\n//       setModalVisible(false);\n\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n// };\n\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     if (!timeDropdown) return;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         const ampm = hour >= 12 ? 'PM' : 'AM';\n//         const formattedHour = (hour % 12 || 12).toString().padStart(2, '0');\n//         option.value = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         option.textContent = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n//     const currentAmpm = currentHour >= 12 ? 'PM' : 'AM';\n//     const formattedCurrentHour = (currentHour % 12 || 12).toString().padStart(2, '0');\n//     timeDropdown.value = `${formattedCurrentHour}:${currentMinute.toString().padStart(2, '0')} ${currentAmpm}`;\n//   };\n\n//   return (\n//     <div className={css.modal}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Edit the entered amount of water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <div className={css.waterEntry}>\n//             <SvgIcons name=\"glass\" />\n//             <span className={css.waterAmount}>{previousAmount !== null ? `${previousAmount} ml` : \"No notes yet\"}</span>\n//             {previousTime !== null ? <span className={css.waterTime}>{previousTime}</span> : null}\n//           </div>\n//           <h4 className={css.labelDistance}>Correct entered data:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount}ml</span>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance}>Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={(e) => setAmount(Number(e.target.value))}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input\n//               className={css.inputField}\n//               type=\"text\"\n//               id=\"autoFillInput\"\n//               readOnly\n//               value={`${amount}ml`}\n//             />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditWaterModal;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchTodayWaterRecords, updateWaterRecord } from '../../redux/water/operations';\n// import { selectTodayRecords } from '../../redux/water/selectors';\n// import SvgIcons from '../SvgIcons/SvgIcons';\n// import css from './EditWaterModal.module.css';\n\n// const EditWaterModal = ({ setModalVisible, waterRecord }) => {\n//   const [amount, setAmount] = useState(waterRecord ? waterRecord.amount : 0);\n//   const [time, setTime] = useState('');\n//   const [previousAmount, setPreviousAmount] = useState(null);\n//   const [previousTime, setPreviousTime] = useState(null);\n//   const dispatch = useDispatch();\n//   const waterRecords = useSelector(selectTodayRecords);\n\n//   useEffect(() => {\n//     const fetchRecords = async () => {\n//       await dispatch(fetchTodayWaterRecords());\n//     };\n\n//     fetchRecords();\n//     populateTimeDropdown();\n\n//     if (waterRecord) {\n//       const localDate = new Date(waterRecord.date);\n//       const hours = localDate.getHours();\n//       const minutes = localDate.getMinutes().toString().padStart(2, '0');\n//       const ampm = hours >= 12 ? 'PM' : 'AM';\n//       const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n//       setTime(`${formattedHours}:${minutes} ${ampm}`);\n\n//       console.log('Current Water Record:', waterRecord); // Для диагностики\n//       console.log('All Records:', waterRecords); // Для диагностики\n\n//       if (waterRecords && waterRecords.length > 1) {\n//         const currentIndex = waterRecords.findIndex(record => record._id === waterRecord._id);\n//         console.log('Current Record Index:', currentIndex); // Для диагностики\n\n//         if (currentIndex > 0) {\n//           const previousRecord = waterRecords[currentIndex - 1];\n//           console.log('Previous Record:', previousRecord); // Для диагностики\n//           setPreviousAmount(previousRecord.amount);\n\n//           const previousDate = new Date(previousRecord.date);\n//           const previousHours = previousDate.getHours();\n//           const previousMinutes = previousDate.getMinutes().toString().padStart(2, '0');\n//           const previousAmpm = previousHours >= 12 ? 'PM' : 'AM';\n//           const formattedPreviousHours = (previousHours % 12 || 12).toString().padStart(2, '0');\n//           setPreviousTime(`${formattedPreviousHours}:${previousMinutes} ${previousAmpm}`);\n//         }\n//       }\n//     }\n//   }, [dispatch, waterRecord]);\n\n//   useEffect(() => {\n//     if (waterRecords && waterRecords.length > 1 && waterRecord) {\n//       const currentIndex = waterRecords.findIndex(record => record._id === waterRecord._id);\n//       if (currentIndex > 0) {\n//         const previousRecord = waterRecords[currentIndex - 1];\n//         setPreviousAmount(previousRecord.amount);\n\n//         const previousDate = new Date(previousRecord.date);\n//         const previousHours = previousDate.getHours();\n//         const previousMinutes = previousDate.getMinutes().toString().padStart(2, '0');\n//         const previousAmpm = previousHours >= 12 ? 'PM' : 'AM';\n//         const formattedPreviousHours = (previousHours % 12 || 12).toString().padStart(2, '0');\n//         setPreviousTime(`${formattedPreviousHours}:${previousMinutes} ${previousAmpm}`);\n//       }\n//     }\n//   }, [waterRecords, waterRecord]);\n\n//   const handleClose = () => {\n//     setModalVisible(false);\n//   };\n\n//   const handleChangeAmount = (delta) => {\n//     setAmount((prevAmount) => Math.max(0, prevAmount + delta));\n//   };\n\n\n//   const handleSave = async () => {\n//   if (waterRecord && waterRecord._id) {\n//     try {\n//       const timeElement = document.getElementById('time');\n//       const newTime = timeElement.value;\n//       const [hours, minutes] = newTime.split(':');\n//       const ampm = newTime.includes('PM') ? 'PM' : 'AM';\n//       let formattedHours = parseInt(hours, 10);\n//       if (ampm === 'PM' && formattedHours !== 12) {\n//         formattedHours += 12;\n//       } else if (ampm === 'AM' && formattedHours === 12) {\n//         formattedHours = 0;\n//       }\n//       const date = new Date();\n//       date.setHours(formattedHours, parseInt(minutes, 10), 0, 0);\n\n//       // Добавляем 2 часа\n//       date.setHours(date.getHours() + 2);\n\n//       const formattedDate = date.toISOString();\n//       const recordId = waterRecord._id.$oid || waterRecord._id;\n//       await dispatch(updateWaterRecord({ recordId, date: formattedDate, amount }));\n//       setModalVisible(false);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n// };\n\n\n//   const populateTimeDropdown = () => {\n//     const timeDropdown = document.getElementById('time');\n//     if (!timeDropdown) return;\n\n//     for (let hour = 0; hour < 24; hour++) {\n//       for (let minute = 0; minute < 60; minute += 5) {\n//         const option = document.createElement('option');\n//         const ampm = hour >= 12 ? 'PM' : 'AM';\n//         const formattedHour = (hour % 12 || 12).toString().padStart(2, '0');\n//         option.value = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         option.textContent = `${formattedHour}:${minute.toString().padStart(2, '0')} ${ampm}`;\n//         timeDropdown.appendChild(option);\n//       }\n//     }\n\n//     const now = new Date();\n//     const currentHour = now.getHours();\n//     const currentMinute = Math.floor(now.getMinutes() / 5) * 5;\n//     const currentAmpm = currentHour >= 12 ? 'PM' : 'AM';\n//     const formattedCurrentHour = (currentHour % 12 || 12).toString().padStart(2, '0');\n//     timeDropdown.value = `${formattedCurrentHour}:${currentMinute.toString().padStart(2, '0')} ${currentAmpm}`;\n//   };\n\n//   return (\n//     <div className={css.modal}>\n//       <div className={css.modalContent}>\n//         <div className={css.modalHeader}>\n//           <h2>Edit the entered amount of water</h2>\n//           <span className={css.close} onClick={handleClose}>&times;</span>\n//         </div>\n//         <div className={css.modalBody}>\n//           <div className={css.waterEntry}>\n//             <SvgIcons name=\"glass\" />\n//             <span className={css.waterAmount}>{previousAmount !== null ? `${previousAmount} ml` : \"No notes yet\"}</span>\n//             {previousTime !== null ? <span className={css.waterTime}>{previousTime}</span> : null}\n//           </div>\n//           <h4 className={css.labelDistance}>Correct entered data:</h4>\n//           <label className={css.labelDistanceText} htmlFor=\"amount\">Amount of water:</label>\n//           <div className={css.amountSelector}>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(-50)}>-</button>\n//             <span id=\"amount\">{amount}ml</span>\n//             <button className={css.buttonChange} onClick={() => handleChangeAmount(50)}>+</button>\n//           </div>\n//           <label className={css.labelDistance} htmlFor=\"time\">Recording time:</label>\n//           <select className={css.inputText} id=\"time\" onChange={(e) => setTime(e.target.value)}></select>\n//           <h4 className={css.labelDistance}>Enter the value of the water used:</h4>\n//           <input\n//             className={css.inputText}\n//             type=\"number\"\n//             id=\"value\"\n//             value={amount}\n//             onChange={(e) => setAmount(Number(e.target.value))}\n//           />\n//           <div className={css.inputSaveContainer}>\n//             <input\n//               className={css.inputField}\n//               type=\"text\"\n//               id=\"autoFillInput\"\n//               readOnly\n//               value={`${amount}ml`}\n//             />\n//             <button className={css.saveButton} onClick={handleSave}>Save</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditWaterModal;\n\n\n\n","var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13, _symbol14;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-glass\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M5.565 2.783l1.901 26.363v0.072h16.367l1.901-26.353v-0.082h-20.169zM23.161 28.479h-15.017l-1.426-19.747h0.784l1.289 17.403c0.008 0.092 0.049 0.177 0.115 0.24s0.153 0.098 0.244 0.099h0.030c0.047-0.003 0.093-0.016 0.136-0.037s0.080-0.051 0.111-0.087c0.031-0.036 0.055-0.078 0.069-0.124s0.021-0.094 0.017-0.141l-1.289-17.351h16.362l-1.426 19.747zM24.637 7.994h-16.468l-0.283-3.847c-0.009-0.094-0.052-0.181-0.122-0.244s-0.16-0.097-0.252-0.095c-0.095 0.009-0.183 0.055-0.245 0.129s-0.094 0.169-0.088 0.266l0.283 3.795h-0.794l-0.324-4.483h18.617l-0.324 4.478z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M11.36 12.384c0.236 0 0.467-0.071 0.663-0.204s0.349-0.322 0.439-0.543 0.114-0.465 0.068-0.699c-0.046-0.235-0.16-0.45-0.327-0.62s-0.38-0.285-0.611-0.331c-0.231-0.047-0.471-0.023-0.689 0.069s-0.404 0.247-0.535 0.446c-0.131 0.199-0.201 0.433-0.201 0.673 0 0.321 0.126 0.629 0.349 0.856s0.527 0.354 0.844 0.354zM11.36 10.697c0.093 0 0.184 0.028 0.261 0.080s0.138 0.127 0.173 0.214c0.036 0.087 0.045 0.183 0.027 0.276s-0.063 0.178-0.129 0.244c-0.066 0.067-0.149 0.112-0.241 0.131s-0.186 0.009-0.272-0.027c-0.086-0.036-0.159-0.097-0.211-0.176s-0.079-0.171-0.079-0.265c0-0.127 0.050-0.248 0.138-0.337s0.208-0.14 0.333-0.14z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M11.354 16.318c0.003 0.239 0.076 0.472 0.209 0.669s0.321 0.35 0.539 0.439c0.219 0.089 0.458 0.111 0.689 0.062s0.442-0.166 0.607-0.336c0.165-0.17 0.277-0.387 0.321-0.621s0.019-0.477-0.073-0.698c-0.091-0.22-0.245-0.408-0.442-0.54s-0.427-0.201-0.663-0.2c-0.158 0.001-0.313 0.033-0.459 0.095s-0.277 0.153-0.387 0.267-0.198 0.249-0.256 0.397c-0.059 0.148-0.088 0.307-0.086 0.467zM13.013 16.318c0 0.094-0.028 0.187-0.079 0.265s-0.125 0.14-0.211 0.176c-0.086 0.036-0.18 0.046-0.272 0.027s-0.175-0.064-0.241-0.131c-0.066-0.067-0.111-0.152-0.129-0.244s-0.009-0.188 0.027-0.276c0.036-0.087 0.096-0.162 0.173-0.214s0.168-0.080 0.261-0.080c0.125 0 0.244 0.050 0.333 0.14s0.138 0.211 0.138 0.337z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M19.834 16.349c0.236 0 0.467-0.071 0.663-0.204s0.349-0.322 0.439-0.543 0.114-0.465 0.068-0.699c-0.046-0.235-0.16-0.45-0.327-0.62s-0.38-0.285-0.611-0.331c-0.231-0.047-0.471-0.023-0.689 0.069s-0.404 0.247-0.535 0.446c-0.131 0.199-0.201 0.433-0.201 0.673 0 0.321 0.126 0.629 0.349 0.856s0.527 0.354 0.844 0.354zM19.834 14.666c0.093 0 0.184 0.028 0.262 0.081s0.138 0.127 0.173 0.215c0.035 0.087 0.044 0.184 0.026 0.276s-0.064 0.178-0.13 0.244c-0.066 0.066-0.151 0.111-0.242 0.129s-0.186 0.008-0.272-0.029c-0.086-0.037-0.159-0.099-0.21-0.178s-0.078-0.172-0.077-0.266c0.001-0.126 0.051-0.246 0.139-0.334s0.207-0.138 0.331-0.138z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M15.678 14.066c0.236 0 0.467-0.071 0.663-0.204s0.349-0.322 0.439-0.543c0.090-0.221 0.114-0.465 0.068-0.699s-0.16-0.45-0.327-0.62c-0.167-0.169-0.379-0.285-0.611-0.331s-0.471-0.023-0.689 0.069c-0.218 0.092-0.404 0.247-0.535 0.446s-0.201 0.433-0.201 0.672c0 0.321 0.126 0.629 0.35 0.856s0.527 0.355 0.844 0.355zM15.678 12.379c0.093 0 0.184 0.028 0.261 0.080s0.138 0.127 0.173 0.214c0.036 0.087 0.045 0.183 0.027 0.276s-0.063 0.178-0.129 0.244c-0.066 0.067-0.15 0.112-0.241 0.131s-0.186 0.009-0.272-0.027c-0.086-0.036-0.159-0.097-0.211-0.176s-0.079-0.171-0.079-0.265c-0.003-0.065 0.006-0.13 0.028-0.19s0.056-0.117 0.1-0.164c0.044-0.047 0.097-0.085 0.156-0.11s0.122-0.039 0.186-0.039v0.026z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M13.402 20.929c0.005 0.197 0.067 0.387 0.178 0.549s0.267 0.285 0.448 0.357c0.181 0.072 0.378 0.088 0.567 0.047s0.363-0.139 0.498-0.279c0.135-0.141 0.227-0.319 0.263-0.512s0.015-0.393-0.060-0.574-0.202-0.336-0.363-0.445c-0.162-0.109-0.351-0.167-0.545-0.167-0.264 0.007-0.514 0.118-0.699 0.309s-0.287 0.449-0.287 0.716zM14.388 20.662c0.052 0 0.103 0.016 0.146 0.045s0.077 0.071 0.097 0.12 0.025 0.102 0.015 0.154c-0.010 0.052-0.035 0.099-0.072 0.137s-0.084 0.063-0.135 0.073c-0.051 0.010-0.104 0.005-0.152-0.015s-0.089-0.054-0.118-0.098c-0.029-0.044-0.044-0.095-0.044-0.148 0-0.071 0.028-0.139 0.077-0.189s0.116-0.078 0.186-0.078z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M18.17 19.816c0.202 0.007 0.402-0.048 0.574-0.157s0.307-0.269 0.388-0.457c0.081-0.188 0.105-0.397 0.068-0.599s-0.133-0.388-0.276-0.534c-0.142-0.146-0.325-0.245-0.524-0.285s-0.405-0.018-0.591 0.063c-0.186 0.080-0.345 0.216-0.454 0.389s-0.166 0.375-0.161 0.58c0.006 0.262 0.111 0.511 0.292 0.697s0.426 0.295 0.684 0.304zM18.17 18.549c0.070 0 0.137 0.028 0.186 0.078s0.077 0.118 0.077 0.189-0.028 0.139-0.077 0.189c-0.049 0.050-0.116 0.078-0.186 0.078s-0.138-0.028-0.188-0.078-0.079-0.118-0.080-0.189c0-0.035 0.007-0.071 0.021-0.103s0.033-0.062 0.058-0.087c0.025-0.025 0.055-0.044 0.087-0.058s0.067-0.019 0.102-0.019z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M20.253 11.538c0.2 0 0.395-0.060 0.562-0.173s0.296-0.273 0.372-0.46c0.077-0.187 0.097-0.394 0.058-0.593s-0.135-0.382-0.277-0.525-0.322-0.241-0.518-0.281c-0.196-0.040-0.399-0.019-0.584 0.058s-0.343 0.209-0.454 0.378-0.17 0.367-0.17 0.57c0 0.272 0.107 0.533 0.296 0.725s0.447 0.3 0.715 0.3zM20.253 10.271c0.039-0.011 0.080-0.013 0.12-0.006s0.078 0.024 0.11 0.049c0.032 0.025 0.059 0.057 0.077 0.094s0.028 0.078 0.028 0.119c0 0.041-0.009 0.082-0.028 0.119s-0.045 0.069-0.077 0.094c-0.033 0.025-0.070 0.042-0.11 0.049s-0.081 0.006-0.12-0.006c-0.039 0.011-0.080 0.013-0.12 0.006s-0.078-0.024-0.11-0.049c-0.032-0.025-0.059-0.057-0.077-0.094s-0.028-0.078-0.028-0.119c0-0.041 0.009-0.082 0.028-0.119s0.045-0.069 0.077-0.094c0.033-0.025 0.070-0.042 0.11-0.049s0.081-0.005 0.12 0.006z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M10.369 27.191c-0.045 0.021-0.086 0.052-0.119 0.089s-0.059 0.082-0.074 0.13c-0.016 0.048-0.021 0.099-0.017 0.149s0.019 0.099 0.043 0.144c0.031 0.060 0.078 0.11 0.135 0.145s0.122 0.054 0.189 0.055c0.056 0.002 0.112-0.011 0.162-0.036 1.545-0.803 3.255-1.225 4.99-1.231 1.837 0.027 3.648 0.441 5.319 1.216 0.066 0.035 0.141 0.049 0.215 0.039s0.143-0.042 0.198-0.093c0.055-0.051 0.094-0.118 0.11-0.192s0.010-0.151-0.018-0.221c-0.036-0.091-0.104-0.164-0.192-0.205-1.769-0.821-3.687-1.258-5.633-1.282-1.845 0.002-3.664 0.444-5.309 1.292z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Logo\",\n    viewBox: \"0 0 27 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M10.546 4.879c0.449-0.353 1.016 0.412 1.076 1.118s-0.568 2.295-2.331 2.707c-1.763 0.412-1.972 1.501-1.913 2.148s-0.239 1.354-0.867 1.207-0.687-1.118-0.12-2.031c0.568-0.913 2.002-1.736 2.241-2.237s0.060-1.089 0.538-1.295c0.478-0.206 1.106 0.324 1.046 0.824 0 0 0.478-0.471 0.418-1.177-0.039-0.464-0.315-1.088-0.090-1.265z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M22.141 9.176c0.166-0.472 1.345-0.206 1.614 0.441s0.179 1.148 0.448 1.589-0.478 1.177-1.031 1.089c-0.553-0.088-0.344-1.089-0.344-1.53s-0.956-0.824-0.687-1.589z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M18.406 3.618c0.409-0.36 1.285 0.26 1.524 0.76s0.030 1.824-0.702 1.795c-0.732-0.029-0.441-1.065-0.702-1.28-0.463-0.382-0.448-0.986-0.119-1.275z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M13.361 0.553c0.29 0.449 0.074 1.059-0.663 1.197s-0.877-0.471-1.275-0.334c-0.399 0.138-0.837 0.235-1.016-0.079s0.020-0.785 0.817-0.785 1.605-0.824 2.137 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M8.724 4.843c0.347 0 0.627-0.298 0.627-0.666s-0.281-0.666-0.627-0.666c-0.347 0-0.628 0.298-0.628 0.666s0.281 0.666 0.628 0.666z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M6.002 7.047c-0.223-0.111-0.954 1.039-0.456 1.177s0.812-1.001 0.456-1.177z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M4.052 10.46c0 0 0.976 0.53 0.618 1.618s-1.135 0.952-1.375 0.618c-0.239-0.334-0.239-0.785 0.159-1.099s0.598-1.137 0.598-1.137z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M24.771 16.326c0 0 0.299 0.442 0.15 1.236s-0.388 2.354 0.448 2.796c0.836 0.442 1.165-1.118 0.837-1.589s0.179-2.090-1.435-2.443z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M25.832 23.418c0.355 0 0.643-0.343 0.643-0.765s-0.288-0.765-0.643-0.765-0.643 0.343-0.643 0.765c0 0.423 0.288 0.765 0.643 0.765z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M0.625 23.712c0.554-0.283 1.016 0.177 1.076 1.030s0.867 1.589 0.448 2.030c-0.418 0.441-0.905-1.383-1.285-1.552-0.583-0.26-1.046-1.096-0.239-1.508z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#9ebbff\",\n    style: {\n      fill: \"var(--color2, #9ebbff)\"\n    },\n    d: \"M24.157 24.565c-0.522 0.53 0.173 1.078-1.059 2.472-0.513 0.58 0.379 2.315-2.092 2.295 0 0-1.435 1.294-2.869 1.472s-2.032-0.059-3.407 0.706c-1.375 0.765-4.423-0.53-5.678-1.089s-1.733-0.618-2.808-0.618c-1.076 0-0.657-1.648-1.435-2.354s-1.674-1-1.734-1.647c-0.060-0.647-0.657-0.942-0.597-1.943s-0.956-1.295-1.076-2.531 0.537-1.471 0.298-2.177c-0.239-0.706-0.298-1.295 0.060-2.001 0.043-0.086 0.092-0.168 0.148-0.245 0.307-0.431 0.602-0.398 0.808-1.108 0.239-0.824-0.418-1.177 0.299-1.53s0.956 0.706 0.538 1.765c-0.419 1.060-0.957 2.060-0.239 2.236s0.538-2.001 1.495-3.002c0.956-1.001 0.538-1.235 1.793-2.236s1.375-0.588 1.793-1.648c0.418-1.060 1.599-2.177 2.803-2.707s1.741-0.765 1.561-1.648c-0.18-0.883 0.823-0.883 0.86-1.825s-0.801-1.589-1.518-1.354-1.435 0.235-1.195-0.529c0.239-0.765 1.744-0.706 2.456-0.354s1.31-0.529 2.266 0.354c0.956 0.883 2.211 1.177 2.032 3.238s-0.358 2.766 0.418 2.884c0.777 0.118 0.12-0.942 0.12-1.765s1.375-0.765 1.733-0.118c0.358 0.647-0.119 1.765 0.239 2.178s1.016 0.353 1.195 0.941c0.179 0.588-0.119 3.002 0.717 3.532s0.657-1.294 1.375-0.735c0.717 0.559 0.896 1.559 0.478 2.56-0.279 0.669-0.308 2.339-0.146 3.776 0.079 0.711 0.204 1.366 0.368 1.815 0.494 1.353 0.52 2.412-0.001 2.942z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#c6d7ff\",\n    style: {\n      fill: \"var(--color3, #c6d7ff)\"\n    },\n    d: \"M14.249 9.565c1.569-0.488 2.887 2.212 2.34 3.372s-0.78 4.739 1.248 4.294c2.028-0.445 0.546-3.887 1.638-3.818s0.624 3.219 1.326 4.217c0.702 0.999 3.125 7.836-0.778 10.217s-9.425 2.305-11.54 0.538c-0.851-0.711-1.467-1.454-1.92-2.176-0.216-0.343-0.345-0.614-0.434-0.852-0.19-0.512-0.157-0.692-0.349-1.206-0.126-0.331-0.287-0.647-0.482-0.944-0.422-0.638-0.613-0.564-1.007-1.119-0.132-0.186-0.55-0.812-0.588-1.657-0.010-0.221-0.038-0.839 0.229-0.949 0.302-0.125 0.693 0.52 1.094 0.386 0.21-0.070 0.302-0.314 0.359-0.466 0.17-0.451 0-0.73-0.082-1.399-0.063-0.517-0.138-1.139 0.17-1.664 0.050-0.086 0.196-0.367 0.679-0.629 1.698-0.922 3.222-0.077 4.332-1.767s1.132-1.801 2.174-2.245c1.042-0.444 0.106-1.673 1.588-2.134z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M13.626 32c-1.108 0-2.655-0.447-4.679-1.349-1.233-0.55-1.671-0.596-2.704-0.596-0.817 0-0.991-0.734-1.131-1.323-0.099-0.416-0.201-0.847-0.477-1.098-0.257-0.234-0.526-0.418-0.786-0.597-0.525-0.362-0.979-0.674-1.029-1.213-0.020-0.214-0.118-0.39-0.233-0.595-0.18-0.323-0.405-0.724-0.365-1.385 0.024-0.411-0.173-0.678-0.423-1.016-0.274-0.37-0.586-0.791-0.652-1.476-0.068-0.703 0.095-1.111 0.225-1.44 0.107-0.268 0.171-0.43 0.086-0.682-0.216-0.638-0.357-1.346 0.074-2.193 0.181-0.357 0.372-0.524 0.526-0.659 0.175-0.153 0.301-0.263 0.413-0.651 0.083-0.286 0.036-0.498-0.009-0.703-0.068-0.308-0.153-0.691 0.44-0.983 0.298-0.147 0.59-0.123 0.801 0.066 0.379 0.34 0.417 1.188 0.091 2.016-0.057 0.145-0.117 0.289-0.175 0.43-0.227 0.55-0.484 1.171-0.372 1.388 0.009 0.017 0.029 0.057 0.132 0.082 0.006 0.002 0.013 0.003 0.019 0.002 0.115-0.040 0.255-0.59 0.338-0.918 0.167-0.657 0.374-1.476 0.889-2.014 0.39-0.409 0.536-0.678 0.677-0.939 0.2-0.37 0.389-0.721 1.142-1.321 0.479-0.382 0.798-0.565 1.031-0.698 0.357-0.205 0.453-0.26 0.685-0.845 0.437-1.107 1.644-2.277 2.936-2.846l0.006-0.002c1.252-0.552 1.543-0.707 1.409-1.366-0.12-0.591 0.194-0.898 0.447-1.145 0.212-0.207 0.395-0.385 0.408-0.738 0.015-0.386-0.15-0.746-0.442-0.961-0.23-0.17-0.499-0.222-0.738-0.143-0.459 0.151-1.075 0.265-1.398-0.046-0.13-0.125-0.257-0.365-0.122-0.797 0.087-0.277 0.3-0.493 0.616-0.626 0.654-0.275 1.65-0.15 2.199 0.122 0.197 0.098 0.383 0.063 0.67-0.001 0.44-0.098 0.988-0.221 1.655 0.395 0.203 0.187 0.426 0.351 0.642 0.51 0.797 0.585 1.621 1.191 1.47 2.932-0.022 0.258-0.045 0.494-0.065 0.711-0.155 1.629-0.124 1.843 0.268 1.902 0.028 0.005 0.056 0.007 0.083 0.006 0.017-0.106-0.055-0.391-0.103-0.585-0.073-0.292-0.156-0.623-0.156-0.937 0-0.409 0.255-0.717 0.681-0.824 0.51-0.128 1.242 0.060 1.533 0.585 0.217 0.392 0.181 0.89 0.149 1.329-0.023 0.319-0.049 0.68 0.060 0.805 0.111 0.128 0.278 0.203 0.454 0.283 0.291 0.131 0.653 0.296 0.792 0.75 0.065 0.213 0.075 0.57 0.087 1.020 0.023 0.827 0.058 2.077 0.523 2.371 0.085 0.054 0.133 0.061 0.149 0.056 0.068-0.020 0.166-0.228 0.224-0.353 0.111-0.239 0.238-0.51 0.508-0.574 0.164-0.039 0.337 0.012 0.514 0.15 0.801 0.625 1.019 1.744 0.556 2.854-0.384 0.919-0.251 4.104 0.226 5.41 0.549 1.5 0.529 2.608-0.057 3.203-0.136 0.138-0.151 0.263-0.171 0.531-0.033 0.433-0.078 1.025-0.879 1.931-0.1 0.113-0.124 0.357-0.149 0.615-0.069 0.698-0.172 1.746-2.038 1.767-0.324 0.276-1.611 1.307-2.934 1.47-0.407 0.050-0.75 0.068-1.053 0.084-0.765 0.040-1.318 0.068-2.259 0.592-0.324 0.18-0.733 0.271-1.231 0.271zM3.276 14.449c-0.034 0-0.081 0.010-0.146 0.042-0.237 0.117-0.231 0.146-0.169 0.425 0.050 0.228 0.12 0.541 0.001 0.949-0.153 0.528-0.363 0.712-0.565 0.889-0.14 0.122-0.271 0.238-0.409 0.508-0.329 0.648-0.261 1.172-0.046 1.809 0.144 0.426 0.023 0.731-0.095 1.026-0.116 0.293-0.248 0.625-0.192 1.208 0.053 0.548 0.309 0.894 0.556 1.227 0.273 0.369 0.556 0.751 0.521 1.342-0.031 0.516 0.131 0.806 0.303 1.112 0.13 0.233 0.265 0.473 0.294 0.792 0.028 0.306 0.374 0.544 0.812 0.845 0.261 0.179 0.557 0.383 0.84 0.64 0.391 0.356 0.517 0.886 0.628 1.354 0.158 0.664 0.259 0.934 0.632 0.934 1.072 0 1.601 0.055 2.915 0.64 3.407 1.517 4.842 1.436 5.447 1.099 1.046-0.582 1.681-0.615 2.484-0.657 0.294-0.015 0.628-0.032 1.017-0.080 1.338-0.165 2.714-1.395 2.728-1.407 0.047-0.043 0.109-0.066 0.173-0.066h0.002c1.494 0.012 1.554-0.601 1.624-1.311 0.033-0.341 0.065-0.662 0.273-0.897 0.69-0.78 0.726-1.255 0.755-1.638 0.021-0.28 0.043-0.569 0.314-0.844 0.428-0.435 0.407-1.412-0.057-2.682-0.528-1.444-0.652-4.734-0.218-5.772 0.374-0.896 0.217-1.785-0.4-2.267-0.024-0.020-0.050-0.036-0.079-0.049-0.047 0.045-0.118 0.196-0.161 0.289-0.118 0.254-0.253 0.542-0.545 0.627-0.176 0.051-0.368 0.012-0.57-0.116-0.693-0.438-0.729-1.738-0.758-2.781-0.011-0.381-0.020-0.741-0.066-0.89-0.069-0.226-0.232-0.309-0.515-0.437-0.208-0.094-0.445-0.201-0.629-0.413-0.246-0.282-0.214-0.713-0.181-1.169 0.028-0.388 0.057-0.789-0.088-1.051-0.161-0.291-0.638-0.418-0.957-0.338-0.295 0.074-0.295 0.271-0.295 0.335 0 0.253 0.075 0.553 0.141 0.817 0.11 0.44 0.205 0.821-0.014 1.057-0.12 0.13-0.303 0.177-0.541 0.141-0.918-0.139-0.845-0.91-0.7-2.447 0.020-0.215 0.043-0.451 0.065-0.707 0.127-1.461-0.487-1.913-1.266-2.485-0.228-0.167-0.463-0.34-0.686-0.546-0.469-0.433-0.789-0.362-1.192-0.271-0.301 0.067-0.643 0.143-1.014-0.041-0.439-0.218-1.274-0.316-1.768-0.109-0.176 0.074-0.287 0.179-0.328 0.311-0.044 0.141-0.047 0.251-0.009 0.288 0.068 0.065 0.357 0.1 0.879-0.072 0.401-0.131 0.841-0.052 1.207 0.219 0.426 0.315 0.668 0.832 0.647 1.384s-0.32 0.843-0.559 1.077c-0.251 0.245-0.369 0.377-0.305 0.688 0.218 1.079-0.504 1.398-1.702 1.925l-0.006 0.003c-1.16 0.511-2.282 1.591-2.668 2.569-0.285 0.721-0.472 0.851-0.904 1.098-0.218 0.125-0.518 0.297-0.966 0.654-0.671 0.535-0.829 0.827-1.012 1.166-0.149 0.276-0.319 0.59-0.756 1.048-0.423 0.442-0.612 1.19-0.764 1.791-0.089 0.352-0.166 0.656-0.278 0.882-0.219 0.444-0.533 0.442-0.7 0.4-0.272-0.067-0.403-0.224-0.464-0.343-0.218-0.422 0.048-1.063 0.355-1.806 0.057-0.139 0.116-0.28 0.172-0.423 0.281-0.712 0.203-1.316 0.042-1.461-0.011-0.010-0.024-0.018-0.038-0.024s-0.029-0.008-0.044-0.007z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M6.676 12.268c-0.070-0-0.14-0.009-0.208-0.025-0.256-0.060-0.457-0.234-0.564-0.49-0.202-0.478-0.077-1.177 0.326-1.824 0.328-0.526 0.904-1.004 1.413-1.426 0.374-0.311 0.728-0.603 0.818-0.792 0.078-0.163 0.106-0.347 0.133-0.525 0.050-0.324 0.106-0.692 0.501-0.863 0.27-0.117 0.599-0.065 0.878 0.139 0.141 0.102 0.256 0.235 0.337 0.388 0.086-0.177 0.159-0.414 0.136-0.691-0.012-0.142-0.050-0.308-0.087-0.469-0.090-0.394-0.175-0.767 0.069-0.959 0.178-0.14 0.392-0.168 0.601-0.080 0.392 0.166 0.737 0.75 0.786 1.33 0.065 0.771-0.613 2.471-2.478 2.907-1.657 0.387-1.818 1.386-1.766 1.947 0.047 0.512-0.109 1.002-0.397 1.248-0.137 0.12-0.314 0.185-0.497 0.184zM9.398 6.64c-0.051-0-0.102 0.010-0.149 0.030-0.192 0.083-0.227 0.253-0.276 0.573-0.030 0.195-0.064 0.416-0.166 0.629-0.126 0.264-0.476 0.554-0.918 0.921-0.487 0.404-1.038 0.861-1.333 1.334-0.329 0.529-0.449 1.124-0.298 1.481 0.061 0.145 0.162 0.235 0.299 0.267 0.145 0.034 0.264 0.009 0.365-0.077 0.195-0.166 0.302-0.539 0.266-0.928-0.051-0.55 0.049-1.879 2.059-2.349 1.64-0.383 2.24-1.846 2.184-2.508-0.040-0.476-0.325-0.916-0.555-1.014-0.079-0.034-0.142-0.026-0.209 0.027-0.053 0.062 0.024 0.4 0.066 0.581 0.040 0.174 0.081 0.353 0.095 0.521 0.066 0.785-0.452 1.305-0.474 1.326-0.028 0.028-0.064 0.046-0.104 0.053s-0.080 0.001-0.116-0.016c-0.036-0.017-0.065-0.045-0.085-0.079s-0.027-0.074-0.022-0.113c0.021-0.179-0.092-0.393-0.283-0.532-0.113-0.083-0.235-0.126-0.346-0.126v-0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M23.269 12.491c-0.043 0-0.086-0.003-0.128-0.010-0.619-0.099-0.56-0.894-0.521-1.42 0.008-0.112 0.016-0.218 0.016-0.297 0-0.101-0.133-0.25-0.261-0.393-0.26-0.29-0.616-0.688-0.416-1.258 0.079-0.224 0.302-0.358 0.612-0.366 0.49-0.012 1.149 0.288 1.36 0.798 0.136 0.327 0.185 0.617 0.229 0.872 0.045 0.263 0.084 0.49 0.206 0.691 0.137 0.225 0.105 0.514-0.087 0.794-0.212 0.309-0.613 0.589-1.012 0.589zM22.605 9.124h-0.022c-0.067 0.002-0.226 0.016-0.26 0.112-0.118 0.336 0.058 0.568 0.341 0.884 0.184 0.205 0.357 0.399 0.357 0.643 0 0.093-0.008 0.205-0.017 0.324-0.029 0.389-0.073 0.976 0.2 1.020 0.235 0.037 0.576-0.15 0.76-0.418 0.050-0.072 0.157-0.254 0.076-0.387-0.16-0.263-0.206-0.535-0.256-0.823-0.042-0.248-0.086-0.504-0.206-0.792-0.139-0.336-0.618-0.563-0.972-0.563z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M19.253 6.363c-0.011 0-0.022 0-0.033-0.001-0.631-0.025-0.701-0.621-0.744-0.976-0.014-0.116-0.036-0.311-0.075-0.348-0.265-0.219-0.421-0.528-0.426-0.847-0.005-0.28 0.106-0.54 0.302-0.713 0.158-0.138 0.37-0.186 0.615-0.136 0.497 0.1 1.028 0.575 1.21 0.957 0.186 0.389 0.15 1.187-0.177 1.673-0.174 0.257-0.406 0.392-0.674 0.392zM18.713 3.7c-0.074 0-0.133 0.020-0.179 0.060-0.114 0.1-0.177 0.255-0.174 0.425 0.003 0.212 0.106 0.412 0.289 0.564 0.153 0.126 0.18 0.353 0.209 0.594 0.051 0.429 0.105 0.632 0.378 0.643 0.145 0.006 0.266-0.067 0.371-0.224 0.243-0.361 0.285-1.018 0.149-1.302-0.14-0.292-0.57-0.674-0.939-0.748-0.034-0.007-0.069-0.011-0.104-0.012z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M12.487 1.959c-0.34 0-0.556-0.147-0.721-0.26-0.156-0.107-0.205-0.13-0.28-0.104-0.288 0.099-0.963 0.332-1.246-0.164-0.057-0.098-0.086-0.208-0.086-0.321s0.031-0.223 0.089-0.32c0.094-0.159 0.347-0.426 0.98-0.426 0.243 0 0.502-0.093 0.754-0.182 0.496-0.177 1.114-0.397 1.545 0.27 0.174 0.27 0.203 0.585 0.079 0.867-0.139 0.315-0.455 0.54-0.869 0.617-0.081 0.016-0.164 0.024-0.247 0.024zM11.538 1.207c0.182 0 0.326 0.099 0.448 0.182 0.178 0.122 0.346 0.237 0.677 0.175 0.291-0.054 0.499-0.195 0.588-0.396 0.073-0.164 0.054-0.352-0.051-0.514-0.253-0.393-0.549-0.31-1.090-0.117-0.283 0.101-0.575 0.205-0.885 0.205-0.322 0-0.559 0.087-0.649 0.239-0.024 0.040-0.037 0.086-0.037 0.132s0.013 0.092 0.037 0.132c0.087 0.152 0.329 0.15 0.785-0.007 0.057-0.020 0.117-0.031 0.177-0.031z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M8.724 5.032c-0.452 0-0.82-0.383-0.82-0.855s0.368-0.855 0.82-0.855c0.452 0 0.819 0.383 0.819 0.855s-0.368 0.855-0.819 0.855zM8.724 3.7c-0.24 0-0.436 0.214-0.436 0.477s0.195 0.477 0.436 0.477c0.24 0 0.436-0.214 0.436-0.477s-0.195-0.477-0.436-0.477z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M5.632 8.425c-0.047-0-0.093-0.007-0.138-0.019-0.16-0.044-0.27-0.163-0.301-0.326-0.071-0.37 0.279-0.947 0.541-1.141 0.158-0.117 0.279-0.098 0.354-0.061 0.307 0.152 0.314 0.62 0.163 1.005-0.136 0.345-0.365 0.542-0.619 0.542zM5.943 7.256c-0.141 0.119-0.387 0.506-0.375 0.73 0.003 0.048 0.012 0.050 0.030 0.055 0.111 0.031 0.231-0.132 0.295-0.296 0.086-0.218 0.079-0.408 0.050-0.489z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M3.796 13.126c-0.261 0-0.515-0.12-0.658-0.32-0.324-0.452-0.243-1.009 0.196-1.355 0.284-0.223 0.479-0.822 0.531-1.034 0.007-0.028 0.020-0.055 0.039-0.077s0.043-0.040 0.070-0.052c0.027-0.012 0.056-0.017 0.086-0.016s0.058 0.009 0.084 0.023c0.386 0.209 1.030 0.864 0.708 1.842-0.253 0.769-0.693 0.944-0.933 0.98-0.041 0.006-0.082 0.009-0.123 0.009zM4.158 10.772c-0.099 0.29-0.291 0.742-0.584 0.973-0.343 0.27-0.28 0.622-0.122 0.842 0.067 0.094 0.225 0.183 0.41 0.155 0.263-0.039 0.484-0.296 0.625-0.722 0.209-0.633-0.102-1.045-0.328-1.248v-0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M25.652 20.624c-0.121 0-0.247-0.033-0.374-0.1-0.905-0.478-0.745-1.939-0.546-2.997 0.132-0.7-0.118-1.093-0.12-1.097-0.021-0.031-0.032-0.068-0.032-0.106s0.012-0.075 0.034-0.106c0.022-0.031 0.052-0.055 0.088-0.069s0.075-0.017 0.112-0.009c1.27 0.278 1.369 1.283 1.435 1.948 0.024 0.243 0.047 0.472 0.116 0.572 0.283 0.405 0.179 1.306-0.199 1.721-0.146 0.16-0.323 0.241-0.513 0.241zM25.096 16.631c0.058 0.232 0.091 0.558 0.014 0.966-0.274 1.455-0.156 2.328 0.35 2.594 0.17 0.090 0.3 0.072 0.419-0.060 0.274-0.301 0.335-1.015 0.169-1.254-0.126-0.18-0.152-0.444-0.182-0.749-0.055-0.564-0.117-1.192-0.77-1.496z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M25.832 23.607c-0.46 0-0.834-0.428-0.834-0.954s0.374-0.954 0.834-0.954 0.835 0.428 0.835 0.954c0 0.526-0.375 0.954-0.835 0.954zM25.832 22.077c-0.248 0-0.45 0.258-0.45 0.576s0.202 0.576 0.45 0.576c0.249 0 0.451-0.258 0.451-0.576s-0.202-0.576-0.451-0.576z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M2.013 27.030c-0.017 0-0.034-0.001-0.051-0.004-0.303-0.044-0.519-0.471-0.769-0.965-0.117-0.233-0.314-0.622-0.409-0.669-0.443-0.197-0.772-0.639-0.785-1.051-0.009-0.333 0.182-0.616 0.536-0.797 0.264-0.135 0.537-0.139 0.768-0.011 0.333 0.184 0.547 0.62 0.588 1.196 0.023 0.328 0.17 0.641 0.312 0.944 0.203 0.434 0.414 0.882 0.085 1.229-0.096 0.102-0.197 0.129-0.276 0.129zM0.944 23.818c-0.072 0-0.149 0.021-0.23 0.062-0.223 0.114-0.334 0.266-0.329 0.452 0.007 0.265 0.253 0.58 0.559 0.717 0.206 0.092 0.36 0.381 0.595 0.845 0.123 0.243 0.346 0.686 0.468 0.754l0.003-0.003c0.146-0.153 0.036-0.409-0.153-0.812-0.149-0.318-0.319-0.679-0.347-1.076-0.031-0.44-0.178-0.773-0.393-0.892-0.053-0.030-0.113-0.045-0.174-0.045z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M15.181 21.667c0.153 0.752-0.336 1.542-1.045 1.84-0.992 0.445-2.237-0.079-2.537-1.121-0.069-0.238-0.084-0.487-0.036-0.719 0.005-0.025 0.019-0.047 0.039-0.063s0.045-0.025 0.070-0.025 0.051 0.008 0.071 0.024c0.020 0.016 0.034 0.038 0.040 0.062 0.163 0.765 0.808 1.337 1.579 1.329 0.765-0.006 1.392-0.57 1.557-1.326 0.027-0.14 0.235-0.138 0.262 0l0 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color4, #fff)\"\n    },\n    opacity: 0.5,\n    d: \"M6.593 22.817c0.692-0.13 1.115-0.942 0.946-1.814s-0.867-1.472-1.559-1.342c-0.692 0.13-1.115 0.942-0.946 1.814s0.867 1.472 1.559 1.342z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color4, #fff)\"\n    },\n    opacity: 0.5,\n    d: \"M6.63 18.799c0.715 0.219 1.433-2.086 2.7-2.608s2.102-2.163 2.491-3.225c0.389-1.062 1.984-1.755 1.647-2.497s-1.796-0.145-2.656 0.985-0.476 2.31-1.773 2.809c-1.297 0.499-3.889 4.082-2.409 4.536z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    opacity: 0.2,\n    d: \"M23.504 24.485c-0.49 0.478 0.162 0.974-0.995 2.232-0.482 0.523 0.356 2.091-1.966 2.072 0 0-1.348 1.169-2.696 1.329s-1.91-0.053-3.202 0.638c-1.292 0.691-4.157-0.478-5.337-0.983s-1.629-0.558-2.639-0.558c-1.011 0-0.618-1.488-1.348-2.126s-1.573-0.903-1.629-1.487c-0.056-0.584-0.618-0.85-0.562-1.754s-0.899-1.169-1.011-2.285c-0.112-1.116 0.505-1.328 0.28-1.966s-0.28-1.169 0.056-1.806c0.040-0.077 0.087-0.152 0.139-0.222 0.014 0.362 0.035 0.723 0.16 0.947 0.13 0.232 0.301 0.446 0.381 0.697 0.204 0.645-0.252 1.301-0.318 1.971-0.123 1.24 1.040 2.2 1.836 3.192 0.708 0.883 1.216 1.969 2.216 2.547 1.113 0.644 2.556 0.478 3.775 0.040s2.331-1.123 3.573-1.5c1.437-0.438 2.978-0.445 4.485-0.37 1.086 0.054 2.325 0.096 3.080-0.643 0.434-0.425 0.608-1.027 0.727-1.607 0.228-1.114 0.314-2.252 0.255-3.388 0.132 0.245 0.263 0.491 0.394 0.737 0.074 0.642 0.192 1.234 0.346 1.638 0.465 1.222 0.489 2.178-0 2.657z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M16.942 16.62c0.821-0.082 1.578 0.802 1.692 1.976s-0.459 2.192-1.279 2.274c-0.82 0.082-1.578-0.802-1.692-1.976s0.459-2.191 1.279-2.274z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color4, #fff)\"\n    },\n    d: \"M17 17.112c0.261 0.108 0.374 0.507 0.252 0.892s-0.434 0.61-0.695 0.503c-0.261-0.108-0.374-0.507-0.251-0.892s0.434-0.61 0.695-0.503z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#8baeff\",\n    style: {\n      fill: \"var(--color5, #8baeff)\"\n    },\n    d: \"M17.879 19.634c0.124 0.090 0.139 0.311 0.034 0.492s-0.291 0.255-0.415 0.165c-0.123-0.090-0.139-0.311-0.034-0.492s0.291-0.255 0.415-0.165z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    style: {\n      fill: \"var(--color1, #407bff)\"\n    },\n    d: \"M9.905 16.62c-0.821-0.082-1.578 0.802-1.692 1.976s0.459 2.192 1.279 2.274c0.821 0.082 1.578-0.802 1.692-1.976s-0.459-2.191-1.279-2.274z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    style: {\n      fill: \"var(--color4, #fff)\"\n    },\n    d: \"M9.847 17.112c-0.261 0.108-0.374 0.507-0.251 0.892s0.434 0.61 0.695 0.503 0.374-0.507 0.252-0.892c-0.123-0.385-0.434-0.61-0.695-0.503z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#8baeff\",\n    style: {\n      fill: \"var(--color5, #8baeff)\"\n    },\n    d: \"M8.968 19.634c-0.124 0.090-0.139 0.311-0.034 0.492s0.291 0.255 0.415 0.165 0.139-0.311 0.034-0.492c-0.105-0.181-0.291-0.255-0.415-0.165z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#407bff\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2,\n    d: \"M8 24l16-16M8 8l16 16\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-long-left\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.706 10.293c0.187 0.188 0.292 0.442 0.292 0.707s-0.105 0.519-0.292 0.707l-3.293 3.293h21.587c0.265 0 0.52 0.105 0.707 0.293s0.293 0.442 0.293 0.707c0 0.265-0.105 0.519-0.293 0.707s-0.442 0.293-0.707 0.293h-21.587l3.293 3.293c0.098 0.091 0.177 0.202 0.232 0.325s0.084 0.255 0.086 0.389c0.002 0.134-0.022 0.268-0.073 0.392s-0.125 0.238-0.22 0.333-0.208 0.17-0.333 0.22c-0.125 0.050-0.258 0.075-0.392 0.073s-0.267-0.032-0.389-0.086-0.233-0.133-0.325-0.232l-5-5c-0.187-0.188-0.292-0.442-0.292-0.707s0.105-0.519 0.292-0.707l5-5c0.188-0.187 0.442-0.292 0.707-0.292s0.519 0.105 0.707 0.292z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-right-on-rectangle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M21 12v-5c0-0.796-0.316-1.559-0.879-2.121s-1.326-0.879-2.121-0.879h-8c-0.796 0-1.559 0.316-2.121 0.879s-0.879 1.326-0.879 2.121v18c0 0.796 0.316 1.559 0.879 2.121s1.326 0.879 2.121 0.879h8c0.796 0 1.559-0.316 2.121-0.879s0.879-1.326 0.879-2.121v-5M25 20l4-4M29 16l-4-4M29 16h-17\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-up-tray\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M4 22v3c0 0.796 0.316 1.559 0.879 2.121s1.326 0.879 2.121 0.879h18c0.796 0 1.559-0.316 2.121-0.879s0.879-1.326 0.879-2.121v-3M10 10l6-6M16 4l6 6M16 4v18\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar-days\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#407bff\",\n    style: {\n      stroke: \"var(--color1, #407bff)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6,\n    d: \"M9 4v3M23 4v3M4 25v-15c0-0.796 0.316-1.559 0.879-2.121s1.326-0.879 2.121-0.879h18c0.796 0 1.559 0.316 2.121 0.879s0.879 1.326 0.879 2.121v15M4 25c0 0.796 0.316 1.559 0.879 2.121s1.326 0.879 2.121 0.879h18c0.796 0 1.559-0.316 2.121-0.879s0.879-1.326 0.879-2.121M4 25v-10c0-0.796 0.316-1.559 0.879-2.121s1.326-0.879 2.121-0.879h18c0.796 0 1.559 0.316 2.121 0.879s0.879 1.326 0.879 2.121v10M16 17h0.011v0.011h-0.011v-0.011zM16 20h0.011v0.011h-0.011v-0.011zM16 23h0.011v0.011h-0.011v-0.011zM13 20h0.011v0.011h-0.011v-0.011zM13 23h0.011v0.011h-0.011v-0.011zM10 20h0.011v0.011h-0.011v-0.011zM10 23h0.011v0.011h-0.011v-0.011zM19 17h0.011v0.011h-0.011v-0.011zM19 20h0.011v0.011h-0.011v-0.011zM19 23h0.011v0.011h-0.011v-0.011zM22 17h0.011v0.011h-0.011v-0.011zM22 20h0.011v0.011h-0.011v-0.011z\"\n  })), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-double-up\",\n    viewBox: \"0 0 32 32\",\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.706 21.707c-0.187 0.187-0.442 0.293-0.707 0.293s-0.519-0.105-0.707-0.293l-10-10c-0.177-0.19-0.273-0.44-0.268-0.699s0.11-0.506 0.293-0.689c0.183-0.183 0.43-0.288 0.689-0.293s0.51 0.092 0.699 0.268l9.293 9.293 9.293-9.293c0.092-0.098 0.202-0.177 0.325-0.232s0.255-0.084 0.389-0.086c0.134-0.002 0.268 0.022 0.392 0.073s0.238 0.125 0.333 0.22 0.17 0.208 0.22 0.333c0.050 0.125 0.075 0.258 0.073 0.392s-0.032 0.267-0.086 0.389-0.133 0.233-0.232 0.325l-10 10z\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cog-6-tooth\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M12.792 5.253c0.12-0.723 0.747-1.253 1.48-1.253h3.457c0.733 0 1.36 0.531 1.48 1.253l0.284 1.708c0.084 0.499 0.417 0.915 0.86 1.16 0.099 0.053 0.196 0.111 0.293 0.169 0.432 0.261 0.96 0.343 1.433 0.165l1.623-0.608c0.333-0.125 0.699-0.128 1.033-0.008s0.616 0.354 0.793 0.662l1.728 2.996c0.177 0.308 0.24 0.668 0.177 1.018s-0.249 0.665-0.523 0.89l-1.337 1.103c-0.391 0.32-0.584 0.817-0.575 1.323 0.002 0.113 0.002 0.227 0 0.34-0.009 0.504 0.184 1 0.573 1.32l1.34 1.104c0.565 0.467 0.712 1.272 0.347 1.907l-1.731 2.996c-0.177 0.307-0.458 0.542-0.793 0.662s-0.7 0.117-1.033-0.007l-1.623-0.608c-0.473-0.177-1-0.096-1.435 0.165-0.097 0.059-0.194 0.116-0.293 0.171-0.441 0.244-0.775 0.66-0.859 1.159l-0.284 1.707c-0.12 0.724-0.747 1.255-1.48 1.255h-3.459c-0.733 0-1.36-0.531-1.48-1.253l-0.284-1.708c-0.083-0.499-0.416-0.915-0.859-1.16-0.099-0.055-0.197-0.111-0.293-0.169-0.433-0.261-0.96-0.343-1.435-0.165l-1.623 0.608c-0.332 0.125-0.698 0.127-1.032 0.008s-0.615-0.354-0.793-0.661l-1.729-2.996c-0.177-0.308-0.24-0.668-0.176-1.018s0.249-0.665 0.523-0.89l1.339-1.103c0.389-0.32 0.583-0.817 0.573-1.323-0.002-0.113-0.002-0.227 0-0.34 0.009-0.504-0.184-1-0.573-1.32l-1.339-1.104c-0.274-0.225-0.459-0.541-0.523-0.89s-0.001-0.709 0.176-1.017l1.729-2.996c0.178-0.308 0.459-0.543 0.793-0.662s0.701-0.117 1.033 0.008l1.621 0.608c0.475 0.177 1.001 0.096 1.435-0.165 0.096-0.059 0.195-0.116 0.293-0.171 0.443-0.244 0.776-0.66 0.859-1.159l0.285-1.708z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M20 16c0 1.061-0.421 2.078-1.172 2.828s-1.768 1.172-2.828 1.172c-1.061 0-2.078-0.421-2.828-1.172s-1.172-1.768-1.172-2.828c0-1.061 0.421-2.078 1.172-2.828s1.768-1.172 2.828-1.172c1.061 0 2.078 0.421 2.828 1.172s1.172 1.768 1.172 2.828z\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M2.715 16.429c-0.092-0.277-0.092-0.575 0-0.852 1.849-5.564 7.099-9.577 13.285-9.577 6.184 0 11.431 4.009 13.284 9.571 0.093 0.276 0.093 0.575 0 0.852-1.848 5.564-7.097 9.577-13.284 9.577-6.184 0-11.432-4.009-13.285-9.571z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M20 16c0 1.061-0.421 2.078-1.172 2.828s-1.768 1.172-2.828 1.172c-1.061 0-2.078-0.421-2.828-1.172s-1.172-1.768-1.172-2.828c0-1.061 0.421-2.078 1.172-2.828s1.768-1.172 2.828-1.172c1.061 0 2.078 0.421 2.828 1.172s1.172 1.768 1.172 2.828z\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye-slash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M5.307 10.964c-1.247 1.472-2.176 3.187-2.728 5.036 1.723 5.784 7.080 10 13.421 10 1.324 0 2.604-0.184 3.817-0.527M8.304 8.304c2.284-1.507 4.96-2.308 7.696-2.304 6.341 0 11.697 4.216 13.42 9.997-0.944 3.159-2.971 5.885-5.724 7.699M8.304 8.304l-4.304-4.304M8.304 8.304l4.867 4.867M23.696 23.696l4.304 4.304M23.696 23.696l-4.867-4.867c0.371-0.371 0.666-0.812 0.867-1.298s0.304-1.005 0.304-1.531-0.103-1.045-0.304-1.531c-0.201-0.485-0.496-0.926-0.867-1.298s-0.813-0.666-1.298-0.867c-0.485-0.201-1.005-0.304-1.531-0.304s-1.046 0.103-1.531 0.305c-0.485 0.201-0.926 0.496-1.298 0.867M18.828 18.828l-5.655-5.655\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-minus-small\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 16c0-0.265 0.105-0.52 0.293-0.707s0.442-0.293 0.707-0.293h16c0.265 0 0.52 0.105 0.707 0.293s0.293 0.442 0.293 0.707-0.105 0.52-0.293 0.707c-0.187 0.188-0.442 0.293-0.707 0.293h-16c-0.265 0-0.52-0.105-0.707-0.293s-0.293-0.442-0.293-0.707z\"\n  }))), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil-square\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M22.483 5.983l2.249-2.251c0.469-0.469 1.105-0.732 1.768-0.732s1.299 0.263 1.768 0.732c0.469 0.469 0.732 1.105 0.732 1.768s-0.263 1.299-0.732 1.768l-14.159 14.159c-0.705 0.705-1.574 1.222-2.529 1.507l-3.58 1.067 1.067-3.58c0.284-0.955 0.802-1.824 1.507-2.529l11.909-11.908zM22.483 5.983l3.517 3.517M24 18.667v6.333c0 0.796-0.316 1.559-0.879 2.121s-1.326 0.879-2.121 0.879h-14c-0.796 0-1.559-0.316-2.121-0.879s-0.879-1.326-0.879-2.121v-14c0-0.796 0.316-1.559 0.879-2.121s1.326-0.879 2.121-0.879h6.333\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M16 12v8M20 16h-8M28 16c0 1.576-0.31 3.136-0.913 4.592s-1.487 2.779-2.601 3.893c-1.114 1.114-2.437 1.998-3.893 2.601s-3.016 0.913-4.592 0.913-3.136-0.31-4.592-0.913c-1.456-0.603-2.779-1.487-3.893-2.601s-1.998-2.437-2.601-3.893c-0.603-1.456-0.913-3.016-0.913-4.592 0-3.183 1.264-6.235 3.515-8.485s5.303-3.515 8.485-3.515c3.183 0 6.235 1.264 8.485 3.515s3.515 5.303 3.515 8.485z\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus-small\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M16 8v16M24 16h-16\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-presentation-chart-bar\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#407bff\",\n    style: {\n      stroke: \"var(--color1, #407bff)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6,\n    d: \"M5 4v15c0 0.796 0.316 1.559 0.879 2.121s1.326 0.879 2.121 0.879h3M5 4h-2M5 4h22M11 22h10M11 22l-1.333 4M27 4h2M27 4v15c0 0.796-0.316 1.559-0.879 2.121s-1.326 0.879-2.121 0.879h-3M21 22l1.333 4M9.667 26h12.667M9.667 26l-0.667 2M22.333 26l0.667 2M12 15v2M16 12v5M20 9v8\"\n  })), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M19.653 12l-0.461 12M12.808 24l-0.461-12M25.637 7.72c0.456 0.069 0.909 0.143 1.363 0.221M25.637 7.72l-1.424 18.511c-0.058 0.754-0.399 1.458-0.953 1.971s-1.283 0.799-2.039 0.798h-10.443c-0.756 0-1.484-0.285-2.039-0.798s-0.895-1.217-0.953-1.971l-1.424-18.511M25.637 7.72c-1.539-0.233-3.086-0.409-4.637-0.529M6.363 7.72c-0.456 0.068-0.909 0.141-1.363 0.22M6.363 7.72c1.539-0.233 3.086-0.409 4.637-0.529M21 7.191v-1.221c0-1.573-1.213-2.885-2.787-2.935-1.475-0.047-2.951-0.047-4.427 0-1.573 0.049-2.787 1.363-2.787 2.935v1.221M21 7.191c-3.328-0.257-6.672-0.257-10 0\"\n  }))), _symbol14 || (_symbol14 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M31.333 16c0 8.468-6.865 15.333-15.333 15.333s-15.333-6.865-15.333-15.333c0-8.468 6.865-15.333 15.333-15.333s15.333 6.865 15.333 15.333z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.3333,\n    d: \"M20.001 9.436c0 1.088-0.421 2.132-1.172 2.901s-1.768 1.202-2.829 1.202c-1.061 0-2.079-0.432-2.829-1.202s-1.172-1.813-1.172-2.901c0-1.088 0.421-2.132 1.172-2.901s1.768-1.202 2.829-1.202c1.061 0 2.079 0.432 2.829 1.202s1.172 1.813 1.172 2.901zM8 24.881c0.034-2.153 0.892-4.205 2.389-5.715s3.512-2.356 5.611-2.356c2.099 0 4.115 0.846 5.611 2.356s2.355 3.562 2.389 5.715c-2.51 1.18-5.239 1.789-8 1.785-2.855 0-5.564-0.639-8-1.785z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-wrench-screwdriver\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#407bff\",\n    style: {\n      stroke: \"var(--color1, #407bff)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6,\n    d: \"M15.227 20.227l7.773 7.773c0.667 0.645 1.56 1.003 2.488 0.995s1.816-0.379 2.472-1.036c0.656-0.656 1.028-1.544 1.036-2.472s-0.35-1.821-0.995-2.488l-7.836-7.836M15.227 20.227l3.328-4.040c0.423-0.512 0.987-0.835 1.611-1.021 0.733-0.219 1.551-0.251 2.324-0.187 1.042 0.090 2.090-0.095 3.039-0.536s1.766-1.121 2.371-1.975 0.975-1.851 1.076-2.893c0.1-1.041-0.074-2.091-0.504-3.045l-4.368 4.369c-0.731-0.169-1.399-0.54-1.93-1.070s-0.901-1.199-1.070-1.93l4.368-4.368c-0.954-0.431-2.003-0.605-3.044-0.504s-2.039 0.471-2.893 1.076-1.535 1.422-1.975 2.371c-0.44 0.949-0.625 1.997-0.536 3.039 0.121 1.435-0.095 3.019-1.205 3.933l-0.136 0.113M15.227 20.227l-6.207 7.537c-0.301 0.367-0.675 0.666-1.099 0.88s-0.887 0.336-1.361 0.359c-0.474 0.023-0.947-0.053-1.39-0.224s-0.844-0.432-1.18-0.767-0.597-0.737-0.767-1.18c-0.171-0.442-0.247-0.916-0.223-1.39s0.146-0.937 0.359-1.361c0.213-0.424 0.513-0.798 0.88-1.099l9.116-7.507-5.476-5.476h-1.879l-3-5 2-2 5 3v1.879l5.68 5.68-2.327 1.916M24.5 24.5l-3.5-3.5M6.489 25.5h0.011v0.011h-0.011v-0.011z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.2938a5482846c8085447cd6b9efdd6e9.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"DaysGeneralStats_header__zJwj9\",\"dayStatsWrap\":\"DaysGeneralStats_dayStatsWrap__0LXe3\",\"fadeInDown\":\"DaysGeneralStats_fadeInDown__WznhC\",\"date\":\"DaysGeneralStats_date__a+Vzv\",\"daysCloseButton\":\"DaysGeneralStats_daysCloseButton__o4VkW\",\"dayStatsHead\":\"DaysGeneralStats_dayStatsHead__tyzlH\",\"dayStats\":\"DaysGeneralStats_dayStats__N8Jud\",\"statValue\":\"DaysGeneralStats_statValue__mk3lR\",\"statRow\":\"DaysGeneralStats_statRow__BbRbt\"};","import { useEffect, useState, useRef, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SpriteIcons from '../MonthStatsTable/sprite.svg';\nimport styles from './DaysGeneralStats.module.css';\nimport { fetchUser } from '../../redux/user/operations'; // Fetch user data\nimport { selectUserInfo } from '../../redux/user/selectors'; // Select user data from Redux\n\nexport const DaysGeneralStats = ({\n  isStatsOpen,\n  closeStats,\n  selectedDay,\n  statsPosition,\n}) => {\n  const [modalPosition, setModalPosition] = useState(statsPosition);\n  const [dragging, setDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const dispatch = useDispatch();\n  const modalRef = useRef(null); // Ref for modal container\n\n  useEffect(() => {\n    dispatch(fetchUser());\n  }, [dispatch]);\n\n  const userInfo = useSelector(selectUserInfo);\n  const data = userInfo?.data || {}; // Fallback to empty object if no user data\n\n  const normaValue = data.daylyNorm ? data.daylyNorm / 1000 : 2.0; // Convert daily norm to liters\n\n  useEffect(() => {\n    setModalPosition(statsPosition);\n  }, [statsPosition]);\n\n  // Dragging logic\n  const handleDragStart = (event) => {\n    setDragging(true);\n    setDragStart({ x: event.clientX, y: event.clientY });\n  };\n\n  const handleDrag = (event) => {\n    if (!dragging) return;\n\n    const deltaX = event.clientX - dragStart.x;\n    const deltaY = event.clientY - dragStart.y;\n\n    setModalPosition((prevPosition) => ({\n      top: prevPosition.top + deltaY,\n      left: prevPosition.left + deltaX,\n    }));\n\n    setDragStart({ x: event.clientX, y: event.clientY });\n  };\n\n  const handleDragEnd = () => {\n    setDragging(false);\n  };\n\n  const { top, left } = modalPosition;\n\n  const statsStyle = {\n    top: `${top - 103}px`,\n    left: `${left + 3}px`,\n    transform: 'translate(-300%, -100%)',\n    zIndex: 10,\n  };\n\n  const handleEsc = useCallback(\n    (event) => {\n      if (event.key === 'Escape') {\n        closeStats();\n      }\n    },\n    [closeStats]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleEsc);\n    return () => {\n      document.removeEventListener('keydown', handleEsc);\n    };\n  }, [handleEsc]);\n\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        closeStats();\n      }\n    },\n    [closeStats]\n  );\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  if (!selectedDay) {\n    return null;\n  }\n\n  return (\n    <div\n      className={`${styles.dayStatsWrap} ${isStatsOpen ? styles.open : ''}`}\n      style={statsStyle}\n      onMouseDown={handleDragStart}\n      onMouseMove={handleDrag}\n      onMouseUp={handleDragEnd}\n      onMouseLeave={handleDragEnd} // Ensure dragging stops if mouse leaves the modal\n      ref={modalRef} // Attach the modalRef here\n    >\n      <div className={styles.header}>\n        <p className={styles.date}>\n          {selectedDay.date}, {selectedDay.month}\n        </p>\n        <button className={styles.daysCloseButton} onClick={closeStats}>\n          <svg width=\"16px\" height=\"16px\" stroke=\"currentColor\" fill=\"currentColor\">\n            <use xlinkHref={`${SpriteIcons}#icon-close`} />\n          </svg>\n        </button>\n      </div>\n      <div className={styles.statRow}>\n        <p className={styles.statLabel}>Daily Norma:</p>\n        <p className={styles.statValue}>{normaValue} L</p>\n      </div>\n      <div className={styles.statRow}>\n        <p className={styles.statLabel}>Fulfillment of the daily norm:</p>\n        <p className={styles.statValue}>{selectedDay.percentageOfGoal}%</p>\n      </div>\n      <div className={styles.statRow}>\n        <p className={styles.statLabel}>How many servings of water:</p>\n        <p className={styles.statValue}>{selectedDay.recordsCount}</p>\n      </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"monthTableWrap\":\"MonthStatsTable_monthTableWrap__RUvkN\",\"paginationWrap\":\"MonthStatsTable_paginationWrap__DlkWe\",\"daysList\":\"MonthStatsTable_daysList__uEEAv\",\"dayItem\":\"MonthStatsTable_dayItem__lh8AI\",\"dayNumber\":\"MonthStatsTable_dayNumber__V-WmZ\",\"dayNumber--low\":\"MonthStatsTable_dayNumber--low__P9iIZ\",\"dayPercentage\":\"MonthStatsTable_dayPercentage__0nKnN\",\"monthsHead\":\"MonthStatsTable_monthsHead__N7CCt\",\"monthSelector\":\"MonthStatsTable_monthSelector__1Igvw\",\"monthAndYear\":\"MonthStatsTable_monthAndYear__Y89jc\",\"monthBackButton\":\"MonthStatsTable_monthBackButton__7IEHe\",\"monthNextButton\":\"MonthStatsTable_monthNextButton__aSu38\"};","import { useEffect, useState, useMemo, useCallback } from 'react';\nimport { DaysGeneralStats } from '../DaysGeneralStats/DaysGeneralStats';\nimport { useDispatch} from 'react-redux';\nimport { fetchDaysArray } from '../../redux/water/operations';\n// import { selectToken } from '../../redux/auth/selectors';\n// import toast from 'react-hot-toast';\nimport SpriteIcons from './sprite.svg';\nimport styles from './MonthStatsTable.module.css';\nimport Loader from 'components/Loader/Loader';\n\nexport default function MonthStatsTable() {\n  const getMonthName = useCallback((monthIndex) => {\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December',\n    ];\n    return months[monthIndex];\n  }, []);\n  \n  const parseDate = (dateStr) => {\n    if (!dateStr || typeof dateStr !== 'string') return null; // Проверяем входные данные\n    const [day, month] = dateStr.split(', ');\n    if (!day || !month) return null;\n  \n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December',\n    ];\n    const monthIndex = months.indexOf(month.trim());\n    if (monthIndex === -1) return null;\n  \n    const parsedDay = parseInt(day.trim());\n    if (isNaN(parsedDay)) return null;\n  \n    return new Date(new Date().getFullYear(), monthIndex, parsedDay);\n  };\n\n  const [isStatsOpen, setIsStatsOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [daysArray, setDaysArray] = useState([]);\n  // const userToken = useSelector(selectToken);\n  const userToken = localStorage.getItem(\"persist:auth\");\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [statsPosition, setStatsPosition] = useState({ top: 0, right: 0 });\n  const [currentDateInfo] = useState({\n    currentMonthIndex: new Date().getMonth(),\n    currentYear: new Date().getFullYear(),\n    currentDate: new Date().getDate(),\n  });\n\n  const { currentMonthIndex, currentYear, currentDate } = currentDateInfo;\n  const [selectedMonthIndex, setSelectedMonthIndex] = useState(currentMonthIndex);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n\n  const monthName = useMemo(() => getMonthName(selectedMonthIndex), [selectedMonthIndex, getMonthName]);\n  const initialDaysArray = useMemo(() => {\n    return Array.from(\n      { length: new Date(selectedYear, selectedMonthIndex + 1, 0).getDate() },\n      (_, index) => ({\n        month: monthName,\n        date: index + 1,\n        percentageOfGoal: 0, \n        recordsCount: 0,\n      })\n    );\n  }, [selectedMonthIndex, selectedYear, monthName]);  \n\n  const handleMonthChange = (direction) => {\n    const totalMonths = 12;\n    const newMonthIndex =\n      (selectedMonthIndex + direction + totalMonths) % totalMonths;\n    setSelectedYear(\n      newMonthIndex === 11 && direction === -1\n        ? selectedYear - 1\n        : newMonthIndex === 0 && direction === 1\n        ? selectedYear + 1\n        : selectedYear\n    );\n    setSelectedMonthIndex(newMonthIndex);\n  };\n\n  const dispatch = useDispatch();\n  \n  \n  useEffect(() => {\n    if (!userToken) return;\n  \n    setIsLoading(true);\n    const selectedMonthName = monthName;\n  \n    dispatch(fetchDaysArray({\n      monthName: selectedMonthName,\n      year: selectedYear,\n      accessToken: userToken,\n    }))\n      .unwrap()\n      .then((response) => {\n        if (response && Array.isArray(response.data)) {\n          const newDataMap = response.data.reduce((acc, item) => {\n            const itemDate = parseDate(item.date);\n            if (itemDate) {\n              const key = itemDate.toISOString().split('T')[0];\n              acc[key] = {\n                percentageOfGoal: parseInt(item.percentageOfGoal) || 0,\n                recordsCount: item.recordsCount || 0,\n              };\n            }\n            return acc;\n          }, {});\n  \n          const newUpdatedDaysArray = initialDaysArray.map((day) => {\n            const dayDate = new Date(selectedYear, selectedMonthIndex, day.date);\n            const key = dayDate.toISOString().split('T')[0];\n            const matchingItem = newDataMap[key];\n  \n            if (matchingItem) {\n              return {\n                ...day,\n                percentageOfGoal: matchingItem.percentageOfGoal,\n                recordsCount: matchingItem.recordsCount,\n              };\n            }\n            return day;\n          });\n          setDaysArray(newUpdatedDaysArray); // Обновляем состояние с данными для рендера\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [userToken, selectedMonthIndex, selectedYear, dispatch, initialDaysArray, monthName]);\n\n  const handleOpenStats = (day, event) => {\n    const rect = event.currentTarget.getBoundingClientRect(); // Отримуємо розміри елемента\n    const isRightSide = rect.left > window.innerWidth / 2; // Перевіряємо, чи елемент у правій частині\n  \n    setStatsPosition({\n      top: rect.top + window.scrollY - 10, // Розташовуємо над елементом із невеликим відступом\n      left: isRightSide ? rect.left - 200 : rect.left, // Ліворуч або праворуч в залежності від положення\n    });\n  \n    setSelectedDay(day);\n    setIsStatsOpen(true);\n  };\n\n  const handleCloseStats = () => {\n    setIsStatsOpen(false);\n    setSelectedDay(null); // Скидываем выбранный день\n  };\n\n  const borderClass = (percentage) => {\n    if (percentage === 0) return 'neutral';\n    if (percentage < 100) return 'low'; // Добавляем класс для прогресса < 100%\n    return 'high';\n  };\n  \n  return (\n    <>\n      <div className={styles.paginationWrap}>\n        <h2 className={styles.monthsHead}>Month</h2>\n        <div className={styles.monthSelector}>\n          <button\n            className={`${styles.monthButton} ${styles.monthBackButton}`}\n            onClick={() => handleMonthChange(-1)}\n          >\n            <svg width=\"14px\" height=\"14px\">\n              <use href={`${SpriteIcons}#icon-chevron-double-up`} />\n            </svg>\n          </button>\n          <p className={styles.monthAndYear}>\n            {monthName}, {selectedYear}\n          </p>\n          <button\n  className={`${styles.monthButton} ${styles.monthNextButton}`}\n  onClick={() => handleMonthChange(1)}\n  disabled={selectedMonthIndex === currentMonthIndex && selectedYear === currentYear}\n>\n  <svg width=\"14px\" height=\"14px\">\n    <use href={`${SpriteIcons}#icon-chevron-double-up`} />\n  </svg>\n</button>\n        </div>\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={styles.daysList}>\n  {daysArray?.map((day) => {\n    const isSelected =\n      day.date === currentDate && currentMonthIndex === selectedMonthIndex;\n\n    return (\n      <li key={day.date} className={styles.dayItem}>\n        <p\n  id=\"day-number\"\n  onClick={(event) => handleOpenStats(day, event)}\n  className={`${styles.dayNumber} ${styles[`dayNumber--${borderClass(day.percentageOfGoal)}`]} ${\n    isSelected && day.percentageOfGoal > 0 ? styles.dayNumberSelected : ''\n  }`}\n>\n  {day.date}\n</p>\n        <p className={styles.dayPercentage}>\n        {day.percentageOfGoal ? `${day.percentageOfGoal + \"%\"}` : '-'}\n</p>\n      </li>\n    );\n  })}\n</ul>\n      )}\n\n{isStatsOpen && (\n  <DaysGeneralStats\n    closeStats={handleCloseStats}\n    isOpen={isStatsOpen} \n    selectedDay={selectedDay}\n    statsPosition={statsPosition}\n  />\n)}\n    </>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"DeleteWaterModal_backdrop__+akGu\",\"deleteModal\":\"DeleteWaterModal_deleteModal__h9C5o\",\"deleteModal__container\":\"DeleteWaterModal_deleteModal__container__K02sK\",\"deleteModal__header\":\"DeleteWaterModal_deleteModal__header__o2Zkg\",\"deleteModal__title\":\"DeleteWaterModal_deleteModal__title__8kfTA\",\"deleteModal__ques\":\"DeleteWaterModal_deleteModal__ques__l4h-Z\",\"deleteModal__close\":\"DeleteWaterModal_deleteModal__close__8VqmZ\",\"deleteModal__close_icon\":\"DeleteWaterModal_deleteModal__close_icon__XrJP9\",\"deleteModal__delete\":\"DeleteWaterModal_deleteModal__delete__++SEX\",\"deleteModal__cancel\":\"DeleteWaterModal_deleteModal__cancel__GVcyS\",\"deleteModal__btnsWrap\":\"DeleteWaterModal_deleteModal__btnsWrap__-L8-N\",\"deleteModal__actions\":\"DeleteWaterModal_deleteModal__actions__aog75\",\"modal__close_icon\":\"DeleteWaterModal_modal__close_icon__DXf5p\"};","import SvgIcons from 'components/SvgIcons/SvgIcons';\nimport css from './DeleteWaterModal.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteWaterRecord } from '../../redux/water/operations.js';\n\nexport const DeleteWaterModal = ({ record, closeModal, closeBackdrop, onSave }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    if (!record || !record._id) {\n      console.error('No record provided for deletion');\n      return;\n    }\n    try {\n      const result = await dispatch(deleteWaterRecord(record._id)); // Удаляем запись\n      if (result.meta.requestStatus === 'fulfilled') {\n        if (onSave) {\n          await onSave(); // Вызываем обновление списка, если передано\n        }\n        closeModal();\n      } else {\n        console.error('Failed to delete water record');\n      }\n    } catch (err) {\n      console.error('Error during deletion:', err);\n    }\n  };\n\n  return (\n    <div className={css.backdrop} onClick={(e) => e.target === e.currentTarget && closeBackdrop()}>\n      <section className={css.deleteModal}>\n        <div className={css.deleteModal__container}>\n          <div className={css.deleteModal__header}>\n            <h2 className={css.deleteModal__title}>Delete entry</h2>\n            <button className={css.deleteModal__close} onClick={closeModal}>\n              <SvgIcons name=\"close\" className={css.deleteModal__close_icon} />\n            </button>\n          </div>\n          <div className={css.deleteModal__actions}>\n            <p className={css.deleteModal__ques}>\n              Are you sure you want to delete the entry of {record.amount} ml \n              recorded at {new Date(record.date).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })}?\n            </p>\n            <div  className={css.deleteModal__btnsWrap}>\n            <button\n              type=\"button\"\n              className={css.deleteModal__delete}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n            <button\n              type=\"button\"\n              className={css.deleteModal__cancel}\n              onClick={closeModal}\n            >\n              Cancel\n            </button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./TodayWaterList.module.css\";\nimport AddWaterModal from \"../AddWaterModal/AddWaterModal\";\nimport {fetchDaysArray} from \"../../redux/water/operations\"; \n// import { selectToken } from \"../../redux/auth/selectors\";\nimport EditWaterModal from \"../EditWaterModal/EditWaterModal\";\nimport MonthStatsTable from \"../MonthStatsTable/MonthStatsTable\";\nimport { selectTodayRecords } from \"../../redux/water/selectors\";\nimport { fetchTodayWaterRecords, updateWaterRecord } from \"../../redux/water/operations\";\nimport { DeleteWaterModal } from \"../DeleteWaterModal/DeleteWaterModal\";\n\nconst TodayWaterList = () => {\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [isEditModalVisible, setEditModalVisible] = useState(false);\n  const [isDeleteModalVisible, setDeleteModalVisible] = useState(false);\n  const dispatch = useDispatch();\n  // const accessToken = useSelector(selectToken);\n  const accessToken = localStorage.getItem(\"persist:auth\");\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const listRef = useRef(null);\n  const waterRecords = useSelector(selectTodayRecords);\n\n\nuseEffect(() => {\n  if (accessToken) {\n \n    dispatch(fetchTodayWaterRecords());\n dispatch(fetchDaysArray())\n  }\n}, [dispatch, accessToken]);\n\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight;\n    }\n  }, [waterRecords]);\n\n  const handleAddWaterClick = () => {\n    setModalVisible(true);\n  };\n\n  const handleModalClose = async () => {\n    \n    setModalVisible(false);\n  \n    if (accessToken) {\n      try {\n          await dispatch(fetchTodayWaterRecords());\n          await dispatch(fetchDaysArray())\n      } catch (err) {\n        console.error(\"Error adding water record\", err);\n      }\n    }\n  };\n\n\n  const onEdit = (recordId) => {  \n    const record = waterRecords.find((record) => record._id === recordId);  \n    setCurrentRecord(record); // Сохраняем текущую запись\n    setEditModalVisible(true); // Открываем модальное окно редактирования\n  };\n  const handleEditSave = async (updatedRecord) => {\n    try {\n      await dispatch(updateWaterRecord(updatedRecord));\n      // Обновление данных\n      await dispatch(fetchTodayWaterRecords());\n      await dispatch(fetchDaysArray()) \n    } catch (err) {\n      console.error(\"Error updating water record\", err);\n    }\n  };\n\n\n  const onDelete = (recordId) => {\n    const record = waterRecords.find((record) => record._id === recordId);  \n    setCurrentRecord(record);\n    setDeleteModalVisible(true);\n  };\n \n  const handleDeleteSave = async (updatedRecord) => {\n    try {\n      // Обновление данных\n      await dispatch(fetchTodayWaterRecords());\n      await dispatch(fetchDaysArray()) \n    } catch (err) {\n      console.error(\"Error deleting water record\", err);\n    }\n  };\n\n  return (\n    <section className={styles.todayWaterListSection}>\n      <h2 className={styles.title}>Today</h2>\n      <ul className={styles.list} ref={listRef}>\n        {waterRecords.map(({ _id, amount, date }) => (\n          <li key={_id} className={styles.listItem}>\n            <div className={styles.info}>\n              <span className={styles.amount}>\n                <svg className={styles.amountIcon}>\n                  <use href=\"./images_auth/today_water.svg#icon-today_water\" ></use>\n                </svg>\n                {amount} ml\n              </span>\n              <span className={styles.time}>\n                {new Date(date).toLocaleTimeString(\"en-US\", { hour: \"2-digit\", minute: \"2-digit\" })\n              }\n              </span>\n            </div>\n            <div className={styles.actions}>\n              <button\n                className={styles.editButton}\n                onClick={() => onEdit(_id)}\n                aria-label=\"Edit\"\n              >\n                <svg width=\"16\" height=\"16\">\n                  <use href=\"./images_auth/td_editdelet.svg#icon-edit\"></use>\n                </svg>\n              </button>\n              <button\n                className={styles.deleteButton}\n                onClick={() => onDelete(_id)}\n                aria-label=\"Delete\"\n              >\n                <svg width=\"16\" height=\"16\">\n                  <use href=\"./images_auth/td_editdelet.svg#icon-delete\"></use>\n                </svg>\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button className={styles.addButton} onClick={handleAddWaterClick}>\n        + Add water\n      </button>\n      \n      {isModalVisible && (\n      <AddWaterModal\n        setModalVisible={setModalVisible}\n        onClose={handleModalClose}  // Передаем функцию\n      />\n    )}\n      {/* Модальное окно для редактирования */}\n      {isEditModalVisible && currentRecord && (\n        <EditWaterModal\n          setModalVisible={setEditModalVisible}\n          waterRecord={currentRecord}\n          onSave={handleEditSave} // Обновляем записи после редактирования\n        />\n      )}\n      {/* Модальное окно для удаления */}\n      {isDeleteModalVisible && currentRecord && (\n        <DeleteWaterModal\n          record={currentRecord} // Передаем ID записи\n          closeModal={() => setDeleteModalVisible(false)}\n          closeBackdrop={() => setDeleteModalVisible(false)}\n          onSave={handleDeleteSave} // Обновляем список после удаления\n        />\n      )}\n      <section className={styles.MonthStatsTableSection}>\n        <MonthStatsTable />\n      </section>\n    </section>\n    \n  );\n};\nexport default TodayWaterList;\n","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"HomePage_homeContainer__6ghGM\",\"waterTrackerSection\":\"HomePage_waterTrackerSection__tdyHv\",\"statsSectionsWrapper\":\"HomePage_statsSectionsWrapper__Jrh0r\",\"homeSectionsWrapper\":\"HomePage_homeSectionsWrapper__tR7W2\"};","import React, { useState } from \"react\";\nimport WaterTracker from \"../../components/WaterRatioPanel/WaterRatioPanel\";\nimport TodayWaterList from \"../../components/TodayWaterList/TodayWaterList\";\n\n// import MonthStatsTable from \"components/MonthStatsTable/MonthStatsTable\";\n\nimport styles from \"./HomePage.module.css\";\n\nconst HomePage = () => {\n  const [sliderValue, setSliderValue] = useState(0); \n  const [waterRecords, setWaterRecords] = useState([\n    \n  ]); \n\n  const handleSliderChange = (value) => {\n    setSliderValue(value);\n  };\n\n  const handleAddWater = () => {\n    const newRecord = {\n      id: Date.now().toString(),\n      amount: 200, \n      time: new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\n    };\n\n    setWaterRecords((prev) => [...prev, newRecord]);\n    setSliderValue((prev) => Math.min(prev + 10, 100)); \n  };\n\n  const handleEdit = (id) => {\n    console.log(\"Edit record with ID:\", id);\n  };\n\n  const handleDelete = (id) => {\n    setWaterRecords((prev) => prev.filter((record) => record.id !== id));\n  };\n\n  return (\n    <div className={styles.homeContainer}>\n      <div className={styles.homeSectionsWrapper}>\n      <section className={styles.waterTrackerSection}>\n        <WaterTracker\n          sliderValue={sliderValue}\n          onSliderChange={handleSliderChange}\n          onAddWaterClick={handleAddWater}\n        />\n      </section>\n      {/* <div className={styles.statsSectionsWrapper}> */}\n      {/* <section className={styles.todayWaterListSection}> */}\n        <TodayWaterList\n          waterRecords={waterRecords}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n          />\n          {/* </section> */}\n\n        {/* </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;"],"names":["_ref","setModalVisible","_useState","useState","_useState2","_slicedToArray","gender","setGender","_useState3","_useState4","weight","setWeight","_useState5","_useState6","activityTime","setActivityTime","_useState7","_useState8","requiredWater","setRequiredWater","_useState9","_useState10","waterIntake","setWaterIntake","modalRef","useRef","dispatch","useDispatch","useEffect","adjustTextareaHeight","window","addEventListener","removeEventListener","textarea","document","getElementById","style","height","scrollHeight","calculateWaterIntake","useCallback","V","isNaN","toFixed","handleEsc","e","key","clearDefault","event","target","value","restoreDefault","handleSave","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","dailyNorma","_context","prev","next","preventDefault","toast","abrupt","updateDailyNorma","unwrap","sent","error","t0","alert","concat","message","stop","_x","apply","arguments","_jsx","className","css","ref","onClick","current","children","_jsxs","SvgIcons","name","id","readOnly","onSubmit","type","checked","onChange","htmlFor","parseFloat","onFocus","onBlur","test","modalVisible","fetchUser","userInfo","useSelector","selectUserInfo","data","normaValue","daylyNorm","newNorma","console","DailyNormaModal","onClose","amount","setAmount","time","setTime","isValid","setIsValid","handleClose","populateTimeDropdown","handleKeyDown","handleChangeAmount","delta","prevAmount","Math","max","createWaterRecord","timeDropdown","now","Date","currentHour","getHours","currentMinute","floor","getMinutes","hour","minute","option","createElement","toString","padStart","textContent","selected","appendChild","valid","Number","selectTodayRecords","state","water","recordsToday","ProgressBar","sliderValue","sliderWidth","setSliderWidth","updateSliderWidth","innerWidth","styles","width","viewBox","x","y","fill","rx","cx","min","cy","r","stroke","strokeWidth","accessToken","localStorage","getItem","waterRecords","fetchTodayWaterRecords","totalWater","reduce","sum","record","sliderPercentage","handleModalClose","DailyNorma","map","index","href","AddWaterModal","waterRecord","fetchRecords","localDate","date","hours","minutes","ampm","formattedHours","_ref3","_callee2","timeElement","newTime","_newTime$split","_newTime$split2","formattedDate","recordId","_context2","_id","split","includes","parseInt","setHours","toISOString","$oid","updateWaterRecord","formattedHour","currentAmpm","formattedCurrentHour","DaysGeneralStats","isStatsOpen","closeStats","selectedDay","statsPosition","modalPosition","setModalPosition","dragging","setDragging","dragStart","setDragStart","handleDragEnd","top","left","statsStyle","transform","zIndex","handleClickOutside","contains","onMouseDown","clientX","clientY","onMouseMove","deltaX","deltaY","prevPosition","onMouseUp","onMouseLeave","month","xlinkHref","SpriteIcons","percentageOfGoal","recordsCount","MonthStatsTable","getMonthName","monthIndex","setIsStatsOpen","setSelectedDay","daysArray","setDaysArray","userToken","isLoading","setIsLoading","right","setStatsPosition","_useState11","currentMonthIndex","getMonth","currentYear","getFullYear","currentDate","getDate","currentDateInfo","_useState13","_useState14","selectedMonthIndex","setSelectedMonthIndex","_useState15","_useState16","selectedYear","setSelectedYear","monthName","useMemo","initialDaysArray","Array","from","length","_","handleMonthChange","direction","newMonthIndex","selectedMonthName","fetchDaysArray","year","then","response","isArray","newDataMap","acc","item","itemDate","dateStr","_dateStr$split","_dateStr$split2","day","indexOf","trim","parsedDay","parseDate","newUpdatedDaysArray","matchingItem","_objectSpread","catch","finally","_Fragment","disabled","Loader","percentage","isSelected","rect","currentTarget","getBoundingClientRect","isRightSide","scrollY","handleOpenStats","isOpen","DeleteWaterModal","closeModal","closeBackdrop","onSave","handleDelete","deleteWaterRecord","meta","requestStatus","toLocaleTimeString","isModalVisible","isEditModalVisible","setEditModalVisible","isDeleteModalVisible","setDeleteModalVisible","currentRecord","setCurrentRecord","listRef","scrollTop","handleEditSave","updatedRecord","handleDeleteSave","_callee3","_context3","_x2","_ref4","find","onEdit","onDelete","EditWaterModal","setSliderValue","setWaterRecords","WaterTracker","onSliderChange","onAddWaterClick","newRecord","_toConsumableArray","TodayWaterList","log","filter"],"sourceRoot":""}